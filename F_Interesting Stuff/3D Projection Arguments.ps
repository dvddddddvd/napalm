%!PS-Adobe-2.0
%%Creator: dvips(k) 5.85 Copyright 1999 Radical Eye Software
%%Title: BAMA99.dvi
%%Pages: 11
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o BAMA99.ps BAMA99.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 1999.09.30:2110
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (BAMA99.dvi)
@start
%DVIPSBitmapFont: Fa cmcsc10 10.95 34
/Fa 34 124 df<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A2120113
80A2120313005A120E5A1218127812300B1C77BE1D>39 D<EB03FE90381FFFE090387C07
F83901E001FE48486C7E48C7EA7F80000EEC3FC0001E15E0D81F80131F486C14F07FA27F
5BA2121F6C5AC8EA3FE0A216C0157F1680EDFF005D4A5A4A5AEC07E0EC3F80D91FFEC7FC
ECFFC090380007F0EC01FC6EB4FCED7F80ED3FC016E0151F16F016F8A2150F16FCA2120C
123F487E487EA316F8151F5B6CC713F01278ED3FE06C15C06C147F6C6CEBFF803A07E001
FE003903FC07FCC6B512F0013F13C0D903FEC7FC263F7BBC32>51
D<B712FEEEFFC017F80001903980000FFC6C6CC7EA01FF707F717E717E717EA2717EA284
A31707170FA360A24D5A173F604D5A4D5ADC03FEC7FC4C5AEE7FF091B6128017F891C7EA
01FE9338007F80717EEF1FF0717E717EA2717E8483A21980A719005F6017074D5A60171F
EF7FF0EFFFC048486C01075BB848C7FC17F81780393E7BBD46>66
D<B712FCEEFFC017F000019039C0001FFC6C6C48EB01FF706C7EEF3FE0EF0FF0717E717E
717E170084F07F80A2F03FC019E0181FA219F0A2F00FF8A519FCAB19F8A4F01FF0A319E0
183F19C0A2F07F801900604D5A4D5A4D5A4D5A4D5AEF7FC04C48C7FC48486CEB0FFEB812
F817C004FCC8FC3E3E7BBD4B>68 D<B912F8A3000101C0C7127F6C6C48140FEF03FC1701
1700187C183CA3181CA4181E040E130EA495C7FCA2161EA2163E167EED01FE91B5FCA3EC
8001ED007E163E161EA2160EA2F00380A3F0070093C7FCA460180EA2181EA2183EA26018
FC17011703170F48486C14FFB95AA3393E7CBD43>I<B912E0A300019038C000016C6C48
EB001FEF0FF01703A217011700A31870A41838A2161CA31800A3163CA2167C16FC150391
B5FCA3EC80031500167C163CA2161CA693C8FCAF3801FFE0B612F0A3353E7BBD41>I<DB
1FF8EB01804AB5EA8003020FECE007913A3FF803F80F9139FF80007C4948C7EA1E1FD907
FCEC0FBFD90FF0EC07FF49488049488049488049C9127F4848163F120349161F12074848
160FA2485A1807123F5B1803127FA34993C7FC12FFAB0407B512FE127F7FDC000113C094
38007F80123FA27F121FA26C7EA26C7E12037F6C7E7E6D6C15FF6D7E6D6C5C6D7ED907FC
EC03DFD901FFEC0F8F6D01C0EB3F07913A3FF801FC03020FB5EAF001020102C0C7FC9126
001FFCC8FC3F427ABF4D>I<B500C093380FFFFCA26E5E0001F1FE00D8007F18F8D977F0
163BA2D973F81673A3D971FC16E3A2D970FEED01C3A3027FED0383A26E6CEC0703A36E6C
140EA26E6C141CA36E6C1438A26E6C1470A36E6C14E0A26E6CEB01C0A3037FEB0380A292
393F800700A392381FC00EA26F6C5AA36F6C5AA26F6C5AA36F6C5AA26FB45AA3705A13F8
486C6EC7FCD807FFEF0FFEB500F80307B512FC161EA24E3E7BBD5A>77
D<B712FCEEFFC017F000019039C0000FFC6C6C48EB01FF701380EF3FC0EF1FE018F0EF0F
F8A2EF07FCA218FEA718FCA3EF0FF8A2EF1FF018E0EF3FC0EFFF80933801FE00EE1FFC91
B612E017800280C9FCB3A73801FFE0B612C0A3373E7CBD43>80 D<B712E016FE707E0001
9039C0007FF06C6C48EB0FF8EE03FE707E707F717E717EA284171F84A760173F60604D5A
4DC8FC4C5A4C5AEE0FF0EE7FC091B500FEC9FC16F891388000FEEE3F80EE0FE0707E707E
83160183160083A384A484A4725AF10380A2177F18F0053FEB07002601FFE015F8B600C0
011F5B94380FFC0E943803FE1CCBEAFFF8F01FE041407BBD49>82
D<D903FE130690391FFFC00E017FEBF81E3901FE01FC3A03F0003F3E4848EB0FFE484813
074848130390C71201003E1400007E157EA2007C153E12FCA2161EA36C150EA27E7F007F
92C7FC7F13F0EA3FFCEBFFC06C13FC6CEBFFC06C14FC6C14FF6C15C06C6C80011F800103
80D9003F7F02037F9138003FFF15070301138081167F17C0163F00E0151FA3160FA27EA3
6C1680161F7E17006C5D6C153E6D5C6D14FCD8FDF0495AD8F8FC495A3AF07FC01FC0011F
B55AD8E00349C7FC39C0003FF02A427ABF38>I<003FB912E0A3903BF0003FF0007F0180
6D48130F48C7ED07F0007E1703007C170100781700A300701870A5481838A5C81600B3B1
4B7E4B7E0103B7FCA33D3D7CBC47>I<EC01E0A24A7EA34A7EA34A7EA24A7E141CA2EC3C
FFEC387FA24A6C7EA34A6C7EA2010180ECC00FA249486C7EA349486C7EA24980010E1301
010FB5FC4980A2011CC7FC49147FA20178810170143FA201F08149141F1201486C811207
486CEC3FF8D8FFFE49B512C0A332317DB038>97 D<DA0FF81330DA7FFF13700103B5EAC0
F090390FFC03F190391FE000F9D97F80133F01FEC7121F4848140F48481407485A000F15
03491401121F491400123F5B127F1770A248C9FC1700AA6C6C1570A3123F6D15F0121F6D
15E0000F15016D15C0000715036C6C15806C6C14076C6CEC0F00D97F80133ED91FE05B90
390FFC03F00103B55AD9007F1380DA0FF8C7FC2C317BAF36>99 D<B612FCEDFFC016F03A
03FE000FF86C48EB01FEED007FEE3F80EE1FC0EE0FE0EE07F0160317F8160117FCA2EE00
FEA417FFAA17FEA3EE01FCA3EE03F817F01607EE0FE017C0EE3F80EE7F00ED01FE486CEB
0FFCB712F016C04BC7FC302F7CAE39>I<B8FCA33903FE00016C489038003F80161F160F
1607A21603A317C0ED1C01A393C7FCA2153CA215FC90B5FCA3EBFC00153CA2151CA21770
A392C712E0A41601A2EE03C0A21607160F161F486C14FFB81280A32C2F7CAE33>I<B712
FEA33903FE00036C48EB007F828282A282A3EE0380A21538A293C7FCA31578A2EC01F890
B5FCA3EBFC01EC0078A21538A592C8FCAA487EB512FCA3292F7CAE31>I<DA0FF81360DA
FFFE13E00103EBFF8190390FF807E390393FC000F34948137F01FEC7123F4848141F4848
140F48481407120F491403485A003F1501A25B007F1500A348C9FC1700A8031FB5FCA26C
7E9238001FF0EE0FE0123F7FA26C7E120F7F12076C7E6C7E6C6C141FD97F80133FD93FE0
137B90390FFC03F10103B512E00100EC8060DA0FFCC7FC30317BAF3A>I<B5D8F81FB5FC
A3D803FEC7EA7FC06C48EC3F80B190B7FCA301FCC7123FB3486CEC7FC0B5D8F81FB5FCA3
302F7CAE38>I<B512F8A33803FE006C5AB3B3A3487EB512F8A3152F7DAE1B>I<90383FFF
FCA39038007FC0EC3F80B3AD1218127EB4FCA3EC7F005A007C137E007813FE383C01F838
1F03F03807FFC0C648C7FC1E307CAE27>I<B512FCA3D803FEC8FC6C5AB3A7160EA4161C
A4163CA2167C16FC1501ED03F8486C131FB7FCA3272F7CAE2F>108
D<D8FFFE923807FFF0A3D803FF92380FFC006C5FD9DF80141DA3D9CFC01439A2D9C7E014
71A3D9C3F014E1A2D9C1F8EB01C1A3D9C0FCEB0381A2027EEB0701A36E130EA291381F80
1CA391380FC038A2913807E070A3913803F0E0A3913801F9C0A2913800FF80A3486CEB7F
00487E486C013E497EB5008091B512F0A2151C3C2F7CAE44>I<D8FFFC49B5FC7F7F0001
9138001FF06EEB0FE06EEB07C0EE0380EBDFE0EBCFF013C780EBC3FC13C180EBC0FF8015
80EC3FC0EC1FE0A2EC0FF0EC07F8A2EC03FCEC01FE140015FFED7F83153F16C3ED1FE3ED
0FF3A2ED07FBED03FFA28181A2167F163F486C141F487E486C140FB56C1307A21603302F
7CAE38>I<EC1FF891B5FC903907F00FE090390FC003F0013FC712FC017E147E49804848
EC1F804848EC0FC04848EC07E0000F16F0491403001F16F8491401003F16FCA2007F16FE
90C9FCA34816FFAA6C6CEC01FEA3003F16FCA26D1403001F16F86C6CEC07F0A26C6CEC0F
E0000316C06C6CEC1F806C6CEC3F00017E147E6D5C90390FC003F0903907F00FE00100B5
C7FCEC1FF830317BAF3A>I<B612FCEDFF8016E03A03FE000FF86C48EB03FCED00FE167F
A2EE3F80A217C0A61780A2EE7F00A216FEED03F8ED0FF090B612C093C7FC01FCC9FCB248
7EB512F8A32A2F7CAE33>I<B612E015FE6F7E3A03FE003FE06C48EB07F8ED01FC6F7EA2
828283A594C7FC5E5E4B5A4B5A4B5AED3FC090B500FEC8FC5D9038FC007FED1F806F7E82
6F7EA26F7EA582A4EF01C016FEA21501486CED0380B538F800FF93383F8700EE1FFEC9EA
03F832307CAE37>114 D<90383FC00C9038FFF81C0003EBFE3C390FE03FFC381F8007EB
0003003E1301481300157C5A153CA36C141CA27E6C14006C7E13E013FE383FFFE06C13FE
6CEBFF806C14E0000114F06C6C13F8010F13FC1300EC07FE14011400157F153F12E0151F
A37EA2151E6C143E6C143C6C147C6C14F89038C001F039FBF807E000F1B512C0D8E07F13
0038C007FC20317BAF2A>I<007FB712F8A39039801FF0073A7E000FE00000781678A200
70163800F0163CA348161CA5C71500B3A8EC3FF8011FB512F0A32E2E7CAD36>I<B5D8F8
01B5FCA3D803FEC7EA1FF06C48EC0FE0EE07C0EE0380B3AB16076C6C1500A2017E5C017F
141E6D141C6D6C133C6D6C5B6D6C485A903903FC07E00100B51280DA3FFEC7FCEC07F830
307CAE38>I<B500E0903807FFF0A3000790C7000113806C48913800FE000001167C0000
167817706D15F06D5DA26D6C495AA26E1303011F5DA26D6C49C7FCA26E5B0107140EA26D
6C5BA26E133C010114388001005CA26E13F06E5B1581023F5BA215C3021F5B15E7020F90
C8FCA2EC07FEA36E5AA26E5AA36E5AA234307EAE38>I<3B7FFFF001FFFEA30003D9C000
13E0C649EB7F80017F027EC7FC167C6D6C13786D6C5B6D6C5B15016D6C485AD903FC5B15
076D6C48C8FC903800FF1EEC7F9C15BCEC3FF86E5AA2140F6E7E14034A7E4A7EEC1EFF14
1C91383C7F804A6C7E14709138F01FE049486C7E49486C7E148001076D7E49486C7E130E
011E6D7E496E7E017C6E7E13FC000382D80FFEEC7FF8B549B512C0A3322F7DAE38>120
D<B500E0903807FFF0A3000790C7000113800001923800FE006C16F86E5C017F4A5A6D7E
6E495A011F5D6D6C13076E49C7FC0107140E6D6C131E6E5B010114386D6C13786F5A027F
5BEC3FC191381FE3C05EEC0FF76EB4C8FC5D14036E5AB04A7E91B512F0A3342F7EAE38>
I<B812FCA22E027F9832>123 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmti10 10.95 47
/Fb 47 123 df<933807FF80043F13E09338FE00F8DB01F0133EDB07E0130E4B48131F4C
137F031F14FF4BC7FCA218FE157E1878180015FE5DA31401A25DA414030103B712F0A218
E0903A0003F000070207140F4B14C0A3171F020F15805DA2173F1800141F5D5F177EA214
3F92C712FE5FA34A1301027EECF81CA3160302FEECF03C4A1538A21878187013014A0101
13F018E0933800F1C0EF7F804948EC1F0094C7FCA35C1307A2001E5B127F130F00FF5BA2
49CAFC12FEEAF81EEA703CEA7878EA1FF0EA07C0385383BF33>12
D<D801E013F03907F803FC000F130701FC13FE001F130FA4000F13073903D801EC390018
000CA20138131C01301318017013380160133001E01370491360000114E039038001C001
001380481303000EEB070048130E485B485B485B4813601F1C70BE2F>34
D<ED01801507ED0F00151C5D5D5D14014A5A4A5A4AC7FC141E143E5C14785C1301495AA2
495A5C130F49C8FCA2133EA25BA213FC5B12015BA212035B1207A25B120FA25BA2121FA2
90C9FCA25AA2123EA2127EA2127CA65AAB1278A67EA47EA2120E120F7EA26C7EA26C7E6C
7E1360215A73C325>40 D<14031580A2EC01C0EC00E0A21570A215781538153CA3151EA4
151FA2150FA7151FA9153FA2153EA3157EA2157CA215FCA215F8A21401A215F0A2140315
E0A2140715C0A2EC0F80A2141F15005C143EA25CA25CA2495A5C1303495A5C130F49C7FC
131E5B137C5B5B485A485A485A48C8FC121E5A12705A5A205A7FC325>I<EA01E0EA07F8
120FA2EA1FFCA4EA0FF8EA0798EA001813381330A21370136013E013C01201EA0380EA07
001206120E5A5A5A5A5A0E1C7A891C>44 D<387FFFFCA3B5FCA21605799521>I<120FEA
3FC0127FA212FFA31380EA7F00123C0A0A77891C>I<ED7F80913803FFE091380F80F891
383C007C02F87FD901E07F494814804948130F49C7FC010E15C0131EEB1C18EB3C1CEB38
0C0178141F17801370A2021C133F6D4814004A5BD91FE0137ED90F805B90C8FC4B5A4B5A
4B5AED1F8003FFC7FCECFFFC15F0A2EC00FC153E153F8182150F82A4151FA2121E127F15
3F485DA3484AC7FC12F800E014FE5D14016C495A0070495A0078EB0FC00038495A6C017E
C8FC380F01F83803FFE0C690C9FC2A3F78BC2E>51 D<131EEB3F80137FEBFFC05AA21480
6C13005B133C90C7FCB3120FEA3FC0127FA212FFA35B6CC7FC123C122777A61C>58
D<171C173C177CA217FCA216011603A21607A24C7EA2161DA216391679167116E1A2ED01
C1A2ED038115071601150EA2031C7FA24B7EA25D15F05D4A5AA24A5AA24AC7FC5C140E5C
021FB6FC4A81A20270C7127FA25C13015C495AA249C8FCA2130E131E131C133C5B01F882
487ED807FEEC01FFB500E0017FEBFF80A25C39417BC044>65 D<9339FF8001C0030F13E0
033F9038F803809239FF807E07913A03FC001F0FDA0FF0EB071FDA1FC0ECBF00DA7F806D
B4FC4AC77E495AD903F86E5A495A130F4948157E4948157C495A13FF91C9FC4848167812
035B1207491670120FA2485A95C7FC485AA3127F5BA312FF5BA490CCFCA2170FA2170EA2
171E171C173C173817786C16706D15F04C5A003F5E6D1403001F4B5A6D4AC8FC000F151E
6C6C5C6C6C14F86C6C495A6C6CEB07C090397FC03F8090261FFFFEC9FC010713F0010013
803A4272BF41>67 D<49B812F8A390260003FEC7121F18074B14031801F000F014075DA3
140F5D19E0A2141F4B1338A2EF7801023F027013C04B91C7FCA217F0027F5CED80011603
160F91B65AA3ED001F49EC07805CA3010392C8FC5CF003804C13070107020E14005C93C7
5A180E010F161E4A151C183CA2011F5E5C60A2013F15014A4A5A1707017F150F4D5A4A14
7F01FF913807FF80B9FCA295C7FC3D3E7BBD3E>69 D<9339FF8001C0030F13E0033F9038
F803809239FF807E07913A03FC001F0FDA0FF0EB071FDA1FC0ECBF00DA7F806DB4FC4AC7
7E495AD903F86E5A495A130F4948157E4948157C495A13FF91C9FC4848167812035B1207
491670120FA2485A95C7FC485AA3127F5BA312FF5BA30303B512FC90C7FCA2DB000190C7
FCA25FA216035FA316076C5E7FA2003F150F6D5D121F6D141F000F153F6C6C4A5A6C6C14
F76C6CEB01E36CB4EB07C1903A7FC03F81C090391FFFFE00010701F890C8FC010013803A
4272BF46>71 D<49B6FC5BA2D9000313005D5DA314075DA3140F5DA3141F5DA3143F5DA3
147F5DA314FF92C7FCA35B5CA313035CA313075CA3130F5CA3131F5CA3133F5CA2137FA2
5C497EB67EA3283E7BBD23>73 D<49B6903807FFFE605ED9000390C7000113E04B6E1300
4B15FC4E5A19E002074B5A4BEC0F804EC7FC183C020F5D4B5C4D5AEF07C0021F4AC8FC4B
131E5F5F023F5C9238C003E0EE07804CC9FC027F5B4B5AEEFF801581ECFF834B7FED0F7F
ED1E3F49017C7FECFEF89138FFE01F03C07F491380ED000F4A805C010714074A80A21603
010F815C160183131F4A6D7FA2177F013F825C173F017F82A24A81496C4A7EB6D8800FB5
12C0A261473E7BBD46>75 D<49B5933807FFFC496062D90003F0FC00505ADBBF805E1A77
1AEF1407033F923801CFE0A2F1039F020FEE071F020E606F6C140E1A3F021E161C021C04
385BA2F1707F143C023804E090C7FCF001C0629126780FE0495A02705FF00700F00E0114
F002E0031C5BA2F03803010116704A6C6C5D18E019070103ED01C00280DA03805BA29438
07000F13070200020E5C5FDB03F8141F495D010E4B5CA24D133F131E011CDAF9C05CEEFB
80197F013C6DB4C7FC013895C8FC5E01784A5C13F8486C4A5CD807FE4C7EB500F04948B5
12FE16E01500563E7BBD52>77 D<902601FFFE020FB5FC496D5CA2D900016D010013C04A
EE3F00193E70141C193CEC07BFDB3FE01438151F1978020F7FDA0E0F15708219F0EC1E07
021C6D5CA203031401023C7FDA38015DA2701303EC7800027002805BA2047F130702F014
C04A013F91C7FCA2715A0101141F4AECF00EA2040F131E010315F84A151C1607EFFC3C01
07140391C7143817FE040113784915FF010E16708218F0131E011C6F5AA2173F133C0138
5E171F137813F8486C6F5AEA07FEB500F01407A295C8FC483E7BBD44>I<EEFFC0030713
F892383F80FE9238FC003FDA03F0EB0F804A486D7EDA1F80804AC76C7E027E6E7E4A8149
4814004948811307495A4948157F133F5C49C9FC4917805B1201485AA212075B000F17FF
A25B121F190048485DA448484B5AA34D5AA25B4D5A12FF60171F60007F163F604D5AA24D
C7FC5F003F15014C5A6D5D001F4B5A4C5A6C6C4A5A4C5A6C6C4AC8FC000315FC6C6C495A
6C6CEB07E0017FEB1F8090261FC07EC9FC903807FFF801001380394273BF46>I<49B77E
18F018FC903B0003FE0003FEEF00FF4BEC7F80F03FC00207151F19E05DA2020F16F0A25D
A2141FF03FE05DA2023F16C0187F4B1580A2027FEDFF00604B495A4D5A02FF4A5A4D5A92
C7EA3FC04CB4C7FC4990B512FC17E04ACAFCA21303A25CA21307A25CA2130FA25CA2131F
A25CA2133FA25CA2137FA25C497EB67EA33C3E7BBD3E>I<49B612FCEFFF8018F0903B00
03FE000FF8EF03FE4BEB00FF8419800207ED3FC05DA219E0140F5DA3021FED7FC05DA2F0
FF80143F4B15004D5A60027F4A5A4B495A4D5AEF3F8002FF02FEC7FC92380007F892B512
E01780499038000FE04A6D7E707E707E0103814A130083A213075CA25E130F5C5F160313
1F5CA3013F020714404A16E05F017F160119C04A01031303496C1680B6D8800113079438
FE0F009338007E1ECAEA3FFCEF07F03B407BBD42>82 D<92391FE00380ED7FFC913A01FF
FE0700913907F01F8F91390FC007DF4AC66CB4FC023E6D5A4A130014FC495A4948147CA2
495AA2010F15785CA3011F1570A46E91C7FCA2808014FE90380FFFE015FC6DEBFF8016E0
6D806D806D6C7F141F02037FEC003FED07FF1501A281A282A212075A167E120EA2001E15
FE5EA25E003E14015E003F14034B5A486C5C150F6D495A6D49C8FCD8F9F0137C39F8FE01
F839F03FFFF0D8E00F13C026C001FEC9FC314279BF33>I<48B9FCA25A903AFE001FF001
01F89138E0007FD807E0163E49013F141E5B48C75BA2001E147FA2001C4B131C123C0038
14FFA2007892C7FC12704A153C00F01738485CC716001403A25DA21407A25DA2140FA25D
A2141FA25DA2143FA25DA2147FA25DA214FFA292C9FCA25BA25CA21303A25CEB0FFE003F
B67E5AA2383D71BC41>I<010C1306011C130E0178133C01E01370484813E04913C00003
13013907000380000EEB0700000C1306001C130E0018130C0038131C0030131800701338
00601330A200E0137000CFEB678039FFC07FE0A6018013C0397F003F80003CEB1E001F1C
69BE2F>92 D<147E49B47E903907C1C38090391F80EFC090383F00FF017E137F49148048
48133F485AA248481400120F5B001F5C157E485AA215FE007F5C90C7FCA21401485C5AA2
1403EDF0385AA21407EDE078020F1370127C021F13F0007E013F13E0003E137FECF3E126
1F01E313C03A0F8781E3803A03FF00FF00D800FC133E252977A72E>97
D<EB1FC0EA0FFF5CA2EA003FA291C7FCA25BA2137EA213FEA25BA21201A25BA21203A25B
147E3907F1FF809038F783E09038EF01F013FE390FF800F8A24913FC49137C485A157E5B
15FE123FA290C7FCA248130115FC127EA2140300FE14F85AA2EC07F0A215E048130F15C0
141F15800078EB3F00127C147E003C5B383E01F8381E03E06C485A6CB4C7FCEA01F81F40
76BE2A>I<EC1FC0ECFFF0903803F03C903807C01E90381F800E90383F000F017E133F49
13FF485A485A000714FE5B000F14FC48481300A2485AA3127F90C8FCA35A5AA648140300
7E1407150F151E003E143C15786C14F0EC03E0390F800F803903E07E003801FFF838003F
C0202977A72A>I<EE3F80ED1FFF1700A2ED007FA2167EA216FEA25EA21501A25EA21503
A25EA21507A25E147E903801FF8F903807C1CF90391F80EFC090383F00FF017E137F5B48
486D5A485AA2485A000F92C7FC5B001F5CA24848137EA215FE127F90C75AA214015A485C
A2140316384814F0A21407167891380FE070127C021F13F0007E013F5B003E137FECF3E1
261F01E35B3A0F8781E3802703FF00FFC7FCD800FC133E294077BE2E>I<EC3F80903801
FFE0903807E0F890381F803CEB3E0001FC131E485A485A12074848133E49133C121F4848
137C15F8EC03F0397F000FE0ECFF809038FFFC00B512C048C8FCA45AA61506150E151E00
7C143C15786C14F0EC01E06CEB07C0390F801F003807C0FC3801FFF038007F801F2976A7
2A>I<167C4BB4FC923807C78092380F83C0ED1F87161FED3F3FA2157EA21780EE0E004B
C7FCA414015DA414035DA30103B512F8A390260007E0C7FCA3140F5DA5141F5DA4143F92
C8FCA45C147EA414FE5CA413015CA4495AA4495AA4495A121E127F5C12FF49C9FCA2EAFE
1EEAF83C1270EA7878EA3FE0EA0F802A5383BF1C>I<EC03F0EC0FFC91383E0E1C9138FC
077E903901F003FE1303903807E001D90FC013FCEB1F80A2EB3F004914F8137E01FE1303
A2484814F0A2150712034914E0A2150F12074914C0A2151FA216805B153F1203ED7F006D
5BA200015B0000495A9038F80F7E90387C1EFEEB1FF8903807E0FC90C7FC1401A25DA214
03A25D001C1307007F5C48130F5D4A5A4AC7FC48137E00F85B387C03F0381FFFC0D803FE
C8FC273B7CA72A>I<EB01FC13FF5CA21303A25CA21307A25CA2130FA25CA2131FA25CA2
133FA291C8FCEC03F890387F0FFE91383E0F80D97E7813C0ECE007D9FFC013E014801400
A2485A5BA25B0003140F16C05BA20007141F16805BA2000F143F16005B5D001F147EEDFE
074913FCA2003F0101130FEDF80E1300161E48ECF01CA2007E1538A200FE1570020013E0
48EC7FC00038EC1F0028407ABE2E>I<1478EB01FCA21303A314F8EB00E01400AD137C48
B4FC38038F80EA0707000E13C0121E121CEA3C0F1238A2EA781F00701380A2EAF03F1400
12005B137E13FE5BA212015BA212035B1438120713E0000F1378EBC070A214F0EB80E0A2
EB81C01383148038078700EA03FEEA00F8163E79BC1C>I<1507ED1FC0A2153FA31680ED
0E0092C7FCADEC07C0EC3FF0EC78F8ECE07CEB01C01303EC807EEB0700A2010E13FE5D13
1E131CEB3C01A201005BA21403A25DA21407A25DA2140FA25DA2141FA25DA2143FA292C7
FCA25CA2147EA214FEA25CA213015CA2121C387F03F012FF495A5C495A4848C8FCEAF83E
EA707CEA3FF0EA0FC0225083BC1C>I<EB07F0EA03FF14E0A2EA000FA214C0A2131FA214
80A2133FA21400A25BA2137EA213FEA25BA21201A25BA21203A25BA21207A25BA2120FA2
5BA2121FA25BA2123FA290C7FCA25A1307127EA2EAFE0F130E12FCA2131E131CA2EA7C38
1378EA3C70EA1FE0EA0780144079BE17>108 D<D801F0D93F80137F3D07FC01FFE003FF
C03D0F3E07C1F80F83F03D0E1F0F00FC1E01F8001E011C90387C3800001C49D97E707F00
3C01F05C0038157F4A5C26783FC05C12704A91C7FC91C7127E00F003FE1301494A5CEA00
7EA20301140301FE5F495CA203031407000160495C180F03075D0003051F13E0494A1480
A2030FEC3F810007F001C0495CA2031F91383E0380120F494AEC0700A2033F150E001FEF
1E1C4991C7EA0FF80007C7000EEC03E0432979A74A>I<D801F0EB3F803A07FC01FFE03A
0F3E07C1F83A0E1F0F00FC001E011C137C001C49137E003C13F012385C38783FC012705C
91C7FC00F015FE495CEA007EA2150101FE5C5BA2150300015D5B15075E0003020F137049
14C0A2031F13F00007ED80E05B1681EE01C0120F49EC0380A2EE0700001FEC0F0E49EB07
FC0007C7EA01F02C2979A733>I<EC1FC0ECFFF8903803F07C90380FC01FEB1F8090393F
000F80017E14C0491307484814E0485A12075B000F15F0485AA2485AA2ED0FE0127F90C7
FCA2151F4815C05AA2ED3F80A2ED7F00A248147E007C5C007E13015D4A5A003E495A6C49
5A4A5A260F803EC7FC3807C0FC3801FFF038003F80242977A72E>I<903903E001F89039
0FF807FE903A1E7C1E0F80903A1C3E3C07C0013C137801389038E003E0EB783F017001C0
13F0ED80019038F07F0001E015F8147E1603000113FEA2C75AA20101140717F05CA20103
140F17E05CA20107EC1FC0A24A1480163F010F15005E167E5E131F4B5A6E485A4B5A9039
3FB80F80DA9C1FC7FCEC0FFCEC03E049C9FCA2137EA213FEA25BA21201A25BA21203A238
7FFFE0B5FCA22D3A80A72E>I<D801F013FC3A07FC07FF803A0F3E0F03C0260E1F1C13E0
001EEB380F001C1370003CEBE01F123814C0D8783F14C00070903880070092C7FC91C8FC
12F05BEA007EA313FE5BA312015BA312035BA312075BA3120F5BA3121F5B0007C9FC2329
79A726>114 D<EC7F80903801FFE0903807C0F890381F003C013E131C013C131E017C13
3E49137E15FEA2000114FCA215706D13007FEBFFC014FC6C13FF15806D13C06D13E0010F
13F01300140F14071403120C123F387F80011403D8FF0013E0A300FCEB07C000F0EB0F80
12700078EB1F006C133C381F01F83807FFE0C690C7FC1F297AA725>I<EB01C0EB03F013
07A25CA2130FA25CA2131FA25CA2133FA291C7FCA2007FB51280B6FC1500D8007EC7FC13
FEA25BA21201A25BA21203A25BA21207A25BA2120FA25BA2121F141C1380A2003F133C14
38EB0078147014F05C495AEA1F03495A6C48C7FCEA07FCEA01F0193A78B81E>I<137C48
B4141C26038F80137EEA0707000E7F001E15FE121CD83C0F5C12381501EA781F00700180
5BA2D8F03F1303140000005D5B017E1307A201FE5C5B150F1201495CA2151F0003EDC1C0
491481A2153F1683EE0380A2ED7F07000102FF13005C01F8EBDF0F00009038079F0E9039
7C0F0F1C90391FFC07F8903907F001F02A2979A731>I<017CEB01C048B4EB07F038038F
80EA0707000E01C013F8121E001C1403EA3C0F0038EC01F0A2D8781F130000705BA2EAF0
3F91C712E012005B017E130116C013FE5B1503000115805BA2ED07001203495B150EA25D
A25D1578000114706D5B0000495A6D485AD97E0FC7FCEB1FFEEB03F0252979A72A>I<01
7C167048B491387001FC3A038F8001F8EA0707000E01C015FE001E1403001CEDF000EA3C
0F0038177C1507D8781F4A133C00701380A2D8F03F130F020049133812005B017E011F14
784C137013FE5B033F14F0000192C712E05BA2170100034A14C049137E17031880A2EF07
0015FE170E00010101141E01F86D131C0000D9039F5BD9FC076D5A903A3E0F07C1E0903A
1FFC03FFC0902703F0007FC7FC372979A73C>I<903903F001F890390FFC07FE90393C1E
0E0F9026780F1C138001F0EBB83FD801E013F89039C007F07FEA0380000714E0D9000F14
0048151C000E4AC7FCA2001E131FA2C75BA2143F92C8FCA35C147EA314FE4A131CA30101
143C001E1538003F491378D87F811470018314F000FF5D9039077801C039FE0F7C033A7C
0E3C078027783C1E1EC7FC391FF80FFC3907E003F029297CA72A>I<137C48B414382603
8F8013FCEA0707000E7F001E1401001C15F8EA3C0F12381503D8781F14F000701380A2D8
F03F1307020013E012005B017E130F16C013FE5B151F1201491480A2153F000315005BA2
5D157EA315FE5D00011301EBF8030000130790387C1FF8EB3FF9EB07E1EB00035DA21407
000E5CEA3F80007F495AA24A5AD8FF0090C7FC143E007C137E00705B387801F0383803E0
381E0FC06CB4C8FCEA03F8263B79A72C>I<D901F01370D907FC13F0010F14E090381FFE
0190393FFF03C049EB838090387C0FCF9039F803FF009038F0007E49133C000114386C48
137890C75A4A5A4A5A4A5A4AC7FC141E5C5C5C495A495A495A49C8FC131E4913075B5B48
485B4848131E485A01F05BD80FFE137C391F1F81F8383E0FFFD83C075B486C5B00705CD8
F00190C7FC38E0007C24297BA725>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmsy10 10.95 9
/Fc 9 107 df<007FB812F8B912FCA26C17F83604789847>0 D<121EEA7F80A2EAFFC0A4
EA7F80A2EA1E000A0A799B19>I<EB0FFCEB3FFF90B512C0000314F04880488048804880
A2481580A3B712C0AA6C1580A36C1500A26C5C6C5C6C5C6C5CC614C0013F90C7FCEB0FFC
22227BA72D>15 D<D91FE01620D97FF816703801FFFE486D7E48804814F09038E01FF827
1F8007FC15F0273E0001FE15E0003CD9007F1401007CDA3FC013030078DA0FE014C00070
DA07F8130700F0DA03FEEB1F8048913A01FF807F006F90B5FC043F5B705B04075B040113
E000409238007F803C157BA047>24 D<1630167816FCA24B7EA24B7E4B7F16CF92380F87
C0A292381F03E0A292383E01F0A24B6C7EA24B137CA24A487F0203143F4B7F4A486D7EA2
4A486D7EA24AC76C7EA2023E6E7EA24A6E7E02FC814A157C494881A2494881A249486F7E
A249486F7EA249C96C7EA2013E707E017E83017C160049177CA2484883A2484883A24848
EF0F80A24848EF07C0A248CBEA03E04819F0003E180148F000F8A2BB12FCA36C19F84641
7BC051>52 D<EC1FFE49B512E0010714F8011F14FE903A7FF003FF804848C7EA3FE0D803
FCEC0FF0D807F0EC03F8D80FC0EC00FC4848157E48C97E003E8248EE0F80A20078160700
F817C0A2481603B3B3A30060EE018032397BB63D>92 D<153FEC03FFEC0FE0EC3F80EC7E
00495A5C495AA2495AB3AA130F5C131F495A91C7FC13FEEA03F8EA7FE048C8FCEA7FE0EA
03F8EA00FE133F806D7E130F801307B3AA6D7EA26D7E80EB007EEC3F80EC0FE0EC03FFEC
003F205B7AC32D>102 D<12FCEAFFC0EA07F0EA01FCEA007E6D7E131F6D7EA26D7EB3AA
801303806D7E1300147FEC1FC0EC07FEEC00FFEC07FEEC1FC0EC7F0014FC1301495A5C13
075CB3AA495AA2495A133F017EC7FC485AEA07F0EAFFC000FCC8FC205B7AC32D>I<1260
12F0B3B3B3B3B11260045B76C319>106 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmsy6 6 1
/Fd 1 15 df<EA01FE3807FF804813C0381F03E0383C00F04813780070133800F0133C48
131CA66C133C00701338007813786C13F0381F03E0380FFFC06C13803801FE0016167C97
20>14 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmr9 9 56
/Fe 56 124 df<123C127E12FFA8127EAB123E123CAB1218A61200A7123C127E12FFA412
7E123C08367AB515>33 D<003C13F0387E01F838FF03FCA2EB83FEA2EA7F81383D80F600
011306A40003130EEB000CA248131C00061318000E1338000C1330001C13704813E03870
01C00060138017177EB326>I<123C127EB4FCA21380A2127F123D1201A412031300A25A
1206120E120C121C5A5A126009177AB315>39 D<14C01301EB0380EB0F00130E5B133C5B
5BA2485A485AA212075B120F90C7FC5AA2121E123EA3123C127CA55AB0127CA5123C123E
A3121E121FA27E7F12077F1203A26C7E6C7EA213787F131C7F130FEB0380EB01C0130012
4A79B71E>I<12C07E1270123C121C7E120F6C7E6C7EA26C7E6C7EA27F1378137C133C13
3EA2131E131FA37F1480A5EB07C0B0EB0F80A514005BA3131E133EA2133C137C137813F8
5BA2485A485AA2485A48C7FC120E5A123C12705A5A124A7CB71E>I<123C127EB4FCA213
80A2127F123D1201A412031300A25A1206120E120C121C5A5A126009177A8715>44
D<B512F0A514057F921A>I<123C127E12FFA4127E123C08087A8715>I<EB0FE0EB7FFCEB
F83E3903E00F803907C007C0EB8003000F14E0391F0001F0A24814F8A2003E1300007E14
FCA500FE14FEB2007E14FCA56CEB01F8A36C14F0A2390F8003E03907C007C0A23903E00F
803900F83E00EB7FFCEB0FE01F347DB126>48 D<13075B5B137FEA07FFB5FC13BFEAF83F
1200B3B3A2497E007FB51280A319327AB126>I<EB3FC0EBFFF0000313FC380F80FF391E
007F80001CEB3FC048EB1FE048130F15F00060130712FC6C14F87E1403A3007E1307123C
C7FC15F0A2140F15E0EC1FC0A2EC3F801500147E5C495A5C495A495A495A49C7FC133E13
3C4913185B485A48481330485A48C7FC001C1470001FB512F05A5AB612E0A31D327CB126
>I<14FE903807FF80011F13E090383F00F0017C13703901F801F8EBF003EA03E01207EA
0FC0EC01F04848C7FCA248C8FCA35A127EEB07F0EB1FFC38FE381F9038700F809038E007
C039FFC003E0018013F0EC01F8130015FC1400A24814FEA5127EA4127F6C14FCA26C1301
018013F8000F14F0EBC0030007EB07E03903E00FC03901F81F806CB51200EB3FFCEB0FE0
1F347DB126>54 D<1230123C003FB6FCA34814FEA215FC0070C7123800601430157015E0
4814C01401EC0380C7EA07001406140E5C141814385CA25CA2495A1303A3495AA2130FA3
131F91C7FCA25BA55BA9131C20347CB126>I<EB0FE0EB7FFC90B5FC3903F01F803907C0
07C0390F0003E0000EEB01F0001E1300001C14F8003C1478A3123EA2003F14F86D13F0EB
C001D81FF013E09038F803C0390FFE07803907FF0F006C13DE6C13F87EEB3FFE8001F713
C0D803E313E0D8078013F0390F007FF8001E131F003EEB07FC003C1303481301EC007E12
F848143EA2151EA37E153C1278007C14787E6C14F0390F8003E03907F01FC00001B51200
38007FFCEB1FE01F347DB126>I<EB0FE0EB7FF8EBFFFE3803F83F3907E00F80390FC007
C0D81F8013E0EC03F0EA3F0048EB01F8127EA200FE14FC1400A415FEA5007E1301A2127F
7E1403EA1F80000F13073807C00E3803E01C3801F03838007FF090381FC0FC90C7FC1401
A215F8A215F01403001F14E0383F800715C0140FEC1F809038003F00001C137E381F01FC
380FFFF0000313C0C690C7FC1F347DB126>I<123C127E12FFA4127E123C1200B0123C12
7E12FFA4127E123C08207A9F15>I<123C127E12FFA4127E123C1200B0123C127E12FE12
FFA3127F123F1203A412071206A3120E120C121C1238123012701260082F7A9F15>I<EB
FFC0000313F8380F00FE001C133F48EB1F804814C0140F00FC14E07EA4127CC7EA1FC0A2
EC3F80EC7F0014FE14F8495A495A5C495AA249C7FC130EA2130C131CA21318A890C8FCA7
133C137E13FFA4137E133C1B357CB424>63 D<B7FC16E016F83A03FC0003FE0001EC00FF
EE7F80EE3FC0161F17E0160F17F0A617E0161F17C0EE3F80EE7F0016FEED03FC90B612F0
5E9039FC0007FCED00FEEE3F80EE1FC0EE0FE017F0160717F8160317FCA617F81607A2EE
0FF0EE1FE0163FEE7FC00003913803FF00B75A16F816C02E337DB236>66
D<DA03FE130C91393FFF801C91B512E0903A03FE01F83C903A0FF0003C7CD91FC0EB0EFC
D97F80130701FEC7120348481401000315005B4848157C485A173C485A171C123F5B007F
160CA390C9FC481600AB7E6D150CA3123F7F001F161C17186C7E17386C6C15306C6C1570
6D15E012016C6CEC01C0D97F80EB0380D91FC0EB0F00D90FF0131ED903FE13FC0100B512
F0023F13C0DA03FEC7FC2E377CB437>I<B77E16F016FE3A01FE0001FF00009138003FC0
EE0FE0707E707E707E707E177E177FEF3F80A2EF1FC0A3EF0FE0A418F0AA18E0A3171F18
C0A21880173F18005F17FE5F4C5AEE07F04C5AEE3FC000014AB45AB748C7FC16F8168034
337EB23B>I<B5D8FE03B512F8A3000190C73807FC006C486E5AB390B7FCA349C71203B3
A3486C4A7EB5D8FE03B512F8A335337EB23A>72 D<017FB5FCA39038003FE0EC1FC0B3B1
127EB4FCA4EC3F805A0060140000705B6C13FE6C485A380F03F03803FFC0C690C7FC2035
7DB227>74 D<B512FEA3D803FEC9FC6C5AB3A9EE0180A416031700A45EA25E5E5E5E16FE
00031407B7FCA329337DB230>76 D<D8FFFC923801FFF86D5DA20003EFFE00D801BFED06
FCA3D99F80140CA2D98FC01418A3D987E01430A2D983F01460A3D981F814C0A3D980FCEB
0180A2027EEB0300A36E1306A26E6C5AA36E6C5AA36E6C5AA26E6C5AA36E6C5AA3913800
FD80A2037FC7FCA3486C133ED80FF04B7EB5011C90387FFFF8A33D337CB246>I<D8FFFE
91381FFFF87F80C6030013006E143CD9DFE01418EBCFF0A2EBC7F8EBC3FCA2EBC1FEEBC0
FF6E7EA26E7E6E7EA26E7E6E7E6E7EA26E7E6E7EA2ED7F80ED3FC0ED1FE0A2ED0FF0ED07
F8A2ED03FCED01FEED00FFA2EE7F98EE3FD8A2EE1FF8160F1607A216031601A2486C1400
D807F81578B500C01438A2171835337EB23A>I<B612FEEDFFC016F03A03FC0007FC0001
EC00FE167FEE3F80EE1FC017E0160FA217F0A617E0A2EE1FC0A2EE3F80EE7F0016FEED07
F890B65A168001FCC9FCB3A2487EB512F8A32C337DB234>80 D<90381FE00390387FFC07
48B5FC3907F01FCF390F8003FF48C7FC003E80814880A200788000F880A46C80A27E92C7
FC127F13C0EA3FF013FF6C13F06C13FF6C14C06C14F0C680013F7F01037F9038003FFF14
0302001380157F153FED1FC0150F12C0A21507A37EA26CEC0F80A26C15006C5C6C143E6C
147E01C05B39F1FC03F800E0B512E0011F138026C003FEC7FC22377CB42B>83
D<007FB712FEA390398007F001D87C00EC003E0078161E0070160EA20060160600E01607
A3481603A6C71500B3AB4A7E011FB512FCA330337DB237>I<B500FE90381FFFF8A30001
90C813006C48153C1718B3AF1738017F1530A217706D6C1460011F15E06E495A010F1403
6D6C495A6D6C49C7FCD901FC131E6DB413FC91383FFFF0020F13C0020190C8FC35357EB2
3A>I<B5D8F007B539800FFFF0A3000390C7273FF000011300D801FC6E48EB007C1A386D
140F00001930836D020715706D1860A26E496C14E0013F60A26ED919FC1301011F60A26E
D930FE1303010F95C7FCA26ED9607F5B01071706A26E9039C03F800E0103170CA2913BFC
01801FC01C01011718A2913BFE03000FE03801001730A2DAFF06EB07F0027F5EA2038CEB
03F8023F5EA203D8EB01FC021FEDFD80A203F0EB00FF020F93C8FCA24B800207157EA24B
143E0203153CA24B141C020115184C357FB24F>87 D<0003130C48131C000E1338481370
00181360003813E0003013C0EA700100601380A2EAE00300C01300A400DE137800FF13FC
EB83FEA2EA7F81A2383F00FC001E1378171774B326>92 D<EB7F803803FFF0380F80FC38
1C003E003F133F6D6C7E6E7EA26E7EEA1F00C7FCA4EB01FF131FEBFF873803FC07EA0FF0
EA1FC0EA3F80127F13004815C05AA3140FA26C131F6C133B3A3F8071F180391FC1E1FF26
07FFC013003900FE003C22237DA126>97 D<EA03F012FFA312071203AEEC3F80ECFFE090
38F3C0F89038F7007E01FE7F49EB1F8049EB0FC05BED07E016F0A2150316F8AA16F01507
16E0A2ED0FC07F6DEB1F8001ECEB3F0001CF137C90388381F8903801FFE0C76CC7FC2535
7EB32B>I<EB07F8EB3FFF9038FC07C03901F000E03903E003F03807C007120FEA1F8012
3F90380003E04890C7FCA2127E12FEAA127FA26C14187F001F14386D1330000F14706C6C
13E03903F001C03900FC0F8090383FFE00EB07F01D237EA122>I<153FEC0FFFA3EC007F
81AEEB07F0EB3FFCEBFC0F3901F003BF3907E001FF48487E48487F8148C7FCA25A127E12
FEAA127E127FA27E6C6C5BA26C6C5B6C6C4813803A03F007BFFC3900F81E3FEB3FFCD90F
E0130026357DB32B>I<EB0FE0EB7FFCEBF83F3903F00F80D807E013C0390FC007E0381F
800315F0EA3F0014014814F8127EA212FEA2B6FCA248C8FCA5127E127FA26C1418A26C6C
1338000F14306D13706C6C13E03901F003C03900FC0F00EB3FFEEB07F01D237EA122>I<
EB01FCEB07FF90381F078090383E0FC0EB7C1F13FCEA01F8A20003EB070049C7FCACB512
F0A3D803F0C7FCB3A7487E387FFFE0A31A357FB417>I<151F90391FC07F809039FFF8E3
C03901F07FC73907E03F033A0FC01F83809039800F8000001F80EB00074880A66C5CEB80
0F000F5CEBC01F6C6C48C7FCEBF07C380EFFF8380C1FC0001CC9FCA3121EA2121F380FFF
FEECFFC06C14F06C14FC4880381F0001003EEB007F4880ED1F8048140FA56C141F007C15
006C143E6C5C390FC001F83903F007E0C6B51280D91FFCC7FC22337EA126>I<EA03F012
FFA312071203AEEC1FC0EC7FF09038F1E0FC9038F3807C9038F7007E13FE497FA25BA25B
B3486CEB7F80B538C7FFFCA326347EB32B>I<EA0780EA0FC0EA1FE0A4EA0FC0EA0780C7
FCAAEA07E012FFA3120F1207B3A6EA0FF0B5FCA310337EB215>I<EA03F012FFA3120712
03AF913803FFE0A36E1300EC00F8EC01E05D4A5A020FC7FC141C5C5C14F0EBF3F8EBF7FC
13FEEBFC7EEBF87F496C7E141F6E7E8114076E7E8114016E7E81486CEBFF80B500C313F0
A324347EB329>107 D<EA07E012FFA3120F1207B3B3A7EA0FF0B5FCA310347EB315>I<27
03F01FE013FF00FF90267FF80313C0903BF1E07C0F03E0903BF3803E1C01F02807F7003F
387FD803FE1470496D486C7EA2495CA2495CB3486C496C487EB53BC7FFFE3FFFF0A33C21
7EA041>I<3903F01FC000FFEB7FF09038F1E0FC9038F3807C3907F7007EEA03FE497FA2
5BA25BB3486CEB7F80B538C7FFFCA326217EA02B>I<EB07F0EB3FFE9038FC1F803901F0
07C03903C001E000078048486C7E48C7127CA248147E003E143E007E143FA300FE1580A8
007E1500A36C147EA26C147C6D13FC6C6C485A00075C3903F007E03900FC1F80D93FFEC7
FCEB07F021237EA126>I<3903F03F8000FFEBFFE09038F3C0F89038F7007ED807FE7F6C
48EB1F804914C049130F16E0ED07F0A3ED03F8A9150716F0A216E0150F16C06D131F6DEB
3F80160001FF13FC9038F381F89038F1FFE0D9F07FC7FC91C8FCAA487EB512C0A325307E
A02B>I<903807F00390383FFC07EBFC0F3901F8038F3807E001000F14DF48486CB4FC49
7F123F90C77E5AA25A5AA9127FA36C6C5B121F6D5B000F5B3907E003BF3903F0073F3800
F81EEB3FF8EB0FE090C7FCAAED7F8091380FFFFCA326307DA029>I<3803E07C38FFE1FF
9038E38F809038E71FC0EA07EEEA03ECA29038FC0F8049C7FCA35BB2487EB512E0A31A21
7FA01E>I<EBFF06000713CE381F00FE003C133E48131E140E5A1406A27EA200FE90C7FC
6C7EEA7FFC383FFFC014F0000F7F6C7FC67FEB0FFF1300EC3F8000C0131F140F6C1307A3
7E15006C5B6C130E6C5B38F7807838E1FFE038C07F8019237EA11E>I<1330A51370A313
F0A21201A212031207381FFFFEB5FCA23803F000AF1403A814073801F806A23800FC0EEB
7E1CEB1FF8EB07E0182F7FAD1E>I<D803F0133F00FFEB0FFFA30007EB007F000380B35D
A35D12016D4813800000903803BFFC90387E073FEB1FFED907F8130026227EA02B>I<B5
EBFFF0A3D80FF0EB3F800007EC1F000003140E150C6D131C00011418A26C6C5BA26D1370
017E1360137F6D5BA290381F8180A214C3010F90C7FCA2EB07E6A214FE6D5AA26D5AA36D
5AA2146024217E9F29>I<B53A1FFF81FFF0A33C07F801FC003F8001F049EB1E00000301
00141C816C6C017C1318A26D017E1338000002FE1330A290267E01FF5B159F168090263F
030F5BA216C0903A1F8607C180A202C613E390260FCC0390C7FCA2D907FC13F6ECF80116
FE6D486C5AA36D481378A36D48133034217F9F37>I<3A7FFF807FF8A33A07F8001FC000
03EC0F800001EC070015066C6C5BA26D131C017E1318A26D5BA2EC8070011F1360ECC0E0
010F5BA2903807E180A214F3010390C7FC14FBEB01FEA26D5AA31478A21430A25CA214E0
5CA2495A1278D8FC03C8FCA21306130EEA701CEA7838EA1FF0EA0FC025307F9F29>121
D<B712F8A22502809426>123 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmbx9 9 11
/Ff 11 117 df<120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F00C7FCA9120FEA3FC0
EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F000C217AA019>58 D<B500E091383FFFFC808080C6
6D9138003C00808101F77F13F301F17F8101F07F6E7E6E7E6E7E6E7F806E7F826E7F6E7F
6F7E6F7E6F7E816F138017C06F13E06F13F06F13F8EE7FFCEE3FFE161FEE0FFF18BC7013
FC828282177F173F171FA2170F170717031701B500F01400187C183CA23E337DB245>78
D<B66CB639800FFFFCA400019026C0000101C0C7EA1F001B1E6E6F143E6C6F163CA26E6E
6C147C017F19786E4A6C14F8013F61A26E496D1301011F616E497F010F03CF4A5AA26E01
076D13076D03875DA29226800F03EB800F6D96C7FCDBC01F6E5A6DDA1E01141EA2DBE03E
ECE03E6DDA3C00143CDBF07C14F0027F0178017F5BA2DBF8F8ECF8F8023F49013F5BA2DB
FDE0EB1FFD021F5F03FF15FF6E496D5BA36E496D5BA26E90C76C90C8FCA36E486E5AA24B
140002005EA20378157856347EB25B>87 D<EB7FFE0003B512E04814F8390FF00FFC391F
F803FF806E138016C0157F6C5A6C5AEA0180C8FCEC7FFF010FB5FC90B6FC0003EBF07F00
0F1300EA1FF8485A485A485A5BA315FF7F007F5B6D4813E03A3FF80FBFFF000FB5121F00
03EBFC0F39007FE00728217EA02B>97 D<903803FF80013F13F090B512FC48EB03FE3907
FC007F4848EB3F804848EB1FC05B003FEC0FE0127F5B16F012FF150790B6FCA301C0C8FC
A4127F7F123F16F06C7E000F14016C6CEB03E0D803FEEB0FC03A01FF807F806C6CB51200
011F13FC010313E024217EA029>101 D<16F890390FFC07FE90387FFF9F48B6127F3907
FC0FFC380FF003001F14FED9E001133E003FECFF1C1600A6001F5CEBF003000F5C3907FC
0FF890B512E0486C1380D90FFCC7FC48C9FCA37F7F90B512F015FE6CECFF8016E06C15F0
6C15F84815FC121F393F80001F48C7EA03FE481401481400A46C14016C6CEB03FC6C6CEB
07F86C6CEB0FF0D80FFCEB7FE00003B61280C6ECFE00010F13E028327EA12C>103
D<EA03F0487E487E487EA66C5A6C5A6C5AC8FCA8EA01FC12FFA4120F1207B3A5B512C0A4
12357DB418>105 D<3901F803FF00FF010F13C0023F13F09138FC0FF89039F9E007FC38
0FFBC06CB4486C7E1400A25BA25BB2B539E07FFFF0A42C217DA031>110
D<903803FF80011F13F090B512FE48EB01FF3A07FC007FC0D80FF0EB1FE0001F15F04913
0F003F15F8491307007F15FCA300FF15FEA8007F15FCA26D130F003F15F8001F15F06D13
1F6C6CEB3FE06C6CEB7FC03A01FF01FF006CEBFFFE013F13F80103138027217EA02C>I<
3901F81F8000FFEB7FF0ECFFF89038F9E3FC9038FBC7FE380FFF876C1307A213FEEC03FC
EC01F8EC0060491300B1B512F0A41F217EA024>114 D<133CA5137CA313FCA21201A212
031207001FB51280B6FCA3D807FCC7FCB0EC03C0A79038FE078012033901FF0F006C13FE
EB3FFCEB0FF01A2F7EAE22>116 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmr6 6 2
/Fg 2 51 df<13E01201120712FF12F91201B3A7487EB512C0A212217AA01E>49
D<EA01FC3807FF80381C0FC0383003E0386001F0EB00F812F86C13FCA2147C1278003013
FCC7FC14F8A2EB01F0EB03E014C0EB0780EB0F00131E13385B5B3801C00CEA0380380600
185A5A383FFFF85AB512F0A216217CA01E>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmsy8 8 1
/Fh 1 15 df<EB7F803801FFE0000713F8380FC0FC381F003E003C130F00387F00781480
0070130300F014C0481301A66C1303007014800078130700381400003C5B001F133E380F
C0FC6CB45A000113E038007F801A1A7C9D23>14 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi msam10 10.95 1
/Fi 1 93 df<180C181E183E187E18FCEF01F8EF03F0EF07E018C0EF0F80171FEF3F0017
7E5F4C5A4C5A5F4C5A160F4C5A4CC7FC167E5E5E4B5A15034B5A4B5A4B5A4BC8FC157E15
7C5D14014A5A4A5A4A5A4A5A92C9FC143E147E5C495A495A495A5C495A131F49CAFC137E
5B485A485A5B485A120F485A48CBFC127EB912FC18FEA26C17FC373F7BBE42>92
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmr8 8 10
/Fj 10 58 df<EB3FC0EBFFF03803E07C48487E48487E497E001EEB0780A2003E14C0A2
48EB03E0A500FC14F0B0007C14E0A3007E1307003E14C0A36CEB0F806C14006D5A3807C0
3E3803F0FC3800FFF0EB3FC01C2D7DAB23>48 D<130C133C137CEA03FC12FFEAFC7C1200
B3B113FE387FFFFEA2172C7AAB23>I<EB7F803801FFF0380780FC380E003F48EB1F8048
EB0FC05A0060EB07E012F000FC14F07E1403A3007C1307C7FCA215E0140F15C0141F1580
EC3F00147E147C5C495A495A495A495A011EC7FC5B5B4913305B485A4848136048C7FC00
0E14E0001FB5FC5A4814C0B6FCA21C2C7DAB23>I<EB3FC03801FFF03807C0FC380E007E
487FEC1F80003F14C0A2EB800F1300A2000C131FC7FC1580A2EC3F00143E5C5CEB03F0EB
FFC014F0EB00FC143FEC1F8015C0140F15E0A2EC07F0A21238127C12FEA3EC0FE012F800
6014C00070131F6C1480001EEB3F00380780FC3801FFF038007FC01C2D7DAB23>I<140E
A2141E143EA2147E14FEA2EB01BE1303143E1306130E130C131813381330136013E013C0
EA0180120313001206120E120C5A123812305A12E0B612FCA2C7EA3E00A9147F90381FFF
FCA21E2D7EAC23>I<000CEB0180380FC01F90B512005C5C14F014C0D80C7EC7FC90C8FC
A8EB1FC0EB7FF8380DE07C380F801F01001380000E130F000CEB07C0C713E0A2140315F0
A4127812FCA448EB07E012E0006014C00070130F6C14806CEB1F006C133E380780F83801
FFE038007F801C2D7DAB23>I<EB03F8EB0FFE90383E0780EBF8013901F007C03803E00F
EA07C0EA0F80A2391F00078091C7FC123EA2127EA2127CEB0FC038FC3FF0EBF07C38FDC0
1EB4487E01001380EC07C04814E0A214034814F0A4127CA3127EA2003E14E01407121E00
1F14C06CEB0F803907801F003803C03E6C6C5A38007FF0EB1FC01C2D7DAB23>I<123012
3C003FB512F8A215F05A15E039700001C000601480140348EB0700140E140CC7121C5C14
3014705C495AA2495AA249C7FCA25B130E131EA2133EA3133C137CA413FCA913781D2E7C
AC23>I<EB1FC0EBFFF03803E07C3807801E48487E001EEB0780A248EB03C0A4123E1407
003F1480381FC00F01E01300EBF81E6C6C5A3807FFF86C13E0C6FCEB3FF8EBFFFC3803C7
FFD807831380D81F0013C0001E133F48EB1FE0007C13070078EB03F012F84813011400A4
6C14E000781301007C14C0003C13036CEB0780390F800F003807E03C3801FFF038003FC0
1C2D7DAB23>I<EB3F80EBFFF03803E0783807C03E48487E48487E003E14801407007E14
C0127C00FC14E01403A315F0A5007C1307127EA2003E130F7E6C131F3807803B3803E0F3
3800FFC390383F03E013001407A215C0A2140F001E1480003F14005C143E143C003E5B00
1C5B380E03E03807FF80D801FEC7FC1C2D7DAB23>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmmi10 10.95 29
/Fk 29 109 df<EC0FF0EC7FFE903801F81F903907E007C049486C6C13E0D93F80EBF001
90267F000114C001FE14F84848EB00FC484815030007178049147E000FEE0700485A5F48
48150E171E171C007F163C49153817785F00FF5E90C8127F5F5F94C7FCA248157EA2127E
007F15FE15016C4A7E92390F3F03806C6C131E6C6C9038781F070007D901E014003B03F0
1F800F8E3B00FFFE0007FCD91FE0EB01F033297CA73A>11 D<EE7F80923801FFE0923807
80F892381E003C03387F03F0131F4A48EB0F804A5A5D4AC7EA07C0140E021E140F141C14
3C023815805C171F5C180001015D4A143E5F010315FC4A495A4C5A01079038FFE7C00203
EBFF80DB807EC7FC92B57E49C6EBC7C0010E90380003E0160183011E81011C1400A28313
3C1338A313781370A301F01401495DA3000115035F16075F0003150F5F4C5A6D4AC7FC00
07157E01785C0138495A6DEB03E0D80F0FEB0FC0270E07C07FC8FC903801FFF89038007F
C0001E90CAFC121CA3123C1238A312781270A312F05AA432527EBF33>I<EB03F8D90FFE
140F90383FFF8090B56C131E4880486E131C2607FC1F143C270FE003F81338261F800014
7890C7007C1370003E023C13F0003C023E13E048EC1E010070020E13C000F0EC0F034816
801507C81307EE8700168FED038E169E169CA216BC16B8A216F85EA25EA35EA35EA31507
A293C7FC5DA4151EA3153E153CA45DA31570A21560303C7FA72F>I<EC01C0EC0FFF023F
13E0027913F0ECE03F903801C00FEC8007ED01E0010390C7FCA280130180A280A26D7E80
A2147E147F6E7EA26E7E81140FEC7FF0903801F7F8EB07C790381F83FCEB3E03EB7C0101
F87F12013803F000485AA24848137E485AA2123F90C7FCA25A127EA300FE147C5A15FCA2
5D1401A25D007C13035DA26C495A4A5A6C91C7FC6C131E6C6C5A3803E0783800FFE0EB3F
8024427CC028>I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A798919>58
D<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A312011380120313005A
120E5A1218123812300B1C798919>I<ED0180ED03C01507A21680150FA216005DA2151E
153EA2153C157CA2157815F8A25D1401A25D1403A25D1407A25D140FA24AC7FCA2141E14
3EA2143C147CA2147814F8A25C1301A25C1303A25C1307A25C130FA291C8FC5BA2131E13
3EA25BA2137813F8A25B1201A25B1203A25B1207A25B120FA290C9FC5AA2121E123EA212
3C127CA2127812F8A25A1260225B7BC32D>61 D<17075F84171FA2173F177FA217FFA25E
5EA24C6C7EA2EE0E3F161E161C1638A21670A216E0ED01C084ED0380171FED07005D150E
5DA25D157815705D844A5A170F4A5A4AC7FC92B6FC5CA2021CC7120F143C14384A81A24A
140713015C495AA249C8FC5B130E131E4982137C13FED807FFED1FFEB500F00107B512FC
A219F83E417DC044>65 D<49B712F818FF19E090260001FEC7EA3FF0F007F84B6E7E727E
850203815D1A80A20207167F4B15FFA3020F17004B5C611803021F5E4B4A5A180FF01FE0
023F4B5A4B4A5ADD01FEC7FCEF07F8027FEC7FE092B6C8FC18E092C7EA07F84AEC01FE4A
6E7E727E727E13014A82181FA213034A82A301075F4A153FA261010F167F4A5E18FF4D90
C7FC011F5E4A14034D5A013FED1FF04D5A4AECFFC0017F020790C8FCB812FC17F094C9FC
413E7DBD45>I<DC1FF81307923801FFFE030F9038FF800E923A7FF007E01E4A48C7EAF0
3EDA03FCEC787EDA0FF0EC3CFCDA3FC0141F4A48140F4AC8FC4948ED07F8EB07F8494815
03131F4A16F049481501495A13FF4890C913E05B1203485A19C0485AA2485A95C7FC123F
5BA2127F5BA312FF5BA590CCFC183CA21838A21878187018F06C6C5E17014D5A003F5F6D
15074DC7FC001F161E6C6C5D6D5D6C6C5D00034B5AD801FEEC07C06C6C4AC8FCD97FC013
7E90391FF803F80107B512E0010114809026001FF8C9FC40427BBF41>I<49B712F818FF
19C0D9000190C7EA3FF0F00FF84BEC03FCF000FE197F0203EE3F805DF11FC0A20207EE0F
E05D1AF0A2020F16075DA21AF8141F5DA2190F143F5DA21AF0147F4B151FA302FF17E092
C9123FA21AC049177F5C1A8019FF010318005C4E5A61010716034A5E4E5A180F010F4C5A
4A5E4E5A4EC7FC011F16FE4A4A5AEF07F8013FED0FE0EF3FC04A49B4C8FC017FEC0FFCB8
12F017C004FCC9FC453E7DBD4B>I<49B912C0A3D9000190C71201F0003F4B151F190F1A
80020316075DA314075D1A00A2140F4B1307A24D5B021F020E130E4B92C7FC171EA2023F
5C5D177CEE01FC4AB55AA3ED800302FF6D5A92C7FCA3495D5C19380401147801034B1370
4A16F093C85AA2010716014A5E180361010F16074A4BC7FCA260011F163E4A157E60013F
15014D5A4A140F017F15FFB95AA260423E7DBD43>I<49B9FCA3D9000190C7120718004B
157F193F191E14035DA314075D191CA2140F5D17074D133C021F020E13384B1500A2171E
023F141C4B133C177C17FC027FEB03F892B5FCA39139FF8003F0ED00011600A2495D5CA2
160101035D5CA293C9FC13075CA3130F5CA3131F5CA2133FA25C497EB612F8A3403E7DBD
3A>I<49B6D8C03FB512F81BF01780D900010180C7383FF00093C85B4B5EA2197F14034B
5EA219FF14074B93C7FCA260140F4B5DA21803141F4B5DA21807143F4B5DA2180F4AB7FC
61A20380C7121F14FF92C85BA2183F5B4A5EA2187F13034A5EA218FF13074A93C8FCA25F
130F4A5DA21703131F4A5DA2013F1507A24A5D496C4A7EB6D8E01FB512FCA2614D3E7DBD
4C>72 D<49B612F0A3D900010180C7FC93C8FC5DA314035DA314075DA3140F5DA3141F5D
A3143F5DA3147F5DA314FF92C9FCA35B5C180C181E0103161C5C183C183813074A157818
7018F0130F4AEC01E0A21703011FED07C04A140F171F013FED3F8017FF4A1303017F021F
1300B9FCA25F373E7DBD3E>76 D<49B56C93B512C050148062D90001F18000704B90C7FC
03DF5F1A0E1A1D1403039FEE39FC1A711A739126078FE015E3030F5FF101C3F10387140F
020E93380707F0A2F10E0F021E161C91261C07F05E1938F1701F143C023804E05BA29538
01C03F0278ED038091267003F85EF00700060E137F14F002E04B91C8FCA24E5B01015E4A
6C6C5D60943801C00113030280DA03805BA294380700030107150E91C700FE5D5F190749
5D010E4B5CA24D130F011E6E5A011C60705A013C171F017C92C7FC01FE027E5DD803FF4D
7EB500FC017C017FB512E0167804385E5A3E7CBD58>I<49B56C49B512F81BF0A290C76D
9039000FFE004AEE03F0705D735A03DF150302037F038F5E82190791380787FC030793C7
FC1503705C140F91260E01FF140EA26F151E021E80021C017F141C83193C023C6D7E0238
1638161F711378147802706D6C1370A2040714F002F0804A01035C8318010101EC01FF4A
5E82188313034A91387FC380A2EF3FC7010716E791C8001F90C8FC18F718FF4981010E5E
1707A2131E011C6F5AA2013C1501137C01FE6F5AEA03FFB512FC187818704D3E7DBD49>
I<EE3FF00303B5FC92391FC03FC092397E0007E0DA01F8EB01F8DA07E06D7E4A48147E02
3FC87E027EED1F804A16C0D903F8150F494816E0495A4948ED07F0A2494816F849C9FC5B
48481603A2484817FCA2485A000F17075B121FA25B123F19F84848160FA44848EE1FF0A3
F03FE0A390CAEA7FC0A2F0FF80A219004D5A1703604D5A6C7E4D5A4D5A003F5F4D5A6C6C
4BC7FC17FE6C6C4A5A4C5A6C6CEC07E06C6CEC1FC06C6C4A5A6C6C02FEC8FC90393F8003
F890390FE01FE00103B5C9FC9038007FF03E427BBF45>I<49B712F018FF19C0D9000190
C76C7EF00FF84BEC03FC1801020382727E5DA214071A805DA2140F4E13005DA2021F5E18
034B5D1807023F5E4E5A4B4A5A4E5A027F4B5A06FEC7FC4BEB03FCEF3FF091B712C005FC
C8FC92CBFCA25BA25CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA25C497E
B612E0A3413E7DBD3A>I<EE3FF00303B5FC92391FC03FC092397E0007E0DA01F8EB01F8
DA07E06D7E4A48147EDA3F8080027EC813804AED1FC0EB03F84948ED0FE0130F494816F0
4A1507494816F8137F49C9FC485AA2484817FCA2485A120FA2485AA25B123F19F8484816
0FA44848EE1FF0A3F03FE0A290CAFCF07FC0A2198018FF19004D5AA24D5A606C16074D5A
6D01F85C003FD903FE495ADA0F07495A271FC01C0349C7FC9139380180FE260FE030EB81
FCEEC3F82607F070EBC7E03B03F86000CFC0D801FCECFF80D800FE4AC8FC90393FF003F8
90270FF81FE0130C0103B5FC9026007FF1141CDA00011418183882607013F017039338FC
0FE093B5FC6060A26F91C7FC5F705AEE3FF0EE0FC03E527BBF48>I<49B77E18F818FFD9
0001D900017F9438003FE04BEC0FF0727E727E14034B6E7EA30207825DA3020F4B5A5DA2
4E5A141F4B4A5A614E5A023F4B5A4B4A5A06FEC7FCEF03FC027FEC0FF04BEBFF8092B500
FCC8FC5F9139FF8001FE92C7EA7F80EF1FC084496F7E4A1407A28413035CA2170F13075C
60171F130F5CA3011F033F5B4AEE038018E0013F17071A004A021F5B496C160EB600E090
380FF01E05075B716C5ACBEAFFE0F03F8041407DBD45>I<DB07FC1338ED3FFF92B5EAC0
70913A03F807F0F091390FE000F9DA1F80137F4AC7EA3FE0027E141F5C4948140F4A15C0
01031507495AA2010F16805CA3011F1600A38094C7FC808014FE90380FFFC015FC6DEBFF
C016F86D14FE6D806D81023F800207801400030F7F1500163F707E160F1607A216031207
5A5F120EA2001E15075FA24C5A123E003F4B5AA26D4AC7FC007F157E6D5C6D495AD87DF0
495AD8F8FCEB0FE090393F803F8027F01FFFFEC8FCD8E00713F839C0007FC035427BBF38
>I<48B912FCA25A913A0003FE000F01F84A1301D807E0EE00F8491307491778000F5D90
C7FC001E140FA2001C4B1470123C0038141FA200785D1270033F15F000F018E0485DC816
00157FA25EA215FFA293C9FCA25CA25DA21403A25DA21407A25DA2140FA25DA2141FA25D
A2143FA25DA2147FA214FF497F001FB612FCA25E3E3D7FBC35>I<007FB500F090387FFF
FE19FC5D26007FE0C7000313804A913800FC004A5D187001FF16F0A291C95AA248160160
5BA200031603605BA20007160795C7FC5BA2000F5E170E5BA2001F161E171C5BA2003F16
3C17385BA2007F1678A2491570A200FF16F0A290C95AA216015F5A16035F16074CC8FC16
0E161E5E007F5D5E6C4A5A6D495A6C6C495A6C6C011FC9FC6C6C137E3903FC03F8C6B512
E0013F1380D907FCCAFC3F407ABD3E>I<027FB5D88007B512C091B6FCA2020101F8C7EB
F8009126007FE0EC7F804C92C7FC033F157C701478616F6C495A4E5A6F6C495A4EC8FC18
0E6F6C5B606F6C5B6017016F6C485A4D5A6F018FC9FC179E17BCEE7FF85F705AA3707EA2
83163F167FEEF7FCED01E7EEC3FEED0383ED070392380E01FF151E4B6C7F5D5D4A486D7E
4A5A4A486D7E92C7FC140E4A6E7E5C4A6E7E14F0495A49486E7E1307D91F806E7ED97FC0
14072603FFE0EC1FFF007F01FC49B512FEB55CA24A3E7EBD4B>88
D<B66C0103B51280A3000101E0C8387FF0006C49ED3F80017F94C7FC183C606D6C157060
6D6C4A5A17034D5A6D6C4AC8FC170E5F6D6C5C17785F6D6C495A5F6E495A6D4AC9FC160E
6DEB801E5E5E91387FC0705EEDC1C0EC3FE3EDE78003FFCAFC6E5A5D6E5AA25DA25D141F
A35D143FA35D147FA392CBFC5CA3495AA3497E0007B512FEA3413E7DBD35>I<027FB712
F0A3DAFFFCC7EA3FE003E0EC7FC092C8EAFF8049484A13004A4A5A5C4A4A5A49484A5A4A
4A5A4D5A49484A5A4D5A91C74890C7FC5B010E4A5A4C5A4C5A011E4A5A90C8485A4C5A4C
5A4B90C8FCA24B5A4B5A4B5A4B5A4B5A4B5A4B5AA24A90C9FC4A5A4A5A4A5A4A4814704A
4814F04A485C14FF5D4990C7120149485D49481403495A49485D49481407495A4DC7FC49
485C4890C8FC48485D4848157E484815FE484814034848EC0FFC16FF48B7FCB8FC5F3C3E
7BBD3E>I<EB01FC13FF5CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA291
C9FC16FC49EB03FE92380F0780017EEB3C0FED703F01FE13E0913801C07F9038FC0380EC
07000001010E14004A131C494890C7FC5C00035BEBF9C0495A01FFC9FC5A14F0EBE3FE90
38E07F80000FEB1FC06E7EEBC00781001F1303160E1380A2003F151E0207131C010013E0
A2485DA2007E01031378167000FE01015B15F1489038007F800038023EC7FC29407CBE2F
>107 D<EB07F0EA03FF14E0A2EA000FA214C0A2131FA21480A2133FA21400A25BA2137E
A213FEA25BA21201A25BA21203A25BA21207A25BA2120FA25BA2121FA25BA2123FA290C7
FCA25AEB0380127EA212FE130700FC1300A25B130EA2EA7C1C133CEA3E38EA1FF0EA07C0
14407DBE1B>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmr10 10.95 78
/Fl 78 124 df<4AB4EB0FE0021F9038E03FFC913A7F00F8FC1ED901FC90383FF03FD907
F090397FE07F80494801FF13FF4948485BD93F805C137F0200ED7F00EF003E01FE6D91C7
FC82ADB97EA3C648C76CC8FCB3AE486C4A7E007FD9FC3FEBFF80A339407FBF35>11
D<EC03FE91383FFF809138FE03E0903903F800F0D90FE013384948137C90393F8001FE90
387F00035B5BA2485A6F5AED007093C7FCAA16FEB7FCA33901FC000315011500B3AC486C
497EB5D8F87F13FCA32E407EBF33>I<EC03FF023F13EE9138FE01FEEB03F090380FE003
EB1FC0EB3F80EB7F005B5B150148481300AEB7FCA3D801FCC7FCB3AE486C497EB5D8F87F
13FCA32E407EBF33>I<DA03FE49B4FC91273FFF801F13C0913BFE03E07F01F0903C03F0
00F1FC0078D90FE0D97FF0131C49484948133E4948484913FF494848495A5B491500A248
485C03016E5A0300153896C7FCAA197FBBFCA3D801FCC738FE00018485B3AC486C496CEC
FF80B5D8F87FD9FC3F13FEA347407EBF4C>I<121EEA7F80EAFFC0A9EA7F80ACEA3F00AC
121EAB120CC7FCA8121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A4179C019>33
D<001E130F397F803FC000FF137F01C013E0A201E013F0A3007F133F391E600F30000013
00A401E01370491360A3000114E04913C00003130101001380481303000EEB070048130E
0018130C0038131C003013181C1C7DBE2D>I<121EEA7F8012FF13C0A213E0A3127FEA1E
601200A413E013C0A312011380120313005A120E5A1218123812300B1C79BE19>39
D<1430147014E0EB01C0EB03801307EB0F00131E133E133C5B13F85B12015B1203A2485A
A2120F5BA2121F90C7FCA25AA3123E127EA6127C12FCB2127C127EA6123E123FA37EA27F
120FA27F1207A26C7EA212017F12007F13787F133E131E7FEB07801303EB01C0EB00E014
701430145A77C323>I<12C07E12707E7E121E7E6C7E7F12036C7E7F12007F1378137CA2
7FA2133F7FA21480130FA214C0A3130714E0A6130314F0B214E01307A614C0130FA31480
A2131F1400A25B133EA25BA2137813F85B12015B485A12075B48C7FC121E121C5A5A5A5A
145A7BC323>I<1506150FB3A9007FB912E0BA12F0A26C18E0C8000FC9FCB3A915063C3C
7BB447>43 D<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A312011380
120313005A120E5A1218123812300B1C798919>I<B512FEA617067F961E>I<121EEA7F80
A2EAFFC0A4EA7F80A2EA1E000A0A798919>I<ED0180ED03C01507A21680150FA216005D
A2151E153EA2153C157CA2157815F8A25D1401A25D1403A25D1407A25D140FA24AC7FCA2
141E143EA2143C147CA2147814F8A25C1301A25C1303A25C1307A25C130FA291C8FC5BA2
131E133EA25BA2137813F8A25B1201A25B1203A25B1207A25B120FA290C9FC5AA2121E12
3EA2123C127CA2127812F8A25A1260225B7BC32D>I<EB01FE90380FFFC090383F03F090
387C00F849137C48487F48487F4848EB0F80A2000F15C04848EB07E0A3003F15F0A290C7
12034815F8A64815FCB3A26C15F8A56C6CEB07F0A3001F15E0A36C6CEB0FC0A26C6CEB1F
80000315006C6C133E6C6C5B017C5B90383F03F090380FFFC0D901FEC7FC263F7DBC2D>
I<EB01C013031307131F137FEA07FFB5FC139FEAF81F1200B3B3ACEB7FF0B612F8A31D3D
78BC2D>I<EB07FC90383FFF8090B512E03903F01FF83907C007FC390F0001FE001E6D7E
001C1580003CEC7FC05AED3FE01270B4FC6DEB1FF07FA56C5A6CC7FC120CC813E0153FA2
16C0157F168015FF16004A5A5D4A5A4A5A5D4A5A4A5A4AC7FC147E147C5C495A495A495A
495A49C71270133E133C5B4914E0485A485A485A48C7120148B6FCA25A4815C0B7FCA324
3D7CBC2D>I<EB07FC90383FFF809038F80FE03901E003F839078001FCD80F007F000E6D
7E001E1580D81F80137F486C14C07FA27F5BA2121F6C5AC8138015FF1600A24A5AA24A5A
5DEC07E04A5A023FC7FCEB1FFCECFF809038000FE0EC07F86E7E6E7E6E7E1680ED7FC0A2
16E0153FA216F0A2120C123F487E487EA316E0A249137F6CC713C01278EDFF807E6C4913
006C495A3907C007FC3903F80FF0C6B55A013F1380D907F8C7FC243F7CBC2D>I<150E15
1E153EA2157EA215FE1401A21403EC077E1406140E141CA214381470A214E0EB01C0A2EB
0380EB0700A2130E5BA25B5BA25B5B1201485A90C7FC5A120E120C121C5AA25A5AB8FCA3
C8EAFE00AC4A7E49B6FCA3283E7EBD2D>I<00061403D80780131F01F813FE90B5FC5D5D
5D15C092C7FC14FCEB3FE090C9FCACEB01FE90380FFF8090383E03E090387001F8496C7E
49137E497F90C713800006141FC813C0A216E0150FA316F0A3120C127F7F12FFA416E090
C7121F12FC007015C012780038EC3F80123C6CEC7F00001F14FE6C6C485A6C6C485A3903
F80FE0C6B55A013F90C7FCEB07F8243F7CBC2D>I<EC1FE0ECFFF8903803F03E90380FC0
0F90391F000780133E017EEB1FC049133F4848137F12035B12074848EB3F80ED1F00001F
91C7FC5BA2123FA3485AA214FE903887FF8039FF8F07E090389C01F09038B800FC01B013
7E13F0497F16804914C0A2ED1FE0A34914F0A5127FA6123F6D14E0A2121FED3FC0A26C6C
1480A20007EC7F006C6C137E6C6C5B6C6C485A90387E07F06DB45A010F1380D903FCC7FC
243F7CBC2D>I<1238123C123F90B612FCA316F85A16F016E00078C712010070EC03C0ED
078016005D48141E151C153C5DC8127015F04A5A5D14034A5A92C7FC5C141EA25CA2147C
147814F8A213015C1303A31307A3130F5CA2131FA6133FAA6D5A0107C8FC26407BBD2D>
I<EB03FC90381FFF8090387C07E09038F001F83901E0007C48487F48487F48C7FCED0F80
121E16C0003E1407A4123FA26DEB0F807F6C6C131F6D140001FC133E6C6C5B9038FF8078
6C6D5A6CEBF3E06CEBFF806C91C7FC133F6D13C06D7F013F13F801787F48486C7E3903E0
1FFF48486C1380260F800313C048487E489038007FE0003E143F007E141F007CEC0FF015
07481403A31501A46C15E0007C1403A2007E15C06C14076CEC0F806DEB1F006C6C133ED8
07F05B3901FC03F86CB512E0011F1380D903FCC7FC243F7CBC2D>I<EB03FCEB1FFF9038
7E07C09038FC03F048486C7E48486C7E4848137C000F147E4848137F81003F15805B007F
15C0A2151F12FF16E0A516F0A5127F153FA36C7EA2001F147F120F6C6C13FF6D13DF0003
13013900F8039F90387E0F1FD91FFE13E0EB07F090C7FCA2ED3FC0A41680157FD80F8014
00487E486C13FEA24A5A5D49485AEB8007391E000FE0001F495A260FC07FC7FC3803FFFE
6C13F838003FC0243F7CBC2D>I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E00C7FCB3121E
EA7F80A2EAFFC0A4EA7F80A2EA1E000A2779A619>I<121EEA7F80A2EAFFC0A4EA7F80A2
EA1E00C7FCB3121E127FEAFF80A213C0A4127F121E1200A412011380A3120313005A1206
120E120C121C5A1230A20A3979A619>I<007FB912E0BA12F0A26C18E0CDFCAE007FB912
E0BA12F0A26C18E03C167BA147>61 D<EB1FF890B5FC3903E01FC0390F0007F0001EEB03
F848EB01FC4814FE140000FE14FF7E7FA46CC7FC123EC7EA01FEA2EC03FCEC07F815F0EC
0FC0EC1F80EC3F00143E5C147814F85C13015CA2495AA25CAB91C7FC90C8FCA8EB0780EB
1FE0A2497EA46D5AA2EB078020407BBF2B>63 D<ED7FE0913807FFFE91391F801F809139
780001E0D901E0EB0078D90780141E49C87E011E6F7E0138ED01C0496F7E491670000117
7848488249D93F80131C28070001FFF07F48902607E07C130F000E90260FC01E7F001E90
263F00071480001C499038038003003C01FED901C013C0003849ECFE010101EC00FF2678
03F8027F13E000701700495AA200F018F000E01870495AA96D7E12F01270A26D7E007818
E0263801FC5C01005C003C7F001C017F49EB01C0001E6DEB077F000E903B0FC01E3F8380
000F903B07E07C1F87006C903A01FFF007FE3C0380003F8001F86D90CAFC6C7E12001370
7F011EEE03F06D160F6D6CED3FC0D901E0913801FE00D90078EC1FF0913A1F8003FF8002
07B500F8C7FC9126007FFEC8FC3C417BBF47>I<15074B7EA34B7EA34B7EA34B7EA34B7E
15E7A2913801C7FC15C3A291380381FEA34AC67EA3020E6D7EA34A6D7EA34A6D7EA34A6D
7EA34A6D7EA349486D7E91B6FCA249819138800001A249C87EA24982010E157FA2011E82
011C153FA2013C820138151FA2017882170F13FC00034C7ED80FFF4B7EB500F0010FB512
F8A33D417DC044>I<B712FCEEFF8017F00001903980000FF86C6CC7EA03FE707E701380
EF7FC0EF3FE0A2EF1FF0A218F8A3170F171FA318F0A2EF3FE0177F18C0EFFF804C1300EE
03FCEE0FF8EE7FE091B6C7FC17E091C7EA07FCEE01FE933800FF80EF7FC0EF3FE0EF1FF0
18F8170F18FC1707A218FEA718FC170FA2EF1FF818F0173FEF7FE0EFFFC0040313804848
6C90380FFE00B85A17E094C7FC373E7DBD40>I<DB3FF01306912603FFFE130E020F9038
FF801E913A3FF007E03E9139FF8000F8D903FEC7EA7C7ED907F8EC1EFE4948140FD93FE0
140749481403495A91C812014848150012034848167E5B000F173EA24848161EA2123F5B
180E127FA349160012FFAC127F7F180EA2123FA27F001F171E181C6C7EA20007173C6D16
386C6C1678000117706C6C16F06EEC01E06D6C15C06D6C1403D90FF0EC07806D6CEC1F00
D903FE143E902600FF8013F891393FF007F0020FB512C0020391C7FC9138003FF037427B
BF42>I<B712FCEEFF8017E000019039C0001FF86C6C48EB03FEEE00FF717E717EEF0FE0
84717E717E170184717EA21980187F19C0A3F03FE0A519F0AB19E0A5F07FC0A21980A218
FF19004D5AA24D5A6017074D5A4D5AEF7FC04DC7FCEE03FE48486CEB1FF8B85A178004FC
C8FC3C3E7DBD45>I<B912E0A300019038C000016C6C48EB001FEF0FF01703A217011700
A31870A418381638A41800A21678A216F81501150791B5FCA3EC8007150115001678A216
38A2180EA3181C93C7FCA4183C1838A21878A318F8EF01F0A21707170F173F48486CEB03
FFB912E0A3373E7DBD3E>I<B91280A300019038C000036C6C48EB007FEF1FC0170F1707
A21703A31701A4EF00E0A21638A31800A31678A216F81501150791B5FCA3EC8007150115
001678A21638A693C8FCAF3801FFE0B612F0A3333E7DBD3B>I<DB3FE0130C912603FFFE
131C021F9038FF803C913A7FF00FC07C9139FF0001F0D903FC90380078FC4948143DD91F
E0141F4948140F4948140701FF15034890C8FC491501485A000716005B000F177C5B001F
173CA2485AA2181C127FA25B95C7FC12FFAB041FB512F0127FA26D9139000FFE00EF03FC
123FA27F121FA26C7EA212077F12036C7E7F6C7F6D6C14076D7E6D6C140FD907F8141ED9
03FEEC3C7C902600FF80EBF83C913A7FF007F01C021FB5EAC00C020391C8FC9138003FF0
3C427BBF47>I<B6D8C01FB512F8A3000101E0C7383FFC0026007F80EC0FF0B3A691B7FC
A30280C7120FB3A92601FFE0EC3FFCB6D8C01FB512F8A33D3E7DBD44>I<B612F0A3C6EB
F000EB3FC0B3B3B2EBFFF0B612F0A31C3E7EBD21>I<011FB512FCA3D9000713006E5A14
01B3B3A6123FEA7F80EAFFC0A44A5A1380D87F005B007C130700385C003C495A6C495A6C
495A2603E07EC7FC3800FFF8EB3FC026407CBD2F>I<B612F8A3000101E0C9FC38007F80
B3B0EF0380A517071800A45FA35FA25F5F5F4C5A160748486C133FB8FCA3313E7DBD39>
76 D<B500C093B512C0A300016D4BEBE000D8007F1880D977F0ED03BFA3D973F8ED073F
A3D971FC150EA2D970FE151CA3027F1538A36E6C1470A36E6C14E0A26E6CEB01C0A36E6C
EB0380A36E6CEB0700A26E6C130EA36E6C5BA3037F5BA26F6C5AA36F6C5AA392380FE1C0
A3923807F380A26FB4C7FCA36F5AA213F8486C6D5AD807FFEFFFE0B500F80178017FEBFF
C0A34A3E7CBD53>I<B56C91B512F88080D8007F030713006EEC01FC6E6E5A1870EB77FC
EB73FEA2EB71FF01707FA26E7E6E7EA26E7E6E7EA26E7E6E7EA26E7E6E7FA26F7E6F7EA2
6F7E6F7EA26F7E6F7EA26F7E6F1380A2EE7FC0EE3FE0A2EE1FF0EE0FF8A2EE07FCEE03FE
A2EE01FF7013F0A2177F173FA2171F170FA2170701F81503487ED807FF1501B500F81400
A218703D3E7DBD44>I<ED7FE0913807FFFE91391FC03F8091397E0007E04948EB03F8D9
07F0EB00FE4948147F49486E7E49486E7E49C86C7E01FE6F7E0001834915030003834848
6F7EA248486F7EA2001F188049167F003F18C0A3007F18E049163FA300FF18F0AC007F18
E06D167FA4003F18C0A26C6CEEFF80A36C6C4B1300A26C6C4B5A00035F6D150700015F6C
6C4B5A6D5E6D6C4A5A6D6C4A5A6D6C4AC7FC6D6C14FED901FCEB03F8D9007FEB0FE09139
1FC03F80912607FFFEC8FC9138007FE03C427BBF47>I<B712F8EEFF8017E000019039C0
003FF86C6C48EB07FCEE01FE707EEF7F80EF3FC018E0A2EF1FF0A218F8A818F0A2EF3FE0
A218C0EF7F80EFFF004C5AEE07FCEE3FF091B612C04CC7FC0280C9FCB3A73801FFE0B612
C0A3353E7DBD3E>I<B712C016FCEEFF800001D9C00013E06C6C48EB1FF0EE07FCEE01FE
707E84717EA2717EA284A760177F606017FF95C7FCEE01FCEE07F8EE1FE0EEFF8091B500
FCC8FC16F091388001FCED003FEE1FC0707E707E83160383160183A383A484A4F0C00419
0EA28218E0057F131E2601FFE0161CB600C0EB3FF094381FF83805071370CA3801FFE094
38003F803F407DBD43>82 D<D907FC131890391FFF8038017FEBE0783901FC03F83A03F0
007CF8D807C0133F4848130F001F140748C7FC003E1403007E1401A2007C140012FC1678
A46C1538A27EA26C6C14007F7FEA3FF8EBFF806C13F86CEBFF806C14F06C14FC6C14FF6C
15C0013F14E0010714F0EB007F020713F89138007FFC150FED07FE15031501ED00FFA200
E0157FA3163FA27EA3163E7E167E6C157C6C15FC6C15F86D13016DEB03F06DEB07E0D8F9
FCEB0FC03AF07F803F8090391FFFFE00D8E00713F839C0007FC028427BBF33>I<003FB9
1280A3903AF0007FE001018090393FC0003F48C7ED1FC0007E1707127C00781703A30070
1701A548EF00E0A5C81600B3B14B7E4B7E0107B612FEA33B3D7DBC42>I<B600C090B512
F8A3000101E0C70007130026007F80EC01FC715A1870B3B3A4013F16F06E5DA21701011F
5E80010F15036E4A5A010793C7FC6D6C5C6D6C141E6D6C5C027F14F86E6C485A91390FF0
0FE00203B51280020049C8FCED1FF03D407DBD44>I<B500FE017FB5D88007B5FCA30003
01C0010101E0C713F86C90C849EC3FE07148EC0F807E7215006E143F017F190E84A26D6C
60A24D7E6D6C60A2EFE7F86D6C60A2933801C3FC6E18F001076104037F6E028114010103
6104077F17006D6C4D5AA2040EEB7F806D6C4DC7FCA24CEB3FC0DA7F80160EA24CEB1FE0
03C0161E023F171C047814F0DBE070010F133C021F173804F014F84C1307DA0FF05EA2DB
F1C0EB03FCDA07F95EA2DBFB80EB01FEDA03FF6F5AA293C8FCA26E5FA24B157F020094C8
FCA24B81037C153EA20378151E0338151C58407EBD5D>87 D<003FB712F8A391C7EA1FF0
13F801E0EC3FE00180EC7FC090C8FC003EEDFF80A2003C4A1300007C4A5A12784B5A4B5A
A200704A5AA24B5A4B5AA2C8485A4A90C7FCA24A5A4A5AA24A5AA24A5A4A5AA24A5A4A5A
A24990C8FCA2495A4948141CA2495A495AA2495A495A173C495AA24890C8FC485A177848
5A484815F8A24848140116034848140F4848143FED01FFB8FCA32E3E7BBD38>90
D<486C13C00003130101001380481303000EEB070048130E0018130C0038131C00301318
0070133800601330A300E01370481360A400CFEB678039FFC07FE001E013F0A3007F133F
A2003F131F01C013E0390F0007801C1C73BE2D>92 D<EB0FF8EBFFFE3903F01F80390780
07E0000F6D7E9038E001F8D81FF07F6E7EA3157F6C5AEA0380C8FCA4EC1FFF0103B5FC90
381FF87FEB7F803801FC00EA07F8EA0FE0485A485AA248C7FCEE038012FEA315FFA3007F
5BEC03BF3B3F80071F8700261FC00E13CF3A07F03C0FFE3A01FFF807FC3A003FC001F029
2A7DA82D>97 D<EA01FC12FFA3120712031201B1EC03FC91381FFF8091387C07E09039FD
E001F09039FFC000FC4A137E91C77E49158049141F17C0EE0FE0A217F0A2160717F8AA17
F0A2160FA217E0161F17C06D1580EE3F006D5C6E13FE9039F3C001F89039F1E003F09039
E0780FC09026C03FFFC7FCC7EA07F82D407EBE33>I<49B4FC010F13E090383F00F8017C
131E4848131F4848137F0007ECFF80485A5B121FA24848EB7F00151C007F91C7FCA290C9
FC5AAB6C7EA3003FEC01C07F001F140316806C6C13076C6C14000003140E6C6C131E6C6C
137890383F01F090380FFFC0D901FEC7FC222A7DA828>I<ED01FC15FFA3150715031501
B114FF010713E190381F80F990387E003D49131FD803F81307485A49130348481301121F
123F5B127FA290C7FCA25AAA7E7FA2123FA26C7E000F14037F000714076C6C497E6C6C49
7ED8007C017913F890383F01F190380FFFC1903A01FE01FC002D407DBE33>I<EB01FE90
380FFFC090383F03F09038FC01F848486C7E4848137E48487F000F158049131F001F15C0
4848130FA2127F16E090C7FCA25AA290B6FCA290C9FCA67EA27F123F16E06C7E1501000F
15C06C6C13036DEB07806C6C1400C66C131E017E5B90381F80F8903807FFE0010090C7FC
232A7EA828>I<EC1FC0EC7FF8903801F83C903807E07E90380FC0FFEB1FC1EB3F811401
137FEC00FE01FE137C1500AEB6FCA3C648C7FCB3AE487E007F13FFA320407EBF1C>I<16
7C903903F801FF903A1FFF078F8090397E0FDE1F9038F803F83803F001A23B07E000FC06
00000F6EC7FC49137E001F147FA8000F147E6D13FE00075C6C6C485AA23901F803E03903
FE0FC026071FFFC8FCEB03F80006CAFC120EA3120FA27F7F6CB512E015FE6C6E7E6C15E0
6C810003813A0FC0001FFC48C7EA01FE003E140048157E825A82A46C5D007C153E007E15
7E6C5D6C6C495A6C6C495AD803F0EB0FC0D800FE017FC7FC90383FFFFC010313C0293D7E
A82D>I<EA01FC12FFA3120712031201B1EC01FE913807FFC091381E07E091387803F091
38E001F8D9FDC07F148001FF6D7E91C7FCA25BA25BB3A6486C497EB5D8F87F13FCA32E3F
7DBE33>I<EA01E0EA07F8A2487EA46C5AA2EA01E0C8FCACEA01FC127FA3120712031201
B3AC487EB512F0A3143E7DBD1A>I<1478EB01FEA2EB03FFA4EB01FEA2EB00781400AC14
7FEB7FFFA313017F147FB3B3A5123E127F38FF807E14FEA214FCEB81F8EA7F01387C03F0
381E07C0380FFF803801FC00185185BD1C>I<EA01FC12FFA3120712031201B292B51280
A392383FFC0016E0168093C7FC153C5D5D4A5AEC07C04A5A4AC8FC143E147F4A7E13FD90
38FFDFC0EC9FE0140F496C7E01FC7F496C7E1401816E7E81826F7E151F826F7EA282486C
14FEB539F07FFFE0A32B3F7EBE30>I<EA01FC12FFA3120712031201B3B3B1487EB512F8
A3153F7DBE1A>I<2701F801FE14FF00FF902707FFC00313E0913B1E07E00F03F0913B78
03F03C01F80007903BE001F87000FC2603F9C06D487F000101805C01FBD900FF147F91C7
5B13FF4992C7FCA2495CB3A6486C496CECFF80B5D8F87FD9FC3F13FEA347287DA74C>I<
3901F801FE00FF903807FFC091381E07E091387803F000079038E001F82603F9C07F0001
138001FB6D7E91C7FC13FF5BA25BB3A6486C497EB5D8F87F13FCA32E287DA733>I<14FF
010713E090381F81F890387E007E01F8131F4848EB0F804848EB07C04848EB03E0000F15
F04848EB01F8A2003F15FCA248C812FEA44815FFA96C15FEA36C6CEB01FCA3001F15F86C
6CEB03F0A26C6CEB07E06C6CEB0FC06C6CEB1F80D8007EEB7E0090383F81FC90380FFFF0
010090C7FC282A7EA82D>I<3901FC03FC00FF90381FFF8091387C0FE09039FDE003F03A
07FFC001FC6C496C7E6C90C7127F49EC3F805BEE1FC017E0A2EE0FF0A3EE07F8AAEE0FF0
A4EE1FE0A2EE3FC06D1580EE7F007F6E13FE9138C001F89039FDE007F09039FC780FC0DA
3FFFC7FCEC07F891C9FCAD487EB512F8A32D3A7EA733>I<02FF131C0107EBC03C90381F
80F090397F00387C01FC131CD803F8130E4848EB0FFC150748481303121F485A1501485A
A448C7FCAA6C7EA36C7EA2001F14036C7E15076C6C130F6C7E6C6C133DD8007E13799038
3F81F190380FFFC1903801FE0190C7FCAD4B7E92B512F8A32D3A7DA730>I<3901F807E0
00FFEB1FF8EC787CECE1FE3807F9C100031381EA01FB1401EC00FC01FF1330491300A35B
B3A5487EB512FEA31F287EA724>I<90383FC0603901FFF8E03807C03F381F000F003E13
07003C1303127C0078130112F81400A27E7E7E6D1300EA7FF8EBFFC06C13F86C13FE6C7F
6C1480000114C0D8003F13E0010313F0EB001FEC0FF800E01303A214017E1400A27E15F0
7E14016C14E06CEB03C0903880078039F3E01F0038E0FFFC38C01FE01D2A7DA824>I<13
1CA6133CA4137CA213FCA2120112031207001FB512C0B6FCA2D801FCC7FCB3A215E0A912
009038FE01C0A2EB7F03013F138090381F8700EB07FEEB01F81B397EB723>I<D801FC14
FE00FF147FA3000714030003140100011400B3A51501A31503120015076DEB06FF017E01
0E13806D4913FC90381FC078903807FFE00100903880FE002E297DA733>I<B539E00FFF
E0A32707FE000313006C48EB00FC5E00015D7F00005DA26D13016D5CA26D6C485AA2ECC0
07011F91C7FCA290380FE00EA2ECF01E0107131CA26D6C5AA2ECFC7801011370A2ECFEF0
01005BA2EC7FC0A36E5AA26EC8FCA3140E2B287EA630>I<B53BC3FFFE03FFF8A3290FFE
003FE00013C06C486D48EB3F806C4817006D010F141E00016F131C15076D163C00004A6C
1338A2017F5E4B7E151DD93F805DED3DFC1538D91FC04A5AED78FE9238707E03D90FE001
7F5BEDE03F02F0140701070387C7FC9138F1C01F02F9148F010315CE9138FB800F02FF14
DE6D15FCED00076D5DA24A1303027E5CA2027C1301023C5C023813003D287EA642>I<B5
39F01FFFE0A30003D9C00F1300C690388007F8D97F0013E002805BD93FC05B011F49C7FC
90380FE00EECF01E6D6C5A01035B6D6C5A6E5AEB00FF6E5A6E5A81141F814A7E81147BEC
F1FC903801E1FEECC0FF01037F49486C7ED90F007F011E6D7E013E130F496D7E01FC8048
6C80000F4A7EB539803FFFF8A32D277FA630>I<B539E00FFFE0A32707FE000313006C48
EB01FC6F5A00015D7F00005DA2017F495AA2EC8003013F5CA26D6C48C7FCA26E5A010F13
0EA26D6C5AA2ECF83C01031338A26D6C5AA2ECFEF001005BA2EC7FC0A36E5AA36EC8FCA2
140EA2141E141C143C1438A2147800181370127EB45BA2495AA248485AD87E07C9FCEA78
0EEA3C3CEA1FF8EA07E02B3A7EA630>I<001FB61280A2EBE0000180140049485A001E49
5A121C4A5A003C495A141F00385C4A5A147F5D4AC7FCC6485AA2495A495A130F5C495A90
393FC00380A2EB7F80EBFF005A5B484813071207491400485A48485BA248485B4848137F
00FF495A90B6FCA221277EA628>I<B812F0A22C0280982D>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmbx10 10.95 42
/Fm 42 122 df<EA0FC0EA1FE0EA3FF0EA7FF8EAFFFCA313FEA3127F123F121FEA0FDEEA
001EA2133E133CA2137C1378A213F8EA01F0A2EA03E0EA07C0EA0F80121FEA3F00121E12
0C0F2079BE1D>39 D<EC0780140F141FEC3E0014FE495A495A5C495A130F495A495AA249
C7FC5B5B1201485AA212075BA2120F5B121FA3485AA4127F5BA512FFB0127FA57F123FA4
6C7EA3120F7F1207A27F1203A26C7E12007F7F6D7EA26D7E6D7E13076D7E806D7E6D7E14
3EEC1F80140F1407195A77C329>I<127012F8127C7EEA3F806C7E6C7E12076C7E7F6C7E
6C7EA2137F80133F806D7EA280130FA280130780A36D7EA4807FA51580B01500A55B5CA4
495AA35C130F5CA2131F5CA2495A5C137F91C7FC13FEA2485A485A5B485A120F485A485A
003EC8FC5A5A1270195A7AC329>I<B612E0A91B097F9823>45 D<EA0FC0EA1FE0EA3FF0
EA7FF8EAFFFCA6EA7FF8EA3FF0EA1FE0EA0FC00E0E798D1D>I<140F143F5C495A130F48
B5FCB6FCA313F7EAFE071200B3B3A8007FB612F0A5243C78BB34>49
D<903803FF80013F13F890B512FE00036E7E4881260FF80F7F261FC0037F4848C67F486C
6D7E6D6D7E487E6D6D7EA26F1380A46C5A6C5A6C5A0007C7FCC8FC4B1300A25E153F5E4B
5AA24B5A5E4A5B4A5B4A48C7FC5D4A5AEC1FE04A5A4A5A9139FF000F80EB01FC495A4948
EB1F00495AEB1F8049C7FC017E5C5B48B7FC485D5A5A5A5A5AB7FC5EA4293C7BBB34>I<
903801FFE0010F13FE013F6D7E90B612E04801817F3A03FC007FF8D807F06D7E82D80FFC
131F6D80121F7FA56C5A5E6C48133FD801F05CC8FC4B5A5E4B5A4A5B020F5B902607FFFE
C7FC15F815FEEDFFC0D9000113F06E6C7E6F7E6F7E6F7E1780A26F13C0A217E0EA0FC048
7E487E487E487EA317C0A25D491580127F49491300D83FC0495A6C6C495A3A0FFE01FFF8
6CB65A6C5DC61580013F49C7FC010313E02B3D7CBB34>I<ED01F815031507A2150F151F
153FA2157F15FF5C5CA25C5CEC1FBFEC3F3F143E147C14FCEB01F814F0EB03E01307EB0F
C0EB1F801400133E137E5B485A5B485A1207485A5B48C7FC5A127E5AB812F8A5C8387FF8
00AA49B612F8A52D3C7DBB34>I<00071538D80FE0EB01F801FE133F90B6FC5E5E5E5E93
C7FC5D15F85D15C04AC8FC0180C9FCA9ECFFC0018713FC019F13FF90B67E020113E09039
F8007FF0496D7E01C06D7E5B6CC77FC8120F82A31780A21207EA1FC0487E487E12FF7FA2
1700A25B4B5A6C5A01805C6CC7123F6D495AD81FE0495A260FFC075B6CB65A6C92C7FCC6
14FC013F13F0010790C8FC293D7BBB34>I<EC07FF023F13C049B512F001078049EB03FC
90383FF80090397FE001FE9038FFC0034849487E48495AA2485A120FA2485A6F5A003F6E
5A6F5A92C8FC485AA21402EC3FFE00FF496C7E01F9B512E001FB809138E03FF89039FF80
0FFC4A6C7E825B6F13804915C0A317E05BA4127FA5123FA26D15C0121FA2000F4A13806D
150012076C6C495A6C6D485A6C9038E07FF86DB55A6D5C6D1480010749C7FC010013F02B
3D7CBB34>I<EA0FC0EA1FE0EA3FF0EA7FF8EAFFFCA6EA7FF8EA3FF0EA1FE0EA0FC0C7FC
ACEA0FC0EA1FE0EA3FF0EA7FF8EAFFFCA6EA7FF8EA3FF0EA1FE0EA0FC00E2879A71D>58
D<16FCA24B7EA24B7EA34B7FA24B7FA34B7FA24B7FA34B7F157C03FC7FEDF87FA2020180
EDF03F0203804B7E02078115C082020F814B7E021F811500824A81023E7F027E81027C7F
A202FC814A147F49B77EA34982A2D907E0C7001F7F4A80010F835C83011F8391C87E4983
133E83017E83017C81B500FC91B612FCA5463F7CBE4F>65 D<B812F8EFFF8018F018FC84
26003FFCC7EA3FFF050F13807113C07113E08319F0A27113F8A719F05FA24D13E019C04D
13804D1300EF3FFE933801FFF891B712E0188018F818FE02FCC7380FFF80050313C07113
E07113F019F8F07FFCA2F03FFEA219FFA38460A419FE187FA2F0FFFC4D13F85F4D13F005
3F13E0BA12C0190018FC18F095C7FC403E7DBD4A>I<B812F8EFFF8018F018FC18FF2600
3FFCC76C13C005077F05017F716C7E727E727E727E721380A27213C0A27213E0A21AF084
A21AF8A41AFCA5197FA319FFA51AF8A41AF0A2601AE0A24E13C0A24E13804E1300604E5A
4E5A4D485A050713E0057F5BBA5A4EC7FC18F818C005F8C8FC463E7DBD50>68
D<BAFCA4198026003FFEC7123F1707170183183FA2181FF00FC0A31807EE07C0A3F003E0
A3160F95C7FC161F163F16FF91B6FCA54AC6FC163F161F040F147CA2160719F8A593C712
01A219F01803A21807A2180FF01FE0183F18FF1703173FBAFCA219C0A33E3D7DBC45>I<
B912FEA48426003FFEC77E170F1703170084A284F01F80A3180FA2EE07C0A2F007C0A404
0F90C7FCA2161F163F16FF91B6FCA54AC6FC163F161F160FA21607A693C9FCACB712E0A5
3A3D7DBC42>I<B7D8803FB612E0A526003FFEC8000FEB8000B3A491B9FCA54AC8120FB3
A7B7D8803FB612E0A54B3E7DBD52>72 D<B6051FB512C06F5EA26F5EA2D8003F97C7FC6F
16F7A26E6CED01E7A26E6CED03C7A36E6CED0787A26E6CED0F07A26E6C151EA36E6D143C
A26E6D1478A26E6D14F0A26F6CEB01E0A36F6CEB03C0A26F6CEB0780A26F6CEB0F00A36F
6C131EA26F6D5AA26F6D5AA26F6D5AA393387FF1E0A293383FFBC0A270B45AA37090C7FC
A2705AA2705AB600C0031FB612C0A2705AA2705A5A3E7CBD63>77
D<B812F017FF18C018F018FC26003FFCC77FEF1FFF7113807113C07113E0A27113F0A319
F8A819F0A34D13E019C05F4D1380053F1300EFFFFE91B712F860188005FCC7FC4ACAFCB3
A4B77EA53D3E7DBD47>80 D<ED3FFF0203B512F0021F14FE027F6E7E902701FFF80713E0
0107903980007FF84948C7EA1FFCD93FFC6EB4FC49486E7F49486E7F48496E7F4A804849
6F7E488491C9123F48844848707EA34848707EA3007F1980A24982A200FF19C0AD007F19
80A26D5EA2003F1900A36C6C4C5AA26C6C4C5AED07F06C9026801FFC495A6C4AB45C6E48
EB80FF6C9027E07E0FC15B6C9126F807E15B90287FF0F003E35BD93FFC6DB5C7FCD91FFE
6D5B902607FFF814F80101D9FE0313E06D90B65A021F4AC7124002036E14E0DA003FEB3F
8092C77FF0E001F0F80F71B5FCA21AC083A21A8083A271140061715B715B725AF01FC043
517ABE4F>I<903A03FFC001C0011FEBF803017FEBFE0748B6128F4815DF48010013FFD8
0FF8130F48481303497F4848EB007F127F49143F161F12FF160FA27F1607A27F7F01FC91
C7FCEBFF806C13F8ECFFC06C14FCEDFF806C15E016F86C816C816C816C16806C6C15C07F
010715E0EB007F020714F0EC003F1503030013F8167F163F127800F8151FA2160FA27EA2
17F07E161F6C16E06D143F01E015C001F8EC7F8001FEEB01FF9026FFE00713004890B55A
486C14F8D8F81F5CD8F00314C027E0003FFEC7FC2D407ABE3A>83
D<003FB912FCA5903BFE003FFE003FD87FF0EE0FFE01C0160349160190C71500197E127E
A2007C183EA400FC183F48181FA5C81600B3AF010FB712F8A5403D7CBC49>I<B6D8FC03
B600F090B512FEA5C601FCC7000301F0C8EA7E00017F6F177C856E6E17FC013F63856D6C
037F4B5AA26F4A6C14036D634D7F6F18076D634D806F02EF150F6D636F01076E131F6D04
C793C7FC050F806F02835D6D1A3E051F806F0201157E027F197C6F013F6E13FC023FDA3E
005D057E806F017C017F13016E6105FC14FE7048013F13036E6104C1EDFF076E4A6D5C04
C31687DCE3E06D138F6E6104E716CFDCF7C06D13DF6E96C8FC04FF16FF6E4A6D5BA294C7
7E6F5FA24C80033F5FA26F486F5AA24C153F030F5FA24C151F03075FA26F486F5A673F7E
BD6C>87 D<903807FFC0013F13F848B6FC48812607FE037F260FF8007F6DEB3FF0486C80
6F7EA36F7EA26C5A6C5AEA01E0C8FC153F91B5FC130F137F3901FFFE0F4813E0000F1380
381FFE00485A5B485A12FF5BA4151F7F007F143F6D90387BFF806C6C01FB13FE391FFF07
F36CEBFFE100031480C6EC003FD91FF890C7FC2F2B7DA933>97 D<13FFB5FCA512077EAF
EDFFE0020713FC021FEBFF80027F80DAFF8113F09139FC003FF802F06D7E4A6D7E4A1307
4A80701380A218C082A318E0AA18C0A25E1880A218005E6E5C6E495A6E495A02FCEB7FF0
903AFCFF01FFE0496CB55AD9F01F91C7FCD9E00713FCC7000113C033407DBE3A>I<EC7F
F00107B5FC011F14C0017F14E09039FFF01FF0489038800FF848EB001F4848EB3FFC120F
485AA2485AA2007FEC1FF849EB0FF0ED03C000FF91C7FCAB127F7FA3003F153E7F001F15
7E6C6C147C6C6C14FC91388001F86C9038C003F0C69038F81FE06DB512C0011F14800107
EBFE009038007FF0272B7DA92E>I<EE07F8ED07FFA5ED003F161FAFEC7FF0903807FFFE
011FEBFF9F017F14DF9039FFF01FFF48EBC00348EB00014848EB007F485A001F153F5B12
3FA2127F5BA212FFAA127FA37F123FA26C6C147F120F6D14FF6C6C01037F6C6D48EBFFE0
6CEBF03F6C6CB512BF6D143F010713FC010001E0EBE00033407DBE3A>I<ECFFF0010713
FE011F6D7E017F809039FFE07FE0489038801FF048496C7E48486D7E48486D7E121F4913
01003F81A2485A6F1380A212FFA290B7FCA401F0C9FCA5127FA27F123FEE0F806C7E161F
6C6C15006C6C5C6C6D137E6C9038E001FC6C9038F80FF8013FB55A6D14C0010391C7FC90
38007FF8292B7DA930>I<903A03FF8007F0013F9038F83FF8499038FCFFFC48B712FE48
018313F93A07FC007FC34848EB3FE1001FEDF1FC4990381FF0F81700003F81A7001F5DA2
6D133F000F5D6C6C495A3A03FF83FF8091B5C7FC4814FC01BF5BD80F03138090CAFCA248
7EA27F13F06CB6FC16F016FC6C15FF17806C16C06C16E01207001F16F0393FE000034848
EB003F49EC1FF800FF150F90C81207A56C6CEC0FF06D141F003F16E001F0147FD81FFC90
3801FFC02707FF800F13006C90B55AC615F8013F14E0010101FCC7FC2F3D7DA834>103
D<13FFB5FCA512077EAFED1FF8EDFFFE02036D7E4A80DA0FE07F91381F007F023C805C4A
6D7E5CA25CA35CB3A4B5D8FE0FB512E0A5333F7CBE3A>I<EA01F8487E487E487E481380
A66C13006C5A6C5A6C5AC8FCA913FFB5FCA512077EB3ABB512F8A515407CBF1D>I<13FF
B5FCA512077EB3B3AFB512FCA5163F7CBE1D>108 D<01FFD91FF8ECFFC0B590B5010713
F80203DAC01F13FE4A6E487FDA0FE09026F07F077F91261F003FEBF8010007013EDAF9F0
806C0178ECFBC04A6DB4486C7FA24A92C7FC4A5CA34A5CB3A4B5D8FE07B5D8F03FEBFF80
A551297CA858>I<01FFEB1FF8B5EBFFFE02036D7E4A80DA0FE07F91381F007F0007013C
806C5B4A6D7E5CA25CA35CB3A4B5D8FE0FB512E0A533297CA83A>I<EC7FF0903803FFFE
011FEBFFC0017F14F09039FFE03FF8489038800FFC3A03FE0003FE48486D7E000F168048
486D13C0A2003F16E049147F007F16F0A400FF16F8AA007F16F0A46C6CECFFE0A2001F16
C06C6C491380A26C6C4913003A03FF800FFE6C9038E03FFC6C6CB512F0011F14C0010791
C7FC9038007FF02D2B7DA934>I<3901FE01FE00FF903807FF804A13E04A13F0EC3F1F91
387C3FF8000713F8000313F0EBFFE0A29138C01FF0ED0FE091388007C092C7FCA391C8FC
B3A2B6FCA525297DA82B>114 D<90383FFC1E48B512BE000714FE5A381FF00F383F8001
48C7FC007E147EA200FE143EA27E7F6D90C7FC13F8EBFFE06C13FF15C06C14F06C806C80
6C806C80C61580131F1300020713C014000078147F00F8143F151F7EA27E16806C143F6D
140001E013FF9038F803FE90B55A15F0D8F87F13C026E00FFEC7FC222B7DA929>I<EB07
C0A5130FA4131FA3133F137FA213FF5A1207001FEBFFFEB6FCA40001EBC000B3151FA96C
EBE03EA2017F137EECF8FC90383FFFF86D13F0010713E001001380203B7EB929>I<D9FF
80EB0FF8B5EB0FFFA50007EC007F6C153FB3A5167FA316FF6C5C4B7F6C903AC007DFFFE0
9138F01F9F6DB5121F6D13FE010F13F8010101E0EBE000332A7CA83A>I<B500FC90383F
FFC0A5000101C0903803E0006E1307A26C5E6E130F017F5D6E131F013F92C7FC6E5B011F
143E6E137E010F147C6E13FCA26D5C15816D5C15C36D5C15E76D5C15FF6E5BA36E90C8FC
A26E5AA26E5AA26E5AA26E5AA232287EA737>I<B500FC90383FFFC0A5000101C0903803
E0006E1307A26C5E6E130F017F5D6E131F013F92C7FC6E5B011F143E6E137E010F147C6E
13FCA26D5C15816D5C15C36D5C15E76D5C15FF6E5BA36E90C8FCA26E5AA26E5AA26E5AA2
6E5AA35D14075D000E130FD83F805B387FC01FD8FFE090C9FC5C143E147E5CEBC1F8387F
C3F0387E0FE06CB45A6C5B6C48CAFCEA03F8323B7EA737>121 D
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn cmcsc10 14.4 23
/Fn 23 123 df<EA0F80EA3FE0EA7FF0A2EAFFF8A313FCA2127FA2123FEA0F9CEA001CA5
133C1338A21378A2137013F013E0120113C01203EA0780A2EA0F00121E5A123812300E24
738C26>44 D<B71280A721077D9C2D>I<932607FF80147093B512F8030702FE14F0031F
9138FF8001037F9038003FE0912601FFF0903803F80302070180903800FC07DA1FFEC8EA
7E0FDA3FF8151F4A48ED0F9F902601FFC0ED07FF4949814990C97E4948824948177F495A
4948173F1A1F495A48190F5C484917075AA24890CB1203A2485A1A01A2123F5B1A00127F
A31B005B12FFAE127F7FA31B70123FA27F121FA21BF06C6C19E0A26C7F1A016C1AC06C6D
1703806CF107806D7EF20F006D7E6D6C171E6D6C5F6D6C5F6D6D16F86D6D4B5A9026007F
F04B5A6E6C4B5ADA1FFE031FC7FC912607FF80147E020101F0495A6E6CB4EB1FF0031F90
B512C0030792C8FC030014F8040713804C5877D45E>67 D<BB12F0A4C66C90C8120FD91F
FE9238007FF8010F171F1907190319011900A21A78A21A3CA31A1CA61A0EA2EF01C0A21A
00A51703A31707170F171F17FF91B7FCA44AC7FC171F170F17071703A31701A794C9FCB3
497E017F13C0B712FCA4475279D155>70 D<B500FE4EB512FC6E60A26F5FC66CF3F80001
1E6D050E13E0010E63A26E6C5FA26E6C5FA36E6C5FA26E6C5FA36E6C4C5AA26E6C4C5AA3
6E6D4B5AA26E6D150EA36F6C5DA26F6C5DA36F6C5DA26F6C5DA36F6C4A5AA26F6C4A5AA3
6F6D49C7FCA26F6D130EA3706C5BA2706C5BA3706C5BA3706C5BA2706C485AA3706C485A
A2700187C8FCA37013CEA2EF7FFCA3715AA2011F6F5AA2497ED9FFE06E484A7F000301F8
060713F8B600E06D48010FB612FCA3715A665278D176>77 D<DA1FFC147091B512C00107
02F013F049ECFC0190393FF003FF903A7F80003F83D801FEC7EA0FC74848EC03F74848EC
01FF49804848157F4848153F171F4848150F1707127F90C91203A2481601A31700A27FA2
18707FA27F6C6C16007F7F6C7E6D7E6C13F0ECFF806C14F86CECFF8016F86C15FF6C16C0
6C6C15F06D816D81010715FF01001680141F020115C0DA001F14E0030014F0160F040313
F81600177FEF3FFC171F170F18FE170712E01703A31701A27EA318FC7EA26C160318F87E
6CEE07F0A26DED0FE06D151F01F016C06DED3F80D8FEFEED7F00D93F80EB01FE26FC1FF0
495A26F807FFEB1FF8010190B512E0486C6C148048010F49C7FC020013F0375877D449>
83 D<001FB912FCA402FCC8EA7FF802C0EDFFF049C9FC01F84B13E0494B13C05B494B13
80495D190048C9485A003E163F604D5A003C16FF604C5B5E00385F4C5B5E95C7FC4C5A16
3FC95B4C5A16FF5F4B5B5D5F4B5B5D94C8FC4B5AA24B5A4B5AA24B5A4A5BA24A5B5C5E4A
90C9FC5C4B150E4A5A147F5D4A5A5B4B151E495B49171C5D4990C9FC5B4A163C495A137F
5C4948167C5A4A16FC485B4817014A15034890C91207180F4848EE3FF84848167FEF03FF
4848157FBAFCA43F5277D150>90 D<4B7E4B7E4B7EA34B7EA34B7EA24B7EA3ED77FE1573
EDF3FF15E1A202018015C0A24A486C7EA2020780ED003FA24A80020E131FA24A6D7EA202
3C8002381307A24A801603A24A6D7EA201018291B7FCA249820280C7127F01078291C812
3FA24982010E151FA2496F7EA2013C8217075B017C8213FC000183486C1780D81FFF031F
13C0B500E049B6FCA3403F7CBE49>97 D<B712FCEEFF8017F00003903980001FFC6C90C7
EA07FE6CED01FF70138018C0EF7FE0173F18F0A218F8171FA4173F18F0A2177F18E0EFFF
C0A24C1380933807FE004C5AEE7FF091B612C08317F891C7EA03FE933801FF809338007F
C0EF3FE0EF1FF018F8EF0FFCA2EF07FEA218FFA718FE170FA218FCEF1FF8173FEF7FF0EF
FFE048030313C0486D010F1300B812FC17F094C7FC383D7ABC45>I<B8FC17F017FC0001
9039E00007FF6C49010013C0017FED3FE0EF0FF8717E717E717E711380187FF03FC019E0
F01FF0A219F8180F19FCA2180719FEA419FFAC19FEA4F00FFCA219F8A2F01FF0A2F03FE0
A2F07FC0F0FF8019004D5AEF07FC4D5AEF3FF001FFEDFFC0486D01075BB800FCC7FC17F0
94C8FC403D7CBC4B>100 D<B912FCA3000101E0C7123F6C491407017FED01FEEF007EA2
183E181EA2180EA4180F84A2160EA295C7FCA3161EA3163EED01FE91B5FCA3ECC001ED00
3E161EA3160EA2F001C0A393C7FCF00380A51807A2190060A26060606001FF1503486DEC
3FFEB9FCA33A3D7CBC43>I<DB0FFC14C092B5EAC0010207ECF003913A1FFC01FC07913A
7FC0003E0F4948C7EA0F9FD907FCEC07DF4948EC01FF4948804948157F495A4948153F48
90C9121F5A4848160F491607120FA248481603A2485A1801A2127FA24993C8FCA212FFAA
0407B61280127FA26DDA0003EBF00005005B003F715AA27F121FA26C7EA212077F6C7E7E
6C7F6D7E6D6C15FF6D7E6D6C5CD907FEEC03DFD901FFEC078F9026007FC0EB1F07DA1FFC
EBFE010207B5EAF800020002C090C7FCDB0FFEC9FC41417ABE4D>103
D<B612E0A30001EBF0006C5B6D5AB3B3AF497E487FB612E0A31B3D7CBC24>105
D<B600E049B51280A3000101F0C8EBFC006C49ED7FE06D48168096C7FC18FC604D5AEF03
C04D5A4DC8FC173E5F5FEE01E04C5A4C5A4CC9FC163E5E5EED01E015034B7E4B7EED3FFC
157F4B7E9138C1E3FFDAC3C17FECC781DACF007F02FE6D7E4A6D7E5C02E06D7E4A6D7E70
7EA2707E707F707FA2717E717E171F84717E717EA2717E717F8585496C82486D4A13FCB6
00E0011FEBFFC0A3423D7CBC4C>107 D<B612F0A3000301F0C9FC6C13C06C5BB3AFEF01
C0A517031880A31707A3170FA2171F173F177FEFFF00481503486D133FB9FCA3323D7BBC
3D>I<B500C0021FB5FC80A2C66D020113F06D6C9138007FC06EED3F80F01F00EB77FED9
73FF150E01717FA201707F6E7E143F816E7E6E7EA26E7E6E7E6E7FA26E7F6F7E6F7EA26F
7E6F7E6F7EA26F7E6F13806F13C0A2EE7FE0EE3FF0EE1FF8A2EE0FFCEE07FEEE03FFA270
138E7013CE177F18EEEF3FFE171FA2170F17071703A201F815011700486C167E487E260F
FF80153EB500F8151E180EA2403D7CBC49>110 D<ED3FF80203B57E021F14F091397FE0
0FFC9139FF0001FED903FE6D6C7ED907F8EC3FC0D91FF0EC1FF049486E7E49486E7E4948
6E7E91C8120148486F7E000318804848EE7FC0A24848EE3FE0A2001F18F049161F003F18
F8A3007F18FC49160FA300FF18FEAC6C6CEE1FFCA4003F18F86D163F001F18F0A36C6CEE
7FE0000718C06D16FF000318806C6C4B13006E5C6C5F6D6C4A5A6D6C4A5A6D6C4A5AD907
F8EC3FC0D903FEECFF80902701FF800390C7FC903A007FF01FFC021FB512F00203148091
26003FF8C8FC3F417ABE4C>I<B712F016FF17E000019039E0003FF86C49EB07FC017FEC
01FF707F717E717E84A2717EA284A660A24D5AA2604D5A4D5A4C90C8FCEE07FCEE3FF891
B612E094C9FCA2DAC00013C0EE1FE0EE0FF8707E1603707E838284A484A384A49538F001
C0A3177FF0F803496C023F1480486D91381FFC07B600E01600943807FE1F943803FFFECB
5BF01FF0423F7CBC48>114 D<D903FE130690391FFFE00E017FEBF81E3A01FE01FC3E3A
03F0003F7E4848EB0FFED80F801307001F140190C7FC003E1400007E157E127C163E12FC
161EA36C150EA27EA26D91C7FC6C7E13F013FC6CB47E14FC6CEBFFC06C14FC6C14FF6C15
C06C816C6C80011F80010380D9003F7F14039138003FFF03071380150181EE7FC0163FA2
00E0151FA2160FA37EA217807E161F6C16006C5D163E6C6C5C6D14FC6D495AD8FDFC495A
3AF87FC01FC0D8F01FB55AD8E00349C7FC39C0003FF02A417ABE37>I<003FB912F0A390
3BF0003FF8003F01806D48130748C7ED01F8007C1700A200781878A219381270A400F018
3C48181CA4C81600B3B14B7EEDFFFE49B7FCA33E3C7CBB47>I<B692B512C0A3000701F0
92383FFE00000149ED0FF86C495E725A017F5F6E5E133F96C7FC6E5D011F160E6E151E01
0F161CA26D6C5DA26E157801031670806D5EA26F13016D5E81027F4A5AA26F1307023F92
C8FC6F5B021F140E81020F5CA26F133C020714388102035CA26F13F06E5C16816E5C16C1
92387FC380A216E7033F90C9FC16F7ED1FFEA36F5AA26F5AA26F5AA36F5A6F5A423E7DBC
49>118 D<B692387FFFC0A3000701F892383FFE00000149ED0FF86C4916E06D6C5E013F
5F6E93C7FC011F161E6D7E6E5D010716386D6C15786F5C6D5E6D6D13016F495A027F5D6E
6C13076F49C8FC021F140E6E6C131E6F131C0207143C6E6C5BEE80706E14F06EEBC1E0EE
E1C0ED7FE392383FF78004FFC9FC816F5A5E1507B3A2150F4BB4FC020FB512FCA3423D7D
BC49>121 D<003FB712FEA391C7EA0FFC13F801E0EC1FF80180EC3FF090C8FC003EED7F
E0EEFFC05A4B138000784A1300A24B5A00704A5AA24B5A4B5AA2C8485A4B5AA24A5B5C93
C7FC4A5A140F5D4A5A143F5D4A5A14FF5D495B5B92C7120E495AA2495A495AA2495A4948
141EA2495A485BA24890C8123C485A177C484815FC485A1601484814074848141FED01FF
B8FCA32F3D7ABC3C>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fo cmbx12 14.4 37
/Fo 37 118 df<EA07F0EA1FF8EA3FFE487EA2B5128014C0A314E0A37EA27EEA1FFDEA07
F1EA0001A2130314C0A313071480130FA214005B133EA25B5B485A1203485A485A485A90
C7FC120C132876D225>39 D<EA07F0487E487E487E487EB51280A76C13006C5A6C5A6C5A
6C5A1111769025>46 D<157815FC14031407141F14FF130F0007B5FCB6FCA2147F13F0EA
F800C7FCB3B3B3A6007FB712FEA52F4E76CD43>49 D<EC3FFE0103B512E0010F14FC013F
14FF90B712C048D9C07F7F2703FE000F13F8D807F801037FD80FE06D7F48486D7F484880
01F01680486C6E13C07F486C6E13E07FA27013F0A56C5AA26C5AEA0FF0EA03C0C914E05E
A218C05E1880A24C13005F4C5A4B5B5F4B5B5F4B5B4B90C7FC4B5A5E4B5AED7FE04B5A4A
5B4A48C8FC4A5A5D4A48EB01F04A5AEC3F804AC7FC02FEEC03E0495A495A495A495AD91F
80140749C8FC013E150F017FB7FC90B812C05A5A5A5A5A5A5AB9FC1880A4344E79CD43>
I<171F4D7E4D7EA24D7EA34C7FA24C7FA34C7FA34C7FA24C7FA34C8083047F80167E8304
FE804C7E03018116F8830303814C7E03078116E083030F814C7E031F81168083033F8293
C77E4B82157E8403FE824B800201835D840203834B800207835D844AB87EA24A83A3DA3F
80C88092C97E4A84A2027E8202FE844A82010185A24A820103854A82010785A24A82010F
855C011F717FEBFFFCB600F8020FB712E0A55B547BD366>65 D<932601FFFCEC01C0047F
D9FFC013030307B600F81307033F03FE131F92B8EA803F0203DAE003EBC07F020F01FCC7
383FF0FF023F01E0EC0FF94A01800203B5FC494848C9FC4901F882494982494982494982
4949824990CA7E494883A2484983485B1B7F485B481A3FA24849181FA3485B1B0FA25AA2
98C7FC5CA2B5FCAE7EA280A2F307C07EA36C7FA21B0F6C6D1980A26C1A1F6C7F1C006C6D
606C6D187EA26D6C606D6D4C5A6D6D16036D6D4C5A6D6D4C5A6D01FC4C5A6D6DEE7F806D
6C6C6C4BC7FC6E01E0EC07FE020F01FEEC1FF80203903AFFE001FFF0020091B612C0033F
93C8FC030715FCDB007F14E0040101FCC9FC525479D261>67 D<BA7E19FCF1FF801AF01A
FCD8000701F0C7000F13FF060014C0071F7F070713F807017F737F747E747F747F86747F
747F8886888688A2757EA31D8087A21DC0A51DE0A387A963A31DC0A51D80A2631D00A351
5AA2646264505B6264505B505B5090C7FCF2FFFE4F5B07075B071F5B96B512C0060F91C8
FCBB5A1AF01AC007FCC9FC19805B527CD167>I<BC1280A5D8000701F8C7000114C0F000
1F19071901851A7F1A3F1A1FA2F20FE0A21A07A31A03A318F81BF01A01A497C7FC1701A3
17031707170F177F92B6FCA59238F8007F170F170717031701A317001B3EA31B7CA395C8
FCA21BFCA21BF8A21A01A31A031BF01A071A0FA21A1F1A3FF27FE0F101FF1907191F0603
B5FCBCFCA21BC0A34F517CD058>I<BB12FEA5D8000701F8C700077FF0007F191F190785
858586861B80A21A1FA31A0FA41BC006F81307A497C7FCA31701A317031707170F177F92
B6FCA59238F8007F170F170717031701A31700A795C9FCB3B812F8A54A517CD055>I<93
2601FFFCEC01C0047FD9FFC013030307B600F81307033F03FE131F92B8EA803F0203DAE0
03EBC07F020F01FCC7383FF0FF023F01E0EC0FF94A01800203B5FC494848C9FC4901F882
4949824949824949824949824990CA7E494883A2484983485B1B7F485B481A3FA2484918
1FA3485B1B0FA25AA298C8FC5CA2B5FCAE6C057FB712E0A280A36C94C7003FEBC000A36C
7FA36C7FA27E6C7FA26C7F6C7FA26D7E6D7F6D7F6D6D5E6D7F6D01FC93B5FC6D13FF6D6C
6D5C6E01F0EC07FB020F01FEEC1FF10203903AFFF001FFE0020091B6EAC07F033FEE001F
030703FC1307DB007F02E01301040149CAFC5B5479D26A>I<B8D8C003B8FCA5D8000701
F8C9001FEBE000B3AE92BAFCA503F8C9121FB3B1B8D8C003B8FCA560527CD169>I<B812
C0A5D8000701F8C7FCB3B3B3B2B812C0A52A527CD132>I<B812F8A5D8000701F8CAFCB3
B3A91A7CA41AFC1AF8A51901A31903A219071AF0190FA2191F193F197F19FF180360183F
4DB5FCBB12E0A546527CD151>76 D<B600FC073FB512FE6F61A26F96B6FCA2D80007F5C0
0070EF01EFA202EF6DEF03CFA202E76DEF078FA202E36DEF0F0FA202E16D171EA302E06D
173CA26F6C1778A26F6C17F0A26F6DED01E0A26F6DED03C0A36F6DED0780A26F6DED0F00
A26F6D151EA26F6D5DA3706C5DA2706C5DA2706D495AA2706D495AA2706D495AA3706D49
C7FCA2706D131EA2706D5BA2716C5BA3716C5BA271EB81E0A271EBC3C0A271EBE780A271
01FFC8FCA3715BA2715BA2725AA2725AA2D93FFC6F5AB74DB712FEA2725AA2725A77527C
D180>I<B600FC93B7FC8181A282D800076E9239003FFC0070EE07E08282A28202EF7F02
E77F02E380A202E18002E0806F7F6F7F6F7FA26F7F6F7F6F806F80A26F80707F707F707F
707FA2707F7080708070808583717F717F717F717FA27114807114C07114E07213F07213
F8A27213FC7213FE7213FF721487A27214C77214E77313F77313FF85A285858585A28586
868686A286868686A2D93FFC187FB7173F1B1F1B0F1B07755A60527CD169>I<93380FFF
C00303B6FC031F15E092B712FC0203D9FC0013FF020F01C0010F13C0023F90C7000313F0
DA7FFC02007F494848ED7FFE4901E0ED1FFF49496F7F49496F7F4990C96C7F4985494870
7F4948707FA24849717E48864A83481B804A83481BC0A2481BE04A83A2481BF0A3484971
13F8A5B51AFCAF6C1BF86E5FA46C1BF0A26E5F6C1BE0A36C6D4D13C0A26C6D4D1380A26C
1B006C6D4D5A6E5E6C626D6C4C5B6D6D4B5B6D6D4B5B6D6D4B5B6D6D4B5B6D6D4B90C7FC
6D6D4B5A6D01FF02035B023F01E0011F13F0020F01FC90B512C0020390B7C8FC020016FC
031F15E0030392C9FCDB001F13E0565479D265>I<BAFC19F819FF1AE086D8000701F0C7
001F13FC060113FF726C13807313C0070F13E01BF0857313F81BFCA27313FEA41BFFA81B
FEA31BFC61A21BF84F13F04F13E0614F13C04F13004E485A061F5B92B812F01AC04FC7FC
19E003F8CBFCB3AEB812C0A550527CD15C>I<B912F0F0FF8019F819FF1AC0D8000701F0
C714F0060F7F060113FE727F737F737F85737F87A2737FA387A863A2616363A24F5B4F5B
4F90C8FC4F5A06035B060F13F095B512C092B8C9FC19F819E019F89226F0000313FE9439
007FFF80727F727F727F727F727F8684A28684A787A71D1C75133EA38575137E73157C75
13FC731401B86C6D9038F803F807039038FE07F07390B512E0736C14C0080F1400CEEA7F
FC5F537CD164>82 D<91260FFF80130791B500F85B010702FF5B011FEDC03F49EDF07F90
26FFFC006D5A4801E0EB0FFD4801800101B5FC4848C87E48488149150F001F824981123F
4981007F82A28412FF84A27FA26D82A27F7F6D93C7FC14C06C13F014FF15F86CECFF8016
FC6CEDFFC017F06C16FC6C16FF6C17C06C836C836D826D82010F821303010082021F1680
1400030F15C0ED007F040714E01600173F050F13F08383A200788200F882A3187FA27EA2
19E07EA26CEFFFC0A27F6D4B13806D17006D5D01FC4B5A01FF4B5A02C04A5A02F8EC7FF0
903B1FFFC003FFE0486C90B65AD8FC0393C7FC48C66C14FC48010F14F048D9007F90C8FC
3C5479D24B>I<003FBC1280A59126C0003F9038C0007F49C71607D87FF8060113C001E0
8449197F49193F90C8171FA2007E1A0FA3007C1A07A500FC1BE0481A03A6C994C7FCB3B3
AC91B912F0A553517BD05E>I<B800C00103B612FCA5D8000701F8CAEBF000F31F80B3B3
B11B3FA26D97C7FC81637F1B7E6D6D17FE505A6E7E505A6E6D15076E4D5A6E6D4B5A6E6D
4B5A6E01F84B5A6E6DDA03FFC8FC6E6CB46CEB0FFE6F9039F001FFF8030F90B65A030316
C0DB007F92C9FC040F14F8DC007F13805E537CD167>I<B700FE031FB512FEA5D8001F01
F0CA383FFE00F307F06D626F170F6D62811B1F6D6D601B3F6D97C7FC6F5F6D197E821BFE
6E6D5E1A016E6D5E1A036E60701507A26E6D5E1A0F6E6D5E1A1F6E6070153FA26E6D93C8
FC626E6E147E1AFE6F5E711301A26F6D5C19036F6D5C19076F5E71130FA26F6D5C191F6F
6D5C193F6F93C9FC715BA26FEC807E19FE706D5A18C1705C18E3705C18F318F770EBFFE0
A2705CA2705CA37091CAFCA2705BA2715AA3715AA2715AA2715A715A5F537DD166>I<B7
00FC017FB600FE91B612F0A5D8003F01C0C8001F01E0C9EBF8006F71EE0FC06D7161876F
1C1F6D7196C7FC6F8373606D1E3E6F836D7160876F1CFC6D666F4B801F016D66704A806E
525A88704A17076E059F5F70021F80080F160F6E6570023F806EDC3E074CC8FC8870027E
5F6EDC7C03163E7002FC804F6C167E6E1C7C700101814F6C16FC6E745B70010317016E4C
6D5D060716C00580496D14036F63DDC00F16E04F6D14076F07F05BDDE01F170F6F92C76C
5D1DF8DDF03E6E141F6F98C9FCDDF87E16FC067C6E5C6FF1FE3EDDFCFC177E6F4A6E147C
1DFFDDFFF06E14FC6F62A24E816F62A270496F5BA24E817061A295C97E7061A270487090
CAFCA37048705AA24D1601040360A27048705A84537DD18B>I<001FBA12C01AE0A40380
C714C002F8C75A02C0178091C8481400495D495F494B5B495D495F48484B5B5F495F94B5
5A5E90C85D4C91C7FC5E60003E4B5B5E604C5B5EC95C93B55A5D604B91C8FC5D5F4B5B5D
5F4B5B5D5F92B55A5C5F4A91C9FC5C5E4A5B5C4CEC03E04A5B5C5E91B55A5B4C14074991
C8FC4918C05D495B5B4B150F495B5B4B151F90B55A48183F5D4891C9127F4818FF4A5D48
495D485F4A5D4849033F1380484CB5FC4A143FBBFCA47E435279D152>90
D<EC7FFF0107B512F0013F14FE90B77E48D9E00F7F2703FE000113F0486C6D7F6EEB3FFC
48826E131F83707FA36C496D7FA26C90C7FC6C5AC9FCA6037FB5FC020FB6FC91B7FC0107
1487013FEBF0074913803901FFFC004813F0485B485B485B4890C7FC5A5BA2485AA45EA2
6D5C007F151D163D6C6C02797F6C6D01F113F86C9026C003E1EBFFE06C9026F81FC014F0
6C90B5487EC6ED001F011F01FC010713E0010101E090C8FC3C387CB641>97
D<EB3FF0B5FCA51203C6FCB3A4923801FFE0030F13FE033FEBFFC092B612F002F301017F
913AF7F8003FFEDAFFE0EB0FFF03806D7F92C76C7F4A6E7F4A824A6E7FA2727EA285A285
84A31A80AC1A00A44E5AA36118FF616E4A5BA26E4A5B6E4A5B6F495BDACFC04990C7FCDA
87F0EB7FFC913A03FE03FFF849C6B612E0496D148049011F01FCC8FC90C7000313C04154
7BD24B>I<4DB47E0407B5FCA5EE001F1707B3A4913801FFE0021F13FC91B6FC010315C7
010F9038E03FE74990380007F7D97FFC0101B5FC49487F4849143F484980485B83485B5A
91C8FC5AA3485AA412FFAC127FA36C7EA37EA26C7F5F6C6D5C7E6C6D5C6C6D49B5FC6D6C
4914E0D93FFED90FEFEBFF80903A0FFFC07FCF6D90B5128F0101ECFE0FD9003F13F80203
01C049C7FC41547CD24B>100 D<913803FFC0023F13FC49B6FC010715C04901817F903A
3FFC007FF849486D7E49486D7E4849130F48496D7E48178048497F18C0488191C7FC4817
E0A248815B18F0A212FFA490B8FCA318E049CAFCA6127FA27F7EA218E06CEE01F06E1403
7E6C6DEC07E0A26C6DEC0FC06C6D141F6C6DEC3F806D6CECFF00D91FFEEB03FE903A0FFF
C03FF8010390B55A010015C0021F49C7FC020113F034387CB63D>I<137F497E000313E0
487FA2487FA76C5BA26C5BC613806DC7FC90C8FCADEB3FF0B5FCA512017EB3B3A6B612E0
A51B547BD325>105 D<EB3FF0B5FCA512017EB3B3B3B1B612F0A51C537BD225>108
D<D93FF0D91FFCEDFFE0B591B500C0010713FE030302F0011F6D7E030F6E017F8092271F
E07FFCD9FF037F922A3F001FFE01F8007F0003027C9126FF03E080C602F06DD90780137F
DAF1E0038FC77FDAF3C0159EDAF7806D01BC143F07FC8102FFC75C4A5EA24A5EA44A5EB3
ACB6D8F807B6D8C03FB512FEA567367BB570>I<D93FF0EB1FFCB591B512C0030314F003
0F8092391FE07FFC92393F001FFE0003027C80C602F07FDAF1E081ECF3C0DAF7807F8502
FFC7FC5CA25CA45CB3ACB6D8F807B612C0A542367BB54B>I<913801FFE0021F13FE91B6
12C0010315F0010F9038807FFC903A1FFC000FFED97FF86D6C7E49486D7F48496D7F4849
6D7F4A147F48834890C86C7EA24883A248486F7EA3007F1880A400FF18C0AC007F1880A3
003F18006D5DA26C5FA26C5F6E147F6C5F6C6D4A5A6C6D495B6C6D495B6D6C495BD93FFE
011F90C7FC903A0FFF807FFC6D90B55A010015C0023F91C8FC020113E03A387CB643>I<
90397FE003FEB590380FFF80033F13E04B13F09238FE1FF89139E1F83FFC0003D9E3E013
FEC6ECC07FECE78014EF150014EE02FEEB3FFC5CEE1FF8EE0FF04A90C7FCA55CB3AAB612
FCA52F367CB537>114 D<903903FFF00F013FEBFE1F90B7FC120348EB003FD80FF81307
D81FE0130148487F4980127F90C87EA24881A27FA27F01F091C7FC13FCEBFFC06C13FF15
F86C14FF16C06C15F06C816C816C81C681013F1580010F15C01300020714E0EC003F0307
13F015010078EC007F00F8153F161F7E160FA27E17E07E6D141F17C07F6DEC3F8001F8EC
7F0001FEEB01FE9039FFC00FFC6DB55AD8FC1F14E0D8F807148048C601F8C7FC2C387CB6
35>I<143EA6147EA414FEA21301A313031307A2130F131F133F13FF5A000F90B6FCB8FC
A426003FFEC8FCB3A9EE07C0AB011FEC0F8080A26DEC1F0015806DEBC03E6DEBF0FC6DEB
FFF86D6C5B021F5B020313802A4D7ECB34>I<D93FF8913801FFC0B50207B5FCA50003ED
001FC61607B3AE5FA35FA2017F5D173B177B6D6C14F3DC01E313F06D6CD907C3EBFFC090
3A0FFFC03F836D90B51203010114FE6D6C13F8020701E091C7FC42377BB54B>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fp cmr17 20.74 15
/Fp 15 90 df<F007804E7EA34E7EA34E7EA34E7EA34E7EA24D7FA34D7F18DF18CF0507
801887A2050F801803A2051F80EF1E01A2053E80EF3C00A24D80197FA24D80193F040181
5F191F0403815F850407824D7FA2040F8294C77EA24C82041E80A2043E82043C80A24C82
1A7FA24C821A3F0301835E1A1F0303835E860307844C81A2030F8493C97EA24B84031E82
A2033FB97EA34B84A20378CA127F4B841B3F0201855D1B1F0203855D870207864B83A202
0F8692CB7EA24A86021E84A2023E86023C84A24A861C7FA24A861C3F010187A201031A1F
891307010F86496C4F7F496C87D9FFFE4F7F00076D6C4DB512F8B600F8057FECFFFCA56E
7A7CF977>65 D<BA12FCF1FFE01AFCF2FF801BE0D8003F01E0C8000F13F801074903007F
4BEE3FFF6D060F7F747F08017F747F757E757E757E8887751380A21DC0871DE087A31DF0
A387A363A31DE0A2631DC0A2631D80511300A2515A515A515A515A505B505B505B081F90
C7FCF23FFCF2FFF0070713C0077F90C8FC92B812F8621AFF0380C8000313E09638003FF8
F20FFE973803FF807413E0746C7E757E757E757E757E7513801DC07513E0A27513F0F47F
F8A21DFC1C3FA21DFE1C1FA21DFFAA1DFEA21C3FA21DFC1C7FA2F4FFF8A25113F0631DE0
5113C051138063511300F3FFFE505B08075B49061F13E06F047F5B013F6D0307B5C7FCBC
5A1BF01BC050C8FC1AC0607678F571>I<DE7FFCED01C0050FB512C094B600F814030403
15FE041F6F6C1307047FD9F00013E04B4848C7D80FF0130F030701F0EC03FC4B0180DA00
FE131FDB3FFEC9123FDB7FF893381F803F4A4848EE07E04A01C0933803F07F4A4916014A
90CBEAF8FFDA1FFC187C4A48183F4A48844A5A498649498449498492CCFC494885131F4A
85495A017F1B7F5C01FF1B3F5C5A4A1A1F5AA248491A0FA25A91CE1207A25A5BA2003F1C
03A25BA2127F9AC7FCA45B12FFB2127F7FA5123FF501C07FA2121FA27F7E1D036E1B807E
A26C7F1D076C1D00806C6480017F1B0E6E1A1E013F1B1C6D6C1A3C6E1A38010F1B786D6C
1A706F19F06D6D4E5A6D7F6D505A6E6C4E5A6E6C180FDA1FFE4EC7FC6E6C183E6E6D5F6E
6D5F6E01F04C5A6E6C6CEE07E0DB3FFE4C5A92260FFF80ED3F806F01F003FEC8FC030101
FEEC07FC9227007FFFF0EBFFF0041F90B612C0040393C9FC040015FC050F14E09426007F
FCCAFC627C78F873>I<BA12FCF1FFE01AFC1AFF1BC0D8003F01F0C8003F13F001074903
0113FC4B9238003FFF6D060F7F08037F080013F0757E757EF30FFE757E757F757F87767E
89767E767E1C0F891C0789767FA2767FA2767FA28A1D7FA28A1D3FA28AA21D1F8AA48A89
A51F80B11F00A56566A4661D3FA3661D7F66A21DFF66A2525BA2525BA25290C7FC651C0F
525A651C3F525A525A515B515B5190C8FC515A515AF37FF8515A08035B080F138049063F
90C9FC6F923801FFFC013F6D031F5BBC12E01B8008FCCAFC1AE007FCCBFC697678F57A>
I<BD12FEA5D8003F01F0C96C7F01074916034BEE007F6D190F871B018788A2F43F801C1F
A21C0FA21C07A31C03A21DC0A31C01A6F400E0191CA41D00A5193CA4197CA219FC180118
03180F18FF92B7FCA503C0C7FC180F180318011800197CA2193CA4191CA41D07A41D0E96
C9FCA51D1E1D1CA41D3CA31D381D78A31DF8A21C01A2F403F0A21C07A21C0F1C1F1C3FF4
FFE0631B0749191F6F4CB5FC013F6D163FBEFC1DC0A4607678F56C>I<B80203B712FCA5
D8003F01FCCAECF000010701E0051F1380A26D497190C7FCB3B3AA92BBFCA503C0CA120F
B3B3AF496D4D7FA2013F01FC94B512F0B80203B712FCA5667678F577>72
D<B8FCA5D8003FEBFC00010713E0A26D5BB3B3B3B3B3AC497FA2013F13FCB8FCA5287678
F538>I<B812E0A5D8003F49CCFC010713F05D6D5BB3B3B3AC1C70A51CE0A81B01A31CC0
1B03A41B07A21B0FA21B1FA2F33F80A21B7F1BFF62621A0F621A7F494DB5FC6F150F013F
6D4AB61200BDFCA5547678F563>76 D<B600E00803B61280A36F62A227003FBFF8080E49
C7FC01071EF0A29026039FFC505BA3DA8FFE62A3DA87FF62A202836D61A302816D4E5AA3
02806D4E5AA26F6C4E5AA36F6C180EA36F6C60A36F6C60A26F6C60A36F6D5FA36F6D4C5A
A26F6D4C5AA3706C4CC7FCA3706C160EA3706C5EA2706C5EA3706C5EA3706D5DA2706D4A
5AA3706D4A5AA3716C4AC8FCA3716C140EA2716C5CA3716C5CA3716C5CA2716D5BA3716D
485AA3716D485AA3726C48C9FCA295383FF80EA3726C5AA3726C5AA2726C5AA3725BA349
6C6F5BA2497E725B496C517FD97FFC70C9FC0003B56C080F13FEB600FE073FB71280193E
A3191C817678F592>I<B600E04CB612FCA28181A2D8000F6DDC000714000103070013F8
6FF03FE0DABFFF725A149F028F6D715AA202876D71C7FC82148302817F82148082157F6F
7E828183816F7F83816F7F838183167F707E83828482707F84828482707F84177F717E84
838583717F85838583717F85187F85183F727E8684727F86848684727F86197F86193F73
7E1B80857313C0A27313E01BF0857313F81BFC1A7F1BFE1A3FF21FFF1C87861CC7867413
E71CF7867413FFA287A28787A287A28787497E87497E87496C85EB7FFC0003B56C84B600
FE84A288A288667678F577>I<B912FCF0FFF019FEF1FFC01AF8D8003F01F0C7000713FE
0107499139003FFF804B03077F6D050113F0736C7E747EF20FFF747F747F86747F88757E
A2757EA2757EA288A28789A99AC8FCA263A264A2515A641B7F64515A64505B5090C9FC50
5A505AF23FF8F27FE0963801FF80DF0FFECAFCF17FF895380FFFE092B8CBFC19F019FC03
C0C7380FFF80060113E09538003FF8F11FFEF107FF737F7313E0737F747E1A3F87747E1A
0F878688A3747FAB88AC1F101F38747FA47416787614701B7F496D1BF0756C14E0013F01
FC051F1401B8707E0907EC03C0756CEB0780759038800F009839007FE03ECF381FFFFC0A
075B9938007FC06D7978F575>82 D<001FBE12F8A502F8C7000F01F0C7121F4801806E49
020113FC01FCC86C49EC003F491B1F01E01B07491B03491B0190C91800A2003E1D7CA200
3C1D3CA3481D1EA500701D0EA8481D07A6CA1900B3B3B3B14D7F4D7F057F13FE031FB812
F8A568757BF473>84 D<B80303B612FCA5D8003F01FCCA000F1400010701E0050113F898
38007FE06D49725AA2765AA276C7FCB3B3B3B3646D1A1E81A31C3E6D1A3CA281027F197C
1C781CF86E7E646E6C1701515A140F6E6C4D5A816E4E5A6E6D4CC8FC705E6E6D167E037F
5F6F6C4B5ADB1FFC4B5A6F6CED0FE0DB03FF4B5A6F01C0EC7F806F01F0D903FFC9FCDC3F
FFEB3FFC040F90B55A040315E004001580051F01FCCAFC050113C0667978F577>I<B700
F00503B612C0A5C602FCCC003FEBFC00011F01E0070F13E06D497313807748C7FC6D6477
5A7F6F627F666F19036D64811D07027F6381023F50C8FCA26F61021F1A1E811D3E6E1A3C
826E62A27018F86E62821C016E62826E4F5AA2701707037F61821C0F033F96C9FC82031F
181EA270173E6F183C831C7C6F1878836F60A27115016F60831B036F6083047F4C5AA271
150F043F94CAFC8363041F161E83705EA272147C701678841BF8705E84704B5AA2721303
705E841A07057F5D84053F4ACBFCA2725B051F141E841A3E71143C1980715CA2F1C0F871
5C19E019E1715C19F171EBF3C0A219FF725BA37290CCFCA2725AA3725AA3725AA2725AA3
725A72797EF577>I<B700FC067FB512FCA5D8003F91CC000F1480010F01FC0703EBF800
0103497313E06D1D806F7390C7FC6D646E6C62535A6E6C626E505A826E6D4E5A666E6D18
0F6E98C8FC70606E6D183E1D3C6E6D187C037F19787018F86F6C4D5A6F617116036F6D4C
5AA26F6D4C5A6F96C9FC715E6F6D163E1C3C6F6D167C047F17787116F8706C4B5A64706D
1403704C5A84706D4A5A7094CAFC725C706D143E1B3C706D147C057F15787214F8716C49
5A6371EB8003714A5A19C0716D485A98CBFC716D5A71143EF1F83C71EBFC7C067F1378F1
FEF8726C5A6284725BA2725BB3B3A46086067F13F04CB712FCA5767680F577>89
D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop 214 275 a Fp(BA)-13 b(Y)51 b(AREA)i(MA)-13 b(THEMA)g(TICAL)54
b(AD)l(VENTURE)325 572 y Fo(GEOMETRIC)45 b(PUZZLES)g(AND)g(CONSTR)l
(UCTIONS.)33 763 y(THREE)g(DIFFERENT)g(VIEWS)f(OF)h(DESAR)l(GUES')g
(THEOREM)403 970 y Fn(by)h(Zvezdelina)g(St)-8 b(ank)m(o)m(v)d
(a-Frenkel,)48 b(Mills)e(College)p -60 1015 3900 4 v
-60 1438 a Fm(Problem)33 b(1.)46 b(\(F)-9 b(or)33 b(Ev)m(ery)m(one)g
(to)g(Pla)m(y)h(With\))28 b Fl(Three)g(congruen)m(t)i(squares)e(with)f
(bases)i Fk(AM)5 b(;)15 b(M)10 b(H)37 b Fl(and)-60 1546
y Fk(H)7 b(B)e Fl(,)30 b(are)h(put)e(next)i(to)g(eac)m(h)h(other)e(to)h
(form)f(a)h(rectangle)g Fk(AB)5 b(C)i(D)32 b Fl(\(see)g(Fig.1\).)42
b(Sho)m(w)29 b(that)3261 1513 y Fj(1)1196 1691 y Fi(\\)p
Fk(AM)10 b(D)23 b Fl(+)d Fi(\\)p Fk(AH)7 b(D)22 b Fl(+)e
Fi(\\)p Fk(AB)5 b(D)28 b Fl(=)d(90)2519 1654 y Fh(\016)2559
1691 y Fk(:)480 1983 y
 22260533 11840716 723599 15919185 39534837 36179968 startTexFig
 480 1983 a
%%BeginDocument: ../WOKRSHOP1/BAMA1.ps
%!PS-Adobe-2.0
%%Title: BAMA1.ps
%%Creator: fig2dev Version 3.2 Patchlevel 0-beta3
%%CreationDate: Tue Sep 28 12:55:57 1999
%%For: stankova@asparuch.mills.edu (Zvezdelina Stankova-Frenekl)
%%Orientation: Portrait
%%BoundingBox: 11 242 601 550
%%Pages: 1
%%BeginSetup
%%IncludeFeature: *PageSize Letter
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
0.0 577.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 6580 m -1000 -1000 l 11005 -1000 l 11005 6580 l cp clip
 0.06000 0.06000 sc
%%Page: 1 1
% Arc
7.500 slw
gs n 1335.0 3480.0 167.7 -116.6 153.4 arcn
gs col-1 s gr
 gr

% Arc
gs n 2325.0 3510.0 167.7 -116.6 153.4 arcn
gs col-1 s gr
 gr

% Arc
gs n 3285.0 3495.0 167.7 -116.6 153.4 arcn
gs col-1 s gr
 gr

 [60] 0 sd
% Ellipse
n 345 3600 54 54 0 360 DrawEllipse gs 0.00 setgray ef gr gs col-1 s gr
 [] 0 sd
 [60] 0 sd
% Ellipse
n 345 2400 54 54 0 360 DrawEllipse gs 0.00 setgray ef gr gs col-1 s gr
 [] 0 sd
 [60] 0 sd
% Ellipse
n 3945 2400 54 54 0 360 DrawEllipse gs 0.00 setgray ef gr gs col-1 s gr
 [] 0 sd
 [60] 0 sd
% Ellipse
n 3945 3600 54 54 0 360 DrawEllipse gs 0.00 setgray ef gr gs col-1 s gr
 [] 0 sd
 [60] 0 sd
% Ellipse
n 2745 3600 54 54 0 360 DrawEllipse gs 0.00 setgray ef gr gs col-1 s gr
 [] 0 sd
 [60] 0 sd
% Ellipse
n 1545 3600 54 54 0 360 DrawEllipse gs 0.00 setgray ef gr gs col-1 s gr
 [] 0 sd
% Polyline
30.000 slw
n 345 2430 m 345 3585 l 3945 3585 l 3960 3585 l gs col-1 s gr 
% Polyline
n 3945 3585 m 3945 2430 l 345 2430 l 330 2430 l gs col-1 s gr 
% Polyline
n 1560 2445 m 1560 3570 l 1575 3585 l gs col-1 s gr 
% Polyline
7.500 slw
n 1545 3600 m 345 2400 l 345 2475 l gs col-1 s gr 
% Polyline
n 2745 3600 m 345 2400 l gs col-1 s gr 
% Polyline
30.000 slw
n 2745 2430 m 2745 3555 l 2760 3555 l gs col-1 s gr 
% Polyline
7.500 slw
n 3945 3600 m 345 2400 l gs col-1 s gr 
% Polyline
n 6390 4425 m 9870 4440 l 7575 870 l 6390 4425 l  cp gs col-1 s gr 
% Polyline
30.000 slw
n 7423 4423 m 8548 4423 l gs col-1 s gr 
% Polyline
7.500 slw
n 5864 2747 m 8159 5252 l 9794 1637 l 5819 2747 l gs col-1 s gr 
% Polyline
30.000 slw
n 7080 2400 m 8325 2055 l gs col-1 s gr 
% Polyline
n 7080 2415 m 6675 3615 l 6675 3615 l 7425 4455 l gs col0 s gr 
% Polyline
n 8355 2055 m 9090 3225 l 8550 4425 l gs col0 s gr 
/Times-Italic ff 300.00 scf sf
195 3930 m
gs 1 -1 sc (A) col-1 sh gr
/Times-Italic ff 300.00 scf sf
3870 3930 m
gs 1 -1 sc (B) col-1 sh gr
/Times-Italic ff 300.00 scf sf
3840 2340 m
gs 1 -1 sc (C) col-1 sh gr
/Times-Italic ff 300.00 scf sf
195 2340 m
gs 1 -1 sc (D) col-1 sh gr
/Times-Italic ff 300.00 scf sf
1425 3930 m
gs 1 -1 sc (M) col-1 sh gr
/Times-Italic ff 300.00 scf sf
2640 3930 m
gs 1 -1 sc (H) col-1 sh gr
/Times-Italic ff 300.00 scf sf
6953 2289 m
gs 1 -1 sc (E) col-1 sh gr
/Times-Italic ff 300.00 scf sf
8523 4704 m
gs 1 -1 sc (B) col-1 sh gr
/Times-Italic ff 300.00 scf sf
7255 4704 m
gs 1 -1 sc (A) col-1 sh gr
/Times-Italic ff 300.00 scf sf
6410 3739 m
gs 1 -1 sc (F) col-1 sh gr
/Times-Italic ff 300.00 scf sf
9188 3255 m
gs 1 -1 sc (C) col-1 sh gr
/Times-Italic ff 300.00 scf sf
9792 4704 m
gs 1 -1 sc (R) col-1 sh gr
/Times-Italic ff 300.00 scf sf
5625 2712 m
gs 1 -1 sc (T) col-1 sh gr
/Times-Italic ff 300.00 scf sf
6168 4704 m
gs 1 -1 sc (P) col-1 sh gr
/Times-Italic ff 300.00 scf sf
8372 1942 m
gs 1 -1 sc (D) col-1 sh gr
/Times-Italic ff 300.00 scf sf
8040 5580 m
gs 1 -1 sc (U) col-1 sh gr
/Times-Italic ff 300.00 scf sf
7453 735 m
gs 1 -1 sc (Q) col-1 sh gr
/Times-Italic ff 300.00 scf sf
9852 1685 m
gs 1 -1 sc (S) col-1 sh gr
$F2psEnd
rs
showpage

%%EndDocument

 endTexFig
 -60 3804 a Fm(Problem)42 b(2.)68 b(\(F)-9 b(or)42 b(the)g(Die-Hards\))
36 b Fl(Let)h Fk(AB)5 b(C)i(D)s(E)e(F)49 b Fl(b)s(e)35
b(a)i(con)m(v)m(ex)i(hexagon.)59 b(Let)38 b Fk(P)s(;)15
b(Q;)36 b Fl(and)g Fk(R)i Fl(b)s(e)-60 3911 y(the)31
b(in)m(tersections)g(of)g(the)h(lines)d Fk(AB)36 b Fl(and)31
b Fk(E)5 b(F)13 b Fl(,)31 b Fk(E)5 b(F)45 b Fl(and)31
b Fk(C)7 b(D)s Fl(,)30 b Fk(C)7 b(D)34 b Fl(and)c Fk(AB)5
b Fl(,)32 b(resp)s(ectiv)m(ely)-8 b(.)42 b(Let)32 b Fk(S;)15
b(T)8 b(;)15 b(U)42 b Fl(b)s(e)-60 4019 y(the)35 b(in)m(tersections)f
(of)g(the)h(lines)e Fk(B)5 b(C)40 b Fl(and)34 b Fk(D)s(E)5
b Fl(,)36 b Fk(D)s(E)k Fl(and)34 b Fk(F)13 b(A)p Fl(,)36
b Fk(F)13 b(A)34 b Fl(and)g Fk(B)5 b(C)i Fl(,)35 b(resp)s(ectiv)m(ely)
-8 b(.)53 b(Sho)m(w)34 b(that)h(if)-60 4127 y Fk(AB)5
b(=P)13 b(R)34 b Fl(=)f Fk(C)7 b(D)s(=R)q(Q)33 b Fl(=)g
Fk(E)5 b(F)j(=QP)13 b Fl(,)37 b(then)e Fk(B)5 b(C)t(=U)10
b(S)38 b Fl(=)33 b Fk(D)s(E)5 b(=S)g(T)47 b Fl(=)33 b
Fk(F)13 b(A=T)g(U)d Fl(.)56 b(\(Math)36 b(Olympiad)c(Summer)-60
4235 y(Program'98,)g(Homew)m(ork)f(Assignmen)m(t.\))1471
4202 y Fj(2)p -60 4736 499 4 v 40 4795 a Fg(1)74 4827
y Ff(Note:)39 b Fe(The)29 b(Problem)f(w)n(as)h(discussed)g(at)g(length)
f(at)g(the)g(Math)h(Circle)h(W)-6 b(orkshop)27 b(on)i(June)f(6th)g
(1998)i(in)e(La)n(wrence)h(Hall)-60 4919 y(of)d(Science.)34
b(Let's)25 b(see)h(if)f(an)n(y)n(one)g(remem)n(b)r(ers)e(the)h(b)r
(eautiful)i(solution)g(w)n(e)f(sa)n(w)h(there!)34 b(No)n(w,)25
b(imagine)g(y)n(ou)f(are)i(in)f(7{8th)g(grade,)-60 5010
y(and)31 b(y)n(ou)f(ha)n(v)n(en't)g(y)n(et)g(heard)h(of)g
(\\trigonometry")h(\(o)r(ops,)h(that's)e(a)g(hin)n(t)f(for)i(the)f(adv)
l(anced!)49 b(:-\)\),)32 b(and)f(y)n(our)f(whole)i(w)n(orld)f(of)-60
5101 y(geometric)c(tric)n(ks)g(consists)h(of)g(similar)g(and)e
(congruen)n(t)h(triangles,)i(and,)e(sa)n(y)-6 b(,)28
b(y)n(ou)e(kno)n(w)h(that)f(the)h(sum)f(of)i(angles)g(in)f(a)g
(triangle)-60 5193 y(is)e(180)130 5161 y Fd(\016)167
5193 y Fe(.)34 b(Can)25 b(y)n(ou)e(do)i(with?)34 b(Pla)n(y)25
b(with)f(it)h(and)e(see)i(ho)n(w)g(far)g(y)n(ou)f(can)g(get.)35
b(Solutions)24 b(to)h(this)f(Problem)g(1)h(and)f(Problem)g(2)h(will)-60
5284 y(b)r(e)h(handed)e(after)j(the)e(talk.)40 5343 y
Fg(2)74 5375 y Ff(W)-7 b(arning:)33 b Fe(Don't)21 b(try)g(this)h(at)f
(home)g(unless)h(y)n(ou)e(really)j(kno)n(w)e(what)h(y)n(ou)e(are)i
(doing!)34 b(This)22 b(problem)f(is)h(really)g(hard.)33
b(When)-60 5466 y(y)n(ou)c(see)i(the)e(solution)i(y)n(ou)e(will)i(b)r
(e)f(surprised)g(that)f(it)h(do)r(esn't)h(require)e(an)n(y)g(adv)l
(anced)h(mathematical)f(to)r(ols;)k(BUT)e(ho)n(w)f(one)-60
5558 y(can)c(come)f(up)g(with)h(suc)n(h)f(a)h(solution)h({)f(that)f
(where)h(the)f(m)n(ystery)f(is!)35 b(So,)26 b(go)r(o)r(d)h(luc)n(k.)34
b(:-\))p eop
%%Page: 2 2
2 1 bop -60 43 a Fj(2)-60 241 y Fm(Problem)38 b(3.)56
b(\(Desargues')38 b(Theorem\))32 b Fc(4)p Fk(AB)5 b(C)39
b Fl(and)32 b Fc(4)p Fk(A)2212 255 y Fj(1)2251 241 y
Fk(B)2320 255 y Fj(1)2360 241 y Fk(C)2425 255 y Fj(1)2497
241 y Fl(are)i(p)s(ositioned)d(in)g(suc)m(h)i(a)g(w)m(a)m(y)h(that)-60
349 y(lines)d Fk(AA)286 363 y Fj(1)326 349 y Fl(,)j Fk(B)5
b(B)528 363 y Fj(1)567 349 y Fl(,)34 b(and)f Fk(C)7 b(C)943
363 y Fj(1)1015 349 y Fl(in)m(tersect)34 b(in)e(a)h(p)s(oin)m(t)f
Fk(O)s Fl(.)49 b(If)33 b(lines)e Fk(AB)38 b Fl(and)33
b Fk(A)2685 363 y Fj(1)2724 349 y Fk(B)2793 363 y Fj(1)2833
349 y Fl(,)h Fk(AC)40 b Fl(and)32 b Fk(A)3312 363 y Fj(1)3352
349 y Fk(C)3417 363 y Fj(1)3456 349 y Fl(,)i Fk(B)5 b(C)40
b Fl(and)-60 457 y Fk(B)9 471 y Fj(1)48 457 y Fk(C)113
471 y Fj(1)183 457 y Fl(are)31 b(pairwise)d(not)j(parallel,)e(pro)m(v)m
(e)i(that)g(their)e(p)s(oin)m(ts)g(of)i(in)m(tersection,)f
Fk(L)p Fl(,)h Fk(M)40 b Fl(and)30 b Fk(N)10 b Fl(,)30
b(are)h(collinear.)690 620 y
 18945146 18945146 6907084 13485260 33351352 38613893 startTexFig
 690 620 a
%%BeginDocument: ../WOKRSHOP1/BAMA4.ps
%!PS-Adobe-2.0
%%Title: BAMA4.ps
%%Creator: fig2dev Version 3.2 Patchlevel 0-beta3
%%CreationDate: Tue Sep 28 15:07:38 1999
%%For: stankova@asparuch.mills.edu (Zvezdelina Stankova-Frenekl)
%%Orientation: Portrait
%%BoundingBox: 105 205 507 587
%%Pages: 1
%%BeginSetup
%%IncludeFeature: *PageSize Letter
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
1.0 657.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 32 true [ 32 0 0 -32 0 32 ]
	{<010101010202020204040404080808081010101020202020
	404040408080808001010101020202020404040408080808
	101010102020202040404040808080800101010102020202
	040404040808080810101010202020204040404080808080
	010101010202020204040404080808081010101020202020
	4040404080808080>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 8533 m -1000 -1000 l 9420 -1000 l 9420 8533 l cp clip
 0.06000 0.06000 sc
%%Page: 1 1
7.500 slw
% Ellipse
n 5668 4487 56 56 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 5946 3861 56 56 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 6171 4621 56 56 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 6914 6810 56 56 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 1939 5065 56 56 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 3563 4015 56 56 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 7358 1570 56 56 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 7028 5530 56 56 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 6323 4375 56 56 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 5288 5395 56 56 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Polyline
 [60] 0 sd
n 5256 5396 m 6968 6861 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 7047 5557 m 6951 6826 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 3618 4014 m 6201 4623 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 5293 5396 m 5944 3803 l gs col0 s gr  [] 0 sd
% Polyline
n 1964 5072 m 7914 5636 l gs col0 s gr 
% Polyline
n 1922 5072 m 8408 4029 l gs col0 s gr 
% Polyline
n 1922 5072 m 7974 1180 l gs col0 s gr 
% Polyline
 [60] 0 sd
n 7047 5557 m 5923 3787 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 7363 1584 m 6201 4623 l gs col0 s gr  [] 0 sd
% Polyline
30.000 slw
 [120] 0 sd
n 5778 3363 m 7141 7500 l gs col0 s gr  [] 0 sd
/Times-Italic ff 255.00 scf sf
5124 5681 m
gs 1 -1 sc (A) col0 sh gr
/Times-Italic ff 255.00 scf sf
3400 3913 m
gs 1 -1 sc (C) col0 sh gr
/Times-Italic ff 255.00 scf sf
5724 3881 m
gs 1 -1 sc (L) col0 sh gr
/Times-Italic ff 255.00 scf sf
5978 4915 m
gs 1 -1 sc (N) col0 sh gr
/Times-Italic ff 255.00 scf sf
6638 7045 m
gs 1 -1 sc (M) col0 sh gr
/Times-Italic ff 255.00 scf sf
7103 5826 m
gs 1 -1 sc (A) col0 sh gr
/Times-Italic ff 210.00 scf sf
7232 5920 m
gs 1 -1 sc (1) col0 sh gr
/Times-Italic ff 255.00 scf sf
1740 5019 m
gs 1 -1 sc (O) col0 sh gr
/Times-Italic ff 255.00 scf sf
7073 1447 m
gs 1 -1 sc (C) col0 sh gr
/Times-Italic ff 210.00 scf sf
7220 1555 m
gs 1 -1 sc (1) col0 sh gr
/Times-Italic ff 255.00 scf sf
5519 4384 m
gs 1 -1 sc (B) col0 sh gr
/Times-Italic ff 255.00 scf sf
6102 4233 m
gs 1 -1 sc (B) col0 sh gr
/Times-Italic ff 210.00 scf sf
6218 4345 m
gs 1 -1 sc (1) col0 sh gr
% Polyline
n 3598 4014 m 5647 4492 l 5273 5410 l 3598 4014 l  cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 239.87 267.60] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 7363 1584 m 7047 5572 l 6298 4382 l 7363 1584 l  cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 419.87 105.60] PATmp PATsp ef gr PATusp gs col0 s gr 
$F2psEnd
rs
end
showpage

%%EndDocument

 endTexFig
 -42 2602 a
 32680349 20366047 1118289 14603550 39205928 37429821 startTexFig
 -42 2602 a
%%BeginDocument: ../WOKRSHOP1/BAMA9.ps
%!PS-Adobe-2.0
%%Title: BAMA9.ps
%%Creator: fig2dev Version 3.2 Patchlevel 0-beta3
%%CreationDate: Tue Sep 28 20:28:09 1999
%%For: stankova@asparuch.mills.edu (Zvezdelina Stankova-Frenekl)
%%Orientation: Portrait
%%BoundingBox: 17 222 596 569
%%Pages: 1
%%BeginSetup
%%IncludeFeature: *PageSize Letter
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-2.5 705.5 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /endash 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-BoldItalic /Times-BoldItalic-iso isovec ReEncode
/Times-Bold /Times-Bold-iso isovec ReEncode
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 9036 m -1000 -1000 l 10954 -1000 l 10954 9036 l cp clip
 0.06000 0.06000 sc
%%Page: 1 1
30.000 slw
% Ellipse
n 5070 6600 1412 1413 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 1791 4462 1448 1448 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 8483 4462 1448 1448 0 360 DrawEllipse gs col0 s gr

% Polyline
15.000 slw
gs  clippath
7584 2951 m 7688 3175 l 7490 3026 l 7694 3278 l 7788 3203 l cp
clip
n 6990 2313 m 7722 3217 l gs col0 s gr gr

% arrowhead
n 7584 2951 m 7688 3175 l 7490 3026 l  col0 s
% Polyline
gs  clippath
2774 3017 m 2575 3166 l 2680 2942 l 2476 3194 l 2570 3269 l cp
clip
n 3274 2304 m 2542 3208 l gs col0 s gr gr

% arrowhead
n 2774 3017 m 2575 3166 l 2680 2942 l  col0 s
% Polyline
gs  clippath
5160 4955 m 5100 5195 l 5040 4955 l 5040 5279 l 5160 5279 l cp
clip
n 5100 5249 m 5100 2775 l gs col0 s gr gr

% arrowhead
n 5160 4955 m 5100 5195 l 5040 4955 l  col0 s
/Times-BoldItalic-iso ff 300.00 scf sf
4408 6071 m
gs 1 -1 sc (Projective) col0 sh gr
/Times-BoldItalic-iso ff 300.00 scf sf
4055 6424 m
gs 1 -1 sc (Transformation) col0 sh gr
/Times-BoldItalic-iso ff 300.00 scf sf
1114 3829 m
gs 1 -1 sc (Menelaus) col0 sh gr
/Times-BoldItalic-iso ff 300.00 scf sf
7896 4282 m
gs 1 -1 sc (3d-space) col0 sh gr
/Times-BoldItalic-iso ff 300.00 scf sf
7986 3920 m
gs 1 -1 sc (Exit into) col0 sh gr
/Times-BoldItalic-iso ff 300.00 scf sf
1114 4191 m
gs 1 -1 sc (Theorem) col0 sh gr
/Times-Bold-iso ff 330.00 scf sf
4408 7218 m
gs 1 -1 sc (Projective) col0 sh gr
/Times-Bold-iso ff 330.00 scf sf
4408 7570 m
gs 1 -1 sc (Geometry) col0 sh gr
/Times-Bold-iso ff 330.00 scf sf
7500 4875 m
gs 1 -1 sc (3-dimensional) col0 sh gr
/Times-Bold-iso ff 330.00 scf sf
1350 4875 m
gs 1 -1 sc (Plane) col0 sh gr
/Times-Bold-iso ff 330.00 scf sf
1050 5250 m
gs 1 -1 sc (Geometry) col0 sh gr
/Times-Bold-iso ff 330.00 scf sf
7800 5250 m
gs 1 -1 sc (Geometry) col0 sh gr
$F2psEnd
rs
showpage

%%EndDocument

 endTexFig
 eop
%%Page: 3 3
3 2 bop 3805 43 a Fj(3)-60 241 y Fm(Problem)33 b(4.)46
b(\(P)m(ascal's)33 b(Theorem\))28 b Fl(If)g(the)h(hexagon)g
Fk(AB)5 b(C)i(D)s(E)e(F)41 b Fl(is)27 b(cyclic)i(and)f(its)f(opp)s
(osite)h(sides,)g Fk(AB)-60 349 y Fl(and)39 b Fk(D)s(E)5
b Fl(,)41 b Fk(B)5 b(C)46 b Fl(and)38 b Fk(E)5 b(F)13
b Fl(,)42 b Fk(C)7 b(D)42 b Fl(and)d Fk(F)13 b(A)p Fl(,)42
b(are)d(pairwise)e(not)j(parallel,)g(pro)m(v)m(e)g(that)g(their)e
(three)i(p)s(oin)m(ts)e(of)-60 457 y(in)m(tersection,)30
b Fk(X)7 b Fl(,)31 b Fk(Y)51 b Fl(and)29 b Fk(Z)7 b Fl(,)31
b(are)f(collinear.)390 620 y
 23681433 17050661 10130391 19076710 30193827 32956661 startTexFig
 390 620 a
%%BeginDocument: ../WOKRSHOP1/BAMA7.ps
%!PS-Adobe-2.0
%%Title: BAMA7.ps
%%Creator: fig2dev Version 3.2 Patchlevel 0-beta3
%%CreationDate: Tue Sep 28 15:23:55 1999
%%For: stankova@asparuch.mills.edu (Zvezdelina Stankova-Frenekl)
%%Orientation: Portrait
%%BoundingBox: 154 290 459 501
%%Pages: 1
%%BeginSetup
%%IncludeFeature: *PageSize Letter
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-6.5 654.5 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 7060 m -1000 -1000 l 8737 -1000 l 8737 7060 l cp clip
 0.06000 0.06000 sc
%%Page: 1 1
7.500 slw
% Ellipse
n 2962 5442 34 34 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 4794 5592 34 34 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 7488 5786 34 34 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 5602 3868 34 34 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 5333 4472 34 34 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 4471 4816 34 34 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 3651 4267 34 34 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 4535 2779 34 34 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 4018 4666 34 34 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 4557 3792 1027 1027 0 360 DrawEllipse gs col0 s gr

% Polyline
30.000 slw
 [120] 0 sd
n 2951 5452 m 7499 5797 l gs col0 s gr  [] 0 sd
% Polyline
n 3651 4267 m 4535 2769 l 4546 2790 l gs col0 s gr 
% Polyline
7.500 slw
 [60] 0 sd
n 4402 2996 m 2818 5669 l gs col0 s gr  [] 0 sd
% Polyline
30.000 slw
n 5322 4472 m 5602 3879 l 4535 2779 l 4535 2790 l gs col0 s gr 
% Polyline
7.500 slw
 [60] 0 sd
n 4695 2945 m 7659 5941 l 7659 5952 l gs col0 s gr  [] 0 sd
% Polyline
30.000 slw
n 3662 4278 m 4018 4666 l 4460 4816 l 4460 4827 l gs col0 s gr 
% Polyline
7.500 slw
 [60] 0 sd
n 3843 4463 m 4996 5788 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 4723 5765 m 5510 4062 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 5110 4567 m 2685 5548 l gs col0 s gr  [] 0 sd
% Polyline
30.000 slw
n 4469 4813 m 5353 4468 l gs col0 s gr 
% Polyline
7.500 slw
 [60] 0 sd
n 4241 4754 m 7725 5851 l gs col0 s gr  [] 0 sd
/Times-Italic ff 210.00 scf sf
4395 5064 m
gs 1 -1 sc (C) col0 sh gr
/Times-Italic ff 210.00 scf sf
3835 4870 m
gs 1 -1 sc (B) col0 sh gr
/Times-Italic ff 210.00 scf sf
3425 4353 m
gs 1 -1 sc (A) col0 sh gr
/Times-Italic ff 210.00 scf sf
5387 4666 m
gs 1 -1 sc (D) col0 sh gr
/Times-Italic ff 210.00 scf sf
5688 3889 m
gs 1 -1 sc (E) col0 sh gr
/Times-Italic ff 210.00 scf sf
4449 2704 m
gs 1 -1 sc (F) col0 sh gr
/Times-Italic ff 210.00 scf sf
7425 6060 m
gs 1 -1 sc (Z) col0 sh gr
/Times-Italic ff 210.00 scf sf
4770 5880 m
gs 1 -1 sc (Y) col0 sh gr
/Times-Italic ff 210.00 scf sf
2945 5733 m
gs 1 -1 sc (X) col0 sh gr
$F2psEnd
rs
showpage

%%EndDocument

 endTexFig
 -60 3008 a Fm(Problem)48 b(5.)88 b(\(Brianc)m(hon's)50
b(Theorem\))41 b Fl(If)g(the)i(hexagon)g Fk(AB)5 b(C)i(D)s(E)e(F)54
b Fl(is)41 b(circumscrib)s(ed)e(around)j(a)-60 3116 y(circle,)30
b(pro)m(v)m(e)h(that)g(its)f(three)g(diagonals)g Fk(AD)s(;)15
b(B)5 b(E)35 b Fl(and)30 b Fk(C)7 b(F)43 b Fl(are)31
b(concurren)m(t.)1140 3279 y
 11840716 11840716 14077296 20195000 26181140 31838371 startTexFig
 1140 3279 a
%%BeginDocument: ../WOKRSHOP1/BAMA5.ps
%!PS-Adobe-2.0
%%Title: BAMA5.ps
%%Creator: fig2dev Version 3.2 Patchlevel 0-beta3
%%CreationDate: Tue Sep 28 19:41:01 1999
%%For: stankova@asparuch.mills.edu (Zvezdelina Stankova-Frenekl)
%%Orientation: Portrait
%%BoundingBox: 214 307 398 484
%%Pages: 1
%%BeginSetup
%%IncludeFeature: *PageSize Letter
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
179.0 550.5 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 5050 m -1000 -1000 l 4634 -1000 l 4634 5050 l cp clip
 0.06000 0.06000 sc
%%Page: 1 1
7.500 slw
% Ellipse
n 2130 2677 1108 1108 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 1410 3780 46 46 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 2940 3810 46 46 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 3330 2595 46 46 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 2940 1755 46 46 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 1530 1365 46 46 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 885 2700 46 46 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 2265 2655 46 46 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Polyline
 [60] 0 sd
n 1410 3795 m 2925 1770 l 2910 1770 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2955 3810 m 1545 1395 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 900 2700 m 3330 2610 l 3330 2625 l gs col0 s gr  [] 0 sd
% Polyline
15.000 slw
n 1425 3810 m 2955 3795 l 3315 2610 l 2940 1755 l 1530 1365 l 900 2700 l
 1410 3810 l gs col0 s gr 
/Times-Italic ff 300.00 scf sf
3030 1695 m
gs 1 -1 sc (D) col0 sh gr
/Times-Italic ff 300.00 scf sf
3435 2715 m
gs 1 -1 sc (C) col0 sh gr
/Times-Italic ff 300.00 scf sf
3000 4050 m
gs 1 -1 sc (B) col0 sh gr
/Times-Italic ff 300.00 scf sf
1185 4035 m
gs 1 -1 sc (A) col0 sh gr
/Times-Italic ff 300.00 scf sf
585 2790 m
gs 1 -1 sc (F) col0 sh gr
/Times-Italic ff 300.00 scf sf
1305 1320 m
gs 1 -1 sc (E) col0 sh gr
$F2psEnd
rs
showpage

%%EndDocument

 endTexFig
 eop
%%Page: 4 4
4 3 bop -60 43 a Fj(4)-278 577 y
 35522150 36943050 1249853 7367557 39008583 44665815 startTexFig
 -278 577 a
%%BeginDocument: ../WOKRSHOP1/BAMA10.ps
%!PS-Adobe-2.0
%%Title: BAMA10.ps
%%Creator: fig2dev Version 3.2 Patchlevel 0-beta3
%%CreationDate: Tue Sep 28 20:52:09 1999
%%For: stankova@asparuch.mills.edu (Zvezdelina Stankova-Frenekl)
%%Orientation: Portrait
%%BoundingBox: 19 112 593 679
%%Pages: 1
%%BeginSetup
%%IncludeFeature: *PageSize Letter
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
0.0 724.5 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /endash 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Bold /Times-Bold-iso isovec ReEncode
/Times-BoldItalic /Times-BoldItalic-iso isovec ReEncode
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 11200 m -1000 -1000 l 10879 -1000 l 10879 11200 l cp clip
 0.06000 0.06000 sc
%%Page: 1 1
% Polyline
30.000 slw
n 3620 1925 m 3620 1395 l 3090 1395 l 3620 1925 l  cp gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 1800 1875 m 1801 1875 l 1805 1875 l 1811 1876 l 1821 1876 l 1835 1877 l
 1853 1878 l 1876 1879 l 1904 1881 l 1937 1882 l 1974 1884 l
 2016 1886 l 2061 1888 l 2110 1891 l 2162 1893 l 2215 1895 l
 2270 1898 l 2325 1900 l 2381 1901 l 2436 1903 l 2490 1904 l
 2542 1905 l 2593 1906 l 2641 1906 l 2688 1906 l 2731 1905 l
 2773 1903 l 2812 1901 l 2848 1899 l 2882 1895 l 2914 1891 l
 2945 1887 l 2973 1881 l 3000 1875 l 3034 1866 l 3066 1855 l
 3098 1842 l 3129 1827 l 3159 1810 l 3190 1792 l 3221 1771 l
 3252 1748 l 3284 1723 l 3316 1697 l 3347 1669 l 3379 1641 l
 3410 1612 l 3440 1584 l 3468 1557 l 3495 1531 l 3519 1508 l
 3540 1487 l 3557 1469 l 3572 1454 l 3583 1443 l 3591 1434 l
 3596 1429 l 3599 1426 l 3600 1425 l gs col0 s gr 
% Polyline
n 3232 3240 m 3232 3239 l 3231 3235 l 3231 3229 l 3230 3219 l 3228 3206 l
 3226 3187 l 3224 3164 l 3221 3136 l 3217 3104 l 3214 3066 l
 3209 3025 l 3205 2979 l 3200 2931 l 3195 2880 l 3190 2826 l
 3185 2772 l 3180 2716 l 3175 2661 l 3171 2606 l 3166 2552 l
 3163 2500 l 3160 2450 l 3157 2401 l 3155 2355 l 3153 2311 l
 3153 2270 l 3153 2231 l 3153 2194 l 3155 2160 l 3157 2127 l
 3160 2097 l 3164 2068 l 3169 2041 l 3177 2007 l 3186 1974 l
 3197 1942 l 3210 1910 l 3225 1878 l 3243 1847 l 3262 1815 l
 3283 1782 l 3306 1749 l 3331 1716 l 3357 1683 l 3383 1650 l
 3410 1617 l 3437 1586 l 3463 1556 l 3487 1528 l 3510 1503 l
 3529 1481 l 3546 1462 l 3560 1447 l 3571 1435 l 3579 1427 l
 3584 1421 l 3587 1418 l 3588 1417 l gs col0 s gr 
% Polyline
n 6570 8935 m 6570 9465 l 7100 9465 l 6570 8935 l  cp gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 8390 8985 m 8389 8985 l 8385 8985 l 8379 8984 l 8369 8984 l 8355 8983 l
 8337 8982 l 8314 8981 l 8286 8979 l 8253 8978 l 8216 8976 l
 8174 8974 l 8129 8972 l 8080 8969 l 8028 8967 l 7975 8965 l
 7920 8962 l 7865 8960 l 7809 8959 l 7754 8957 l 7700 8956 l
 7648 8955 l 7597 8954 l 7549 8954 l 7502 8954 l 7459 8955 l
 7417 8957 l 7378 8959 l 7342 8961 l 7308 8965 l 7276 8969 l
 7245 8973 l 7217 8979 l 7190 8985 l 7156 8994 l 7124 9005 l
 7092 9018 l 7061 9033 l 7031 9050 l 7000 9068 l 6969 9089 l
 6938 9112 l 6906 9137 l 6874 9163 l 6843 9191 l 6811 9219 l
 6780 9248 l 6750 9276 l 6722 9303 l 6695 9329 l 6671 9352 l
 6650 9373 l 6633 9391 l 6618 9406 l 6607 9417 l 6599 9426 l
 6594 9431 l 6591 9434 l 6590 9435 l gs col0 s gr 
% Polyline
n 6958 7620 m 6958 7621 l 6959 7625 l 6959 7631 l 6960 7641 l 6962 7654 l
 6964 7673 l 6966 7696 l 6969 7724 l 6973 7756 l 6976 7794 l
 6981 7835 l 6985 7881 l 6990 7929 l 6995 7980 l 7000 8034 l
 7005 8088 l 7010 8144 l 7015 8199 l 7019 8254 l 7024 8308 l
 7027 8360 l 7030 8410 l 7033 8459 l 7035 8505 l 7037 8549 l
 7037 8590 l 7037 8629 l 7037 8666 l 7035 8700 l 7033 8733 l
 7030 8763 l 7026 8792 l 7021 8819 l 7013 8853 l 7004 8886 l
 6993 8918 l 6980 8950 l 6965 8982 l 6947 9013 l 6928 9045 l
 6907 9078 l 6884 9111 l 6859 9144 l 6833 9177 l 6807 9210 l
 6780 9243 l 6753 9274 l 6727 9304 l 6703 9332 l 6680 9357 l
 6661 9379 l 6644 9398 l 6630 9413 l 6619 9425 l 6611 9433 l
 6606 9439 l 6603 9442 l 6602 9443 l gs col0 s gr 
% Ellipse
n 5115 5490 1412 1413 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 1791 3337 1448 1448 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 8408 7537 1448 1448 0 360 DrawEllipse gs col0 s gr

% Polyline
n 4950 8925 m 4950 6900 l gs col0 s gr 
% Polyline
n 5250 8925 m 5250 6900 l gs col0 s gr 
% Polyline
n 5250 2055 m 5250 4080 l gs col0 s gr 
% Polyline
n 4950 2055 m 4950 4080 l gs col0 s gr 
% Polyline
n 5475 2055 m 5100 1680 l 4725 2055 l 5475 2055 l  cp gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 4725 8925 m 5100 9300 l 5475 8925 l 4725 8925 l  cp gs col7 0.00 shd ef gr gs col0 s gr 
/Times-Bold-iso ff 330.00 scf sf
4050 6075 m
gs 1 -1 sc (Non-Euclidean) col0 sh gr
/Times-Bold-iso ff 330.00 scf sf
4425 5700 m
gs 1 -1 sc (Euclidean/) col0 sh gr
/Times-Bold-iso ff 330.00 scf sf
4500 6450 m
gs 1 -1 sc (Geometry) col0 sh gr
/Times-Bold-iso ff 330.00 scf sf
1114 4061 m
gs 1 -1 sc (Geometry) col0 sh gr
/Times-Bold-iso ff 330.00 scf sf
1385 3699 m
gs 1 -1 sc (Plane) col0 sh gr
/Times-BoldItalic-iso ff 390.00 scf sf
975 2700 m
gs 1 -1 sc (Menelaus) col0 sh gr
/Times-BoldItalic-iso ff 390.00 scf sf
1050 3075 m
gs 1 -1 sc (Theorem) col0 sh gr
/Times-BoldItalic-iso ff 390.00 scf sf
4425 5025 m
gs 1 -1 sc (Inversion) col0 sh gr
/Times-BoldItalic-iso ff 390.00 scf sf
7725 6900 m
gs 1 -1 sc (Exit into) col0 sh gr
/Times-BoldItalic-iso ff 390.00 scf sf
7650 7350 m
gs 1 -1 sc (3d-space) col0 sh gr
/Times-Bold-iso ff 330.00 scf sf
7425 7875 m
gs 1 -1 sc (3-dimensional) col0 sh gr
/Times-Bold-iso ff 330.00 scf sf
7800 8250 m
gs 1 -1 sc (Geometry) col0 sh gr
/Times-BoldItalic-iso ff 450.00 scf sf
3210 10200 m
gs 1 -1 sc (Brianchon's Theorem) col0 sh gr
/Times-BoldItalic-iso ff 450.00 scf sf
3585 1050 m
gs 1 -1 sc (Pascal's Theorem) col0 sh gr
$F2psEnd
rs
showpage

%%EndDocument

 endTexFig
 eop
%%Page: 5 5
5 4 bop 3805 43 a Fj(5)-60 241 y Fb(Note:)49 b Fl(\\W)-8
b(e)36 b(sa)m(y)f(that)g(sev)m(eral)g(p)s(oin)m(ts)e(are)i
Fb(c)-5 b(ol)5 b(line)-5 b(ar)36 b Fl(if)e(they)h(lie)e(on)h(a)h(line.)
52 b(Similarly)-8 b(,)32 b(sev)m(eral)j(p)s(oin)m(ts)f(are)-60
349 y Fb(c)-5 b(oncyclic)35 b Fl(if)f(they)i(lie)e(on)h(a)g(circle;)i
(an)e Fb(inscrib)-5 b(e)g(d)36 b Fl(\(cyclic\))f(p)s(olygon)f(has)h
(its)g(v)m(ertices)g(lying)f(on)h(a)g(circle.)54 b(If)-60
460 y(three)33 b(distinct)f(p)s(oin)m(ts)g Fk(A)p Fl(,)i
Fk(B)j Fl(and)32 b Fk(C)40 b Fl(are)33 b(collinear,)g(then)f(the)i
Fb(dir)-5 b(e)g(cte)g(d)36 b(r)-5 b(atio)p 2769 387 142
4 v 35 w Fk(AB)5 b(=)p 2956 387 145 4 v(C)i(B)37 b Fl(is)32
b(the)h(ratio)h(of)f(the)-60 568 y(lengths)g(of)i(segmen)m(ts)g
Fk(AB)k Fl(and)34 b Fk(C)7 b(B)e Fl(,)34 b(tak)m(en)h(with)e(a)i(sign)e
(\\+")i(if)e(the)i(segmen)m(ts)g(ha)m(v)m(e)g(the)g(same)f(direction)
-60 676 y(\(i.e.)40 b Fk(B)33 b Fl(is)27 b Fb(not)i Fl(b)s(et)m(w)m
(een)g Fk(A)g Fl(and)e Fk(C)7 b Fl(\),)29 b(and)f(with)f(a)h(sign)g(\\)
p Fc(\000)p Fl(")h(if)e(the)h(segmen)m(ts)i(ha)m(v)m(e)f(opp)s(osite)f
(directions)e(\(i.e.)-60 784 y Fk(B)37 b Fl(is)31 b(b)s(et)m(w)m(een)i
Fk(A)f Fl(and)f Fk(C)7 b Fl(\).)46 b(Sev)m(eral)32 b(ob)5
b(jects)33 b(\(lines,)f(circles,)g(etc.\))47 b(are)33
b Fb(c)-5 b(oncurr)g(ent)33 b Fl(if)e(they)i(all)e(in)m(tersect)h(in)
-60 892 y(some)f(p)s(oin)m(t.)-60 1236 y Fm(Problem)f(6.)46
b(\(Menelaus')30 b(Theorem\))25 b Fl(Let)i Fk(A)1721
1250 y Fj(1)1761 1236 y Fk(;)15 b(B)1870 1250 y Fj(1)1936
1236 y Fl(and)26 b Fk(C)2174 1250 y Fj(1)2240 1236 y
Fl(b)s(e)g(three)g(p)s(oin)m(ts)g(on)g(the)h(sides)e
Fk(B)5 b(C)q(;)15 b(C)7 b(A)27 b Fl(and)-60 1344 y Fk(AB)35
b Fl(of)c Fc(4)p Fk(AB)5 b(C)i Fl(.)39 b(Then)30 b(they)g(are)h
(collinear)e(if)g(and)h(only)f(if)p 1441 1415 177 4 v
1441 1488 a Fk(AB)1578 1502 y Fj(1)p 1439 1528 180 4
v 1439 1547 V 1439 1620 a Fk(C)7 b(B)1580 1634 y Fj(1)1649
1549 y Fc(\001)p 1705 1415 V 1705 1488 a Fk(C)g(A)1845
1502 y Fj(1)p 1704 1528 182 4 v 1704 1547 V 1704 1620
a Fk(B)e(A)1846 1634 y Fj(1)1916 1549 y Fc(\001)p 1971
1415 178 4 v 1971 1488 a Fk(B)g(C)2110 1502 y Fj(1)p
1971 1528 V 1974 1547 173 4 v 1974 1620 a Fk(AC)2107
1634 y Fj(1)2184 1549 y Fl(=)25 b(1)p Fk(:)840 1817 y
 16577003 8525330 10985553 22168453 29207101 29930700 startTexFig

840 1817 a
%%BeginDocument: ../WOKRSHOP1/BAMA6.ps
%!PS-Adobe-2.0
%%Title: BAMA6.ps
%%Creator: fig2dev Version 3.2 Patchlevel 0-beta3
%%CreationDate: Tue Sep 28 15:21:28 1999
%%For: stankova@asparuch.mills.edu (Zvezdelina Stankova-Frenekl)
%%Orientation: Portrait
%%BoundingBox: 167 337 444 455
%%Pages: 1
%%BeginSetup
%%IncludeFeature: *PageSize Letter
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
6.5 584.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 5110 m -1000 -1000 l 8289 -1000 l 8289 5110 l cp clip
 0.06000 0.06000 sc
%%Page: 1 1
/Times-Italic ff 240.00 scf sf
6753 3731 m
gs 1 -1 sc (C) col0 sh gr
/Times-Italic ff 180.00 scf sf
6900 3817 m
gs 1 -1 sc (1) col0 sh gr
7.500 slw
 [60] 0 sd
% Ellipse
n 3557 2931 38 38 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr
 [] 0 sd
 [60] 0 sd
% Ellipse
n 4993 3336 38 38 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr
 [] 0 sd
 [60] 0 sd
% Ellipse
n 6835 3864 38 38 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr
 [] 0 sd
 [60] 0 sd
% Ellipse
n 5607 3852 38 38 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr
 [] 0 sd
 [60] 0 sd
% Ellipse
n 2919 3864 38 38 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr
 [] 0 sd
 [60] 0 sd
% Ellipse
n 3900 2403 38 38 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr
 [] 0 sd
% Polyline
 [60] 0 sd
n 5620 3864 m 7277 3864 l gs col0 s gr  [] 0 sd
% Polyline
n 3164 2821 m 7277 3986 l gs col0 s gr 
% Polyline
15.000 slw
n 2919 3864 m 3900 2391 l 5620 3864 l 2919 3864 l  cp gs col0 s gr 
/Times-Italic ff 240.00 scf sf
5644 4110 m
gs 1 -1 sc (B) col0 sh gr
/Times-Italic ff 240.00 scf sf
5018 3238 m
gs 1 -1 sc (A) col0 sh gr
/Times-Italic ff 240.00 scf sf
3741 2317 m
gs 1 -1 sc (C) col0 sh gr
/Times-Italic ff 240.00 scf sf
2685 4110 m
gs 1 -1 sc (A) col0 sh gr
/Times-Italic ff 240.00 scf sf
3348 2784 m
gs 1 -1 sc (B) col0 sh gr
/Times-Italic ff 180.00 scf sf
5165 3324 m
gs 1 -1 sc (1) col0 sh gr
/Times-Italic ff 180.00 scf sf
3483 2870 m
gs 1 -1 sc (1) col0 sh gr
$F2psEnd
rs
showpage

%%EndDocument

 endTexFig
 718 3181 a Fa(First)34 b(Pr)n(oof)g(of)f(Desar)n(gue's)g(Theorem)h
(via)g(Menela)n(us)40 3343 y Fl(Apply)g(Menelaus')i(Theorem)g(3)g
(times)f(to,)k(resp)s(ectiv)m(ely)-8 b(,)37 b Fc(4)p
Fk(O)s(B)5 b(C)42 b Fl(and)35 b(line)g Fk(N)10 b(B)2980
3357 y Fj(1)3019 3343 y Fk(C)3084 3357 y Fj(1)3123 3343
y Fl(,)38 b Fc(4)p Fk(O)s(AB)i Fl(and)c(line)-60 3451
y Fk(LB)71 3465 y Fj(1)110 3451 y Fk(A)178 3465 y Fj(1)218
3451 y Fl(,)30 b(and)g Fc(4)p Fk(O)s(AC)37 b Fl(and)30
b(line)e Fk(M)10 b(A)1287 3465 y Fj(1)1327 3451 y Fk(C)1392
3465 y Fj(1)1431 3451 y Fl(:)p 1412 3612 155 4 v 1412
3685 a Fk(C)d(N)p 1411 3726 157 4 v 1411 3744 V 1411
3817 a(B)e(N)1598 3747 y Fc(\001)p 1653 3612 182 4 v
1653 3685 a Fk(B)g(B)1796 3699 y Fj(1)p 1653 3726 V 1654
3744 181 4 v 1654 3817 a Fk(O)s(B)1795 3831 y Fj(1)1865
3747 y Fc(\001)p 1921 3612 177 4 v 1921 3685 a Fk(O)s(C)2058
3699 y Fj(1)p 1921 3726 V 1921 3744 176 4 v 1921 3817
a Fk(C)i(C)2058 3831 y Fj(1)2190 3747 y Fl(=)83 b(1)p
1429 3873 136 4 v 1429 3946 a Fk(B)5 b(L)p 1429 3987
V 1432 4005 131 4 v 1432 4078 a(AL)1595 4008 y Fc(\001)p
1652 3873 176 4 v 1652 3946 a Fk(AA)1788 3960 y Fj(1)p
1650 3987 180 4 v 1650 4005 V 1650 4078 a Fk(O)s(A)1790
4092 y Fj(1)1860 4008 y Fc(\001)p 1916 3873 181 4 v 1916
3946 a Fk(O)s(B)2057 3960 y Fj(1)p 1915 3987 182 4 v
1915 4005 V 1915 4078 a Fk(B)g(B)2058 4092 y Fj(1)2190
4008 y Fl(=)83 b(1)p 1402 4134 167 4 v 1402 4207 a Fk(AM)p
1401 4248 170 4 v 1401 4266 V 1401 4339 a(C)7 b(M)1600
4269 y Fc(\001)p 1656 4134 176 4 v 1656 4207 a Fk(C)g(C)1793
4221 y Fj(1)p 1656 4248 177 4 v 1656 4266 V 1656 4339
a Fk(O)s(C)1793 4353 y Fj(1)1862 4269 y Fc(\001)p 1918
4134 180 4 v 1918 4207 a Fk(O)s(A)2058 4221 y Fj(1)p
1918 4248 V 1920 4266 176 4 v 1920 4339 a Fk(AA)2056
4353 y Fj(1)2190 4269 y Fl(=)83 b(1)-60 4462 y(No)m(w)31
b(w)m(e)g(m)m(ultiply)d(the)i(three)h(equalities)e(and)g(cancel)i(out)g
(ev)m(erything)f(w)m(e)h(can.)41 b(W)-8 b(e)31 b(are)g(left)f(with)p
1434 4533 167 4 v 1434 4606 a Fk(AM)p 1433 4647 170 4
v 1433 4665 V 1433 4738 a(C)7 b(M)1632 4668 y Fc(\001)p
1689 4533 155 4 v 1689 4606 a Fk(C)g(N)p 1688 4647 157
4 v 1688 4665 V 1688 4738 a(B)e(N)1874 4668 y Fc(\001)p
1930 4533 136 4 v 1930 4606 a Fk(B)g(L)p 1930 4647 V
1933 4665 131 4 v 1933 4738 a(AL)2158 4668 y Fl(=)83
b(1)-60 4852 y(whic)m(h)32 b(again)g(b)m(y)h(Menelaus)g(\(the)g(rev)m
(erse)g(direction)f(of)h(the)g(theorem\))g(implies)d(that)k(p)s(oin)m
(ts)d Fk(M)10 b Fl(,)34 b Fk(N)43 b Fl(and)32 b Fk(N)-60
4960 y Fl(are)f(collinear.)p 3774 4960 4 62 v 3778 4902
55 4 v 3778 4960 V 3832 4960 4 62 v -60 5106 a Fm(Question:)45
b Fl(What)33 b(happ)s(ens)e(if)h(some)h(of)g(the)g(pairs)e(of)i(lines)e
(in)h(the)h(problem)e(\(or)i(in)e(the)i(solution\))f(do)h(not)-60
5214 y(in)m(tersect,)f(i.e.)44 b(they)32 b(are)f(parallel?)42
b(Can)31 b(y)m(ou)h(still)d(solv)m(e)j(the)f(problem)f(using)g(a)i(mo)s
(di\014cation)e(of)h(the)h(ab)s(o)m(v)m(e)-60 5322 y(metho)s(d?)p
eop
%%Page: 6 6
6 5 bop -60 43 a Fj(6)394 241 y Fa(Second)32 b(Pr)n(oof)i(of)g(Desar)n
(gue's)f(Theorem)g(via)i(Pr)n(ojective)e(Geometr)-6 b(y)40
403 y Fl(It)32 b(turns)f(out)i(that)g(it)f(is)f(not)i(so)f(bad)g(to)h
(ha)m(v)m(e)g(some)g(of)g(the)f(pairs)f(of)i(lines)d(in)h(the)i
(setting)f(of)h(Desargues')-60 511 y(b)s(e)c(parallel.)38
b(In)29 b(fact,)i(making)e Fb(al)5 b(l)30 b Fl(suc)m(h)f(lines)f
(parallel)g(pairwise)f(is)i(the)h(basis)e(for)h(the)h
Fb(Pr)-5 b(oje)g(ctive)32 b(Ge)-5 b(ometry)-60 619 y
Fl(pro)s(of.)40 726 y(There)33 b(are)i(certain)g(nice)e
(transformations)h(in)f(the)h(plane,)h(called)f Fb(pr)-5
b(oje)g(ctive)p Fl(,)36 b(whic)m(h)e(send)f(lines)g(to)i(lines)-60
834 y({)44 b(nothing)e(really)h(surprising)d(here:)66
b(sa)m(y)-8 b(,)48 b(re\015ections)c(across)g(a)g(p)s(oin)m(t)e(or)i
(across)g(a)f(line,)j(rotations)e(and)-60 942 y(parallel)39
b(translations)h(are)h(examples)g(of)g(suc)m(h)f(transformations.)72
b(Ho)m(w)m(ev)m(er,)46 b(the)41 b(\\magic")h(of)f(pro)5
b(jectiv)m(e)-60 1050 y(transformations)28 b(w)m(orks)i(when)e(w)m(e)i
(are)f(able)g(to)h(\\separate")h(in)m(tersecting)e(lines,)f(i.e.)40
b(making)29 b(them)g(parallel)-60 1158 y(without)j(c)m(hanging)h(to)s
(o)g(m)m(uc)m(h)g(the)g(structure)g(of)g(the)g(original)e(picture.)47
b(This)31 b(is)h(p)s(ossible)e(b)s(ecause)j(w)m(e)h(add)-60
1266 y(one)e(extra)g(\\line")f(to)h(the)g(usual)e(plane,)h(called)f
(the)i Fb(line)h(at)i(in\014nity)p Fl(.)44 b(F)-8 b(or)32
b(ev)m(ery)g(family)e(of)i(parallel)e(lines)f(in)-60
1374 y(the)35 b(usual)e(plane)g(there)i(is)f(a)h(\(di\013eren)m(t\))g
(p)s(oin)m(t)e(on)i(the)f(line)f(at)j(in\014nit)m(y)c
Fk(l)r Fl(.)53 b(Con)m(v)m(ersely)-8 b(,)36 b(an)m(y)f(p)s(oin)m(t)f
(on)g Fk(l)j Fl(is)-60 1482 y(\\b)s(orn")30 b(b)m(y)g(a)h(\(unique\))e
(family)g(of)h(parallel)f(lines.)40 1590 y(Note)42 b(that)f(it)f(is)g
(v)m(ery)h(hard)f(to)h(imagine)f(exactly)h(the)g(picture)f(of)g(this)g
(augmen)m(ted)h(plane,)i(called)d(the)-60 1698 y Fb(pr)-5
b(oje)g(ctive)39 b(plane)p Fl(.)58 b(This)34 b(is)g(b)s(ecause)i(w)m(e)
g(are)g(used)f(to)i(think)d(in)h(3)h(dimensions,)e(and)i(the)g(pro)5
b(jectiv)m(e)36 b(plane)-60 1806 y(is)j(simply)e(to)s(o)j(complex)f(to)
i(b)s(e)e(\\\014tted")h(in)f(3d{space.)69 b(Instead)40
b(of)f(trying)g(to)h(imagine)f(it,)j(think)c(of)i(the)-60
1914 y(pro)5 b(jectiv)m(e)43 b(plane)e(as)h(an)g Fb(abstr)-5
b(act)45 b(c)-5 b(onstruction)44 b Fl(with)d(some)h(useful)e
(applications.)74 b(When)42 b(y)m(ou)g(tak)m(e)i(an)-60
2022 y(in)m(tro)s(ductory)27 b(course)h(in)e(algebraic)h(geometry)-8
b(,)31 b(y)m(ou)d(will)d(see)j(v)-5 b(arious)27 b(descriptions)e(of)j
(the)g(pro)5 b(jectiv)m(e)29 b(plane.)-60 2130 y(These)h(will)e(hop)s
(efully)f(help)i(y)m(ou)i(construct)g(a)g(satisfactory)g(men)m(tal)f
(image)h(of)f(the)h(pro)5 b(jectiv)m(e)31 b(plane.)40
2310 y(But)25 b(for)g(no)m(w,)i(let)f(just)e(glimpse)g(at)i(the)g
(magic)g(p)s(erformed)e(b)m(y)h(a)h(w)m(ell{c)m(hosen)f(pro)5
b(jectiv)m(e)26 b(transformation.)-60 2418 y(In)36 b(the)h(setting)f
(of)h(Desargue's)h(theorem,)h(consider)c(p)s(oin)m(ts)g
Fk(L)i Fl(and)f Fk(N)10 b Fl(.)59 b(If)36 b(they)h(exist,)h(it)e(means)
h(that)g(the)-60 2526 y(pairs)c(of)i(corresp)s(onding)d(lines)h(in)m
(tersect,)j(i.e.)53 b Fk(AB)27 b Fc(\\)c Fk(A)1957 2540
y Fj(1)1997 2526 y Fk(B)2066 2540 y Fj(1)2137 2526 y
Fl(=)32 b Fk(L)i Fl(and)g Fk(B)5 b(C)29 b Fc(\\)22 b
Fk(B)2837 2540 y Fj(1)2877 2526 y Fk(C)2942 2540 y Fj(1)3013
2526 y Fl(=)32 b Fk(N)10 b Fl(.)53 b(The)34 b(idea)g(is)f(to)-60
2634 y(apply)i(a)i(pro)5 b(jectiv)m(e)37 b(transformation)e(to)i(the)g
(plane,)g(sending)e(p)s(oin)m(ts)g Fk(L)h Fl(and)g Fk(N)46
b Fl(to)37 b(the)g(line)d Fk(l)k Fl(at)f(in\014nit)m(y)-8
b(,)-60 2742 y(and)33 b(th)m(us,)i(in)d(e\013ect)j(making)e(line)g
Fk(AB)38 b Fl(parallel)32 b(to)i Fk(A)1886 2756 y Fj(1)1926
2742 y Fk(B)1995 2756 y Fj(1)2068 2742 y Fl(\(they)g(will)d(in)m
(tersect)k(at)f(a)g(p)s(oin)m(t)f(\\at)i(in\014nit)m(y"\),)-60
2850 y(and)30 b(similarly)d Fk(B)5 b(C)36 b Fl(parallel)29
b(to)i Fk(B)1168 2864 y Fj(1)1207 2850 y Fk(C)1272 2864
y Fj(1)1311 2850 y Fl(.)930 2942 y
 15156103 10609308 5328322 18155765 34995896 33943388 startTexFig
 930 2942 a
%%BeginDocument: ../WOKRSHOP1/BAMA12.ps
%!PS-Adobe-2.0
%%Title: BAMA12.ps
%%Creator: fig2dev Version 3.2 Patchlevel 0-beta3
%%CreationDate: Tue Sep 28 22:07:43 1999
%%For: stankova@asparuch.mills.edu (Zvezdelina Stankova-Frenekl)
%%Orientation: Portrait
%%BoundingBox: 81 276 532 516
%%Pages: 1
%%BeginSetup
%%IncludeFeature: *PageSize Letter
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-23.5 636.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 32 true [ 32 0 0 -32 0 32 ]
	{<010101010202020204040404080808081010101020202020
	404040408080808001010101020202020404040408080808
	101010102020202040404040808080800101010102020202
	040404040808080810101010202020204040404080808080
	010101010202020204040404080808081010101020202020
	4040404080808080>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 7000 m -1000 -1000 l 10237 -1000 l 10237 7000 l cp clip
 0.06000 0.06000 sc
%%Page: 1 1
7.500 slw
% Ellipse
n 1939 5065 56 56 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 8222 4053 56 56 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 4713 3267 56 56 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 7588 5566 56 56 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 5668 4487 56 56 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 3563 4015 56 56 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 5288 5395 56 56 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Polyline
n 1964 5072 m 9225 5775 l gs col0 s gr 
% Polyline
n 1922 5072 m 6600 2025 l gs col0 s gr 
% Polyline
n 1917 5043 m 9225 3900 l gs col0 s gr 
/Times-Italic ff 255.00 scf sf
3400 3913 m
gs 1 -1 sc (C) col0 sh gr
/Times-Italic ff 255.00 scf sf
1740 5019 m
gs 1 -1 sc (O) col0 sh gr
/Times-Italic ff 255.00 scf sf
5124 5681 m
gs 1 -1 sc (A) col0 sh gr
/Times-Italic ff 255.00 scf sf
5519 4384 m
gs 1 -1 sc (B) col0 sh gr
/Times-Italic ff 255.00 scf sf
7425 5925 m
gs 1 -1 sc (A) col0 sh gr
/Times-Italic ff 210.00 scf sf
7575 6000 m
gs 1 -1 sc (1) col0 sh gr
/Times-Italic ff 255.00 scf sf
4500 3075 m
gs 1 -1 sc (C) col0 sh gr
/Times-Italic ff 210.00 scf sf
4650 3150 m
gs 1 -1 sc (1) col0 sh gr
/Times-Italic ff 255.00 scf sf
8100 3900 m
gs 1 -1 sc (B) col0 sh gr
/Times-Italic ff 210.00 scf sf
8250 3975 m
gs 1 -1 sc (1) col0 sh gr
% Polyline
30.000 slw
n 3598 4014 m 5647 4492 l 5273 5410 l 3598 4014 l  cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 239.87 267.60] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 4772 3266 m 8186 4061 l 7563 5592 l 4772 3266 l  cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 318.13 217.73] PATmp PATsp ef gr PATusp gs col0 s gr 
$F2psEnd
rs
end
showpage

%%EndDocument

 endTexFig
 -60 4442 a Fl(It)k(is)g(no)m(w)g(not)g(hard)g(to)h(pro)m(v)m(e)g(that)
g Fk(AC)41 b Fl(and)35 b Fk(A)1710 4456 y Fj(1)1750 4442
y Fk(C)1815 4456 y Fj(1)1889 4442 y Fl(are)h(also)f(parallel:)49
b(use)35 b(similar)d(triangles)j Fc(4)p Fk(O)s(AB)i Fc(\030)-60
4550 y(4)p Fk(O)s(A)161 4564 y Fj(1)200 4550 y Fk(B)269
4564 y Fj(1)352 4550 y Fl(\(wh)m(y?\),)46 b(and)d Fc(4)p
Fk(O)s(B)5 b(C)52 b Fc(\030)46 b(4)p Fk(O)s(B)1571 4564
y Fj(1)1610 4550 y Fk(C)1675 4564 y Fj(1)1757 4550 y
Fl(\(wh)m(y?\),)h(to)d(conclude)e(that)i Fk(O)s(A=O)s(A)3149
4564 y Fj(1)3235 4550 y Fl(=)i Fk(O)s(B)5 b(=O)s(B)3684
4564 y Fj(1)3769 4550 y Fl(=)-60 4658 y Fk(O)s(C)t(=O)s(C)263
4672 y Fj(1)303 4658 y Fl(.)52 b(This)32 b(in)h(its)h(turn)f(implies)e
(that)k Fc(4)p Fk(O)s(C)7 b(A)31 b Fc(\030)g(4)p Fk(O)s(C)2195
4672 y Fj(1)2234 4658 y Fk(A)2302 4672 y Fj(1)2376 4658
y Fl(\(wh)m(y?\),)36 b(and)d(therefore)i Fk(AC)41 b Fl(is)33
b(parallel)-60 4766 y(to)e Fk(A)119 4780 y Fj(1)159 4766
y Fk(C)224 4780 y Fj(1)293 4766 y Fl(\(wh)m(y?\).)41
b(I)30 b(lea)m(v)m(e)i(the)f(justi\014cations)e(of)h(\\wh)m(y?"'s)h(to)
g(the)g(dedicated)f(reader.)40 4910 y(So)24 b(what?)38
b(The)23 b(fact)i(that)g Fk(AC)31 b Fl(and)23 b Fk(A)1384
4924 y Fj(1)1424 4910 y Fk(C)1489 4924 y Fj(1)1552 4910
y Fl(are)i(parallel)d(means)i(that)h(they)f(in)m(tersect)h(at)g(a)f(p)s
(oin)m(t)f(of)h(in\014nit)m(y)-8 b(,)-60 5018 y(namely)g(,)35
b Fk(M)10 b Fl(.)53 b(The)34 b(nice)g(thing)g(ab)s(out)g(the)h(pro)5
b(jectiv)m(e)35 b(plane)e(is)h(that)h(no)f(matter)h(what)g(p)s(oin)m(t)
e(of)i(view)f(y)m(ou)-60 5126 y(c)m(ho)s(ose)h(on)f(it,)i(the)e
(picture)f(y)m(ou)i(will)d(see)i(will)e(b)s(e)i(essen)m(tially)f(the)i
(same)f({)h(y)m(ou)g(will)c(see)k(the)g(usual)d(\(called)-60
5234 y(\\\014nite"\))c(plane,)g(and)f(whic)m(hev)m(er)g(line)f(y)m(ou)j
(w)m(on't)f(see,)h(that)g(y)m(ou)f(can)g(think)e(of)i(as)g(the)g
(\\line)f(at)i(in\014nit)m(y".)38 b(In)-60 5342 y(particular,)33
b(all)g(lines)e(are)k(\\created")g(equal,)f(regardless)f(of)h(whether)f
(they)h(are)g(usual)e(lines)g(or)i(the)g(\\line)e(at)-60
5450 y(in\014nit)m(y".)43 b(In)32 b(other)g(w)m(ords,)g(the)g(fact)h
(that)f(all)f(three)h(p)s(oin)m(ts)f Fk(L)p Fl(,)h Fk(M)42
b Fl(and)31 b Fk(N)42 b Fl(happ)s(en)30 b(to)j(lie)e(on)g(the)i(\\line)
d(at)-60 5558 y(in\014nit)m(y")f(mak)m(es)i(them)f Fb(c)-5
b(ol)5 b(line)-5 b(ar)p Fl(.)p eop
%%Page: 7 7
7 6 bop 3805 43 a Fj(7)40 241 y Fl(T)-8 b(o)21 b(\014nish)d(the)j(pro)s
(of,)i(one)e(has)g(to)g(apply)f(the)h(in)m(v)m(erse)g(of)g(whatev)m(er)
g(pro)5 b(jectiv)m(e)22 b(transformation)e(w)m(as)h(applied)-60
349 y(in)32 b(the)i(b)s(eginning)d(in)h(order)h(to)i(obtain)e(the)h
(original)d(picture)i(of)h(Desargues')g(setting.)51 b(In)33
b(the)h(pro)s(cess,)g(the)-60 457 y(\\line)e(at)i(in\014nit)m(y")e
Fk(LM)10 b(N)43 b Fl(will)31 b(b)s(e)i(sen)m(t)h(to)g(some)g(line)e(in)
g(the)i(usual)d(plane,)j(on)f(whic)m(h)g(our)f(original)g(p)s(oin)m(ts)
-60 565 y Fk(L)p Fl(,)e Fk(M)41 b Fl(and)30 b Fk(N)40
b Fl(m)m(ust)30 b(ha)m(v)m(e)i(b)s(een)d(lying)g(on.)p
3774 565 4 62 v 3778 507 55 4 v 3778 565 V 3832 565 4
62 v 494 875 a Fa(Third)34 b(Pr)n(oof)g(of)g(Desar)n(gue's)f(Theorem)g
(via)i(Exit)f(into)g(3d{sp)-6 b(a)n(ce)40 1037 y Fl(It)25
b(is)g(v)m(ery)h(coun)m(terin)m(tuitiv)m(e)f(to)i(attempt)f(to)h(solv)m
(e)f(a)g(\(plane\))f(2d{problem)g(b)m(y)h(a)g(3d{solution.)38
b(That)25 b(is,)h(to)-60 1145 y(co)s(ok)34 b(up)d(an)i(argumen)m(t)g
(in)f(3d{space)i(whic)m(h)d(someho)m(w)j(implies)c(our)i(2d{v)m
(ersion.)48 b(This)31 b(t)m(yp)s(e)i(of)h(reasoning)-60
1252 y(is)29 b(called)h Fb(Exit)i(into)i(3d.)40 1385
y Fl(In)f(the)h(setting)g(of)g(Desargues')h(theorem,)g(imagine)e(that)h
(ev)m(erything)g(originally)d(lines)h(in)h(some)h(plane)f
Fk(\015)5 b Fl(,)-60 1493 y(but)32 b(w)m(e)i(\\lift")e(the)h(ra)m(y)h
Fk(O)s(C)7 b(C)1011 1507 y Fj(1)1083 1493 y Fl(v)m(ertically)32
b(from)h(the)g(plane)f(in)g(3d{space,)i(k)m(eeping)f(all)f(lines,)g
(triangles)h(and)-60 1600 y(in)m(tersection)e(p)s(oin)m(ts)g(the)g
(same)h(as)g(b)s(efore.)44 b(The)31 b(goal)h(is)f(then)g(to)h(sho)m(w)g
(that)g(the)g(\\new")g(p)s(oin)m(ts)e Fk(L)p Fl(,)i Fk(M)42
b Fl(and)-60 1708 y Fk(N)e Fl(lie)29 b(on)g(a)i(line)d(in)h(3d{space;)i
(w)m(e)f(then)g(pro)5 b(ject)30 b(our)g(new)f(3d{picture)g(bac)m(k)i
(to)g(the)f(original)e(2d{picture)h(in)-60 1816 y(the)h(plane)e
Fk(\015)5 b Fl(,)30 b(and)f(necessarily)g(the)h(\\space")h(line)d
Fk(l)f Fl(=)e Fk(LM)10 b(N)39 b Fl(will)27 b(pro)5 b(ject)30
b(on)m(to)h(another)f(line)e Fk(l)3371 1830 y Fj(1)3440
1816 y Fl(in)g Fk(\015)5 b Fl(.)41 b(This)-60 1924 y(line)29
b Fk(\015)5 b Fl(,)30 b(w)m(e)h(conclude,)f(m)m(ust)g(ha)m(v)m(e)i(con)
m(tained)f(our)f(original)e(p)s(oin)m(ts)h Fk(L)p Fl(,)i
Fk(M)40 b Fl(and)30 b Fk(N)10 b Fl(,)30 b(so)h(w)m(e)g(will)d(b)s(e)h
(done.)40 2080 y(So,)h(what)g(are)h(w)m(e)g(w)m(aiting)f(for?)40
b(The)30 b(3d{picture)g(lo)s(oks)f(as)i(follo)m(ws:)390
2140 y
 23681433 15771843 328908 14077296 39995310 37956075 startTexFig
 390 2140 a
%%BeginDocument: ../WOKRSHOP1/BAMA13.ps
%!PS-Adobe-2.0
%%Title: BAMA13.ps
%%Creator: fig2dev Version 3.2 Patchlevel 0-beta3
%%CreationDate: Tue Sep 28 22:37:19 1999
%%For: stankova@asparuch.mills.edu (Zvezdelina Stankova-Frenekl)
%%Orientation: Portrait
%%BoundingBox: 5 214 608 577
%%Pages: 1
%%BeginSetup
%%IncludeFeature: *PageSize Letter
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-3.5 653.5 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 32 true [ 32 0 0 -32 0 32 ]
	{<010101010202020204040404080808081010101020202020
	404040408080808001010101020202020404040408080808
	101010102020202040404040808080800101010102020202
	040404040808080810101010202020204040404080808080
	010101010202020204040404080808081010101020202020
	4040404080808080>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 8302 m -1000 -1000 l 11172 -1000 l 11172 8302 l cp clip
 0.06000 0.06000 sc
%%Page: 1 1
7.500 slw
% Ellipse
n 5668 4487 56 56 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 5946 3861 56 56 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 6914 6810 56 56 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 1939 5065 56 56 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 3563 4015 56 56 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 7358 1570 56 56 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 6323 4375 56 56 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 5288 5395 56 56 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 7028 5530 22 20 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 7050 5550 56 56 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 6300 4350 56 56 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 6171 4621 56 56 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Polyline
 [60] 0 sd
n 3618 4014 m 6201 4623 l gs col0 s gr  [] 0 sd
% Polyline
n 1964 5072 m 7125 5550 l gs col0 s gr 
% Polyline
n 1922 5072 m 7200 4200 l gs col0 s gr 
% Polyline
n 1922 5072 m 7350 1575 l gs col0 s gr 
% Polyline
 [60] 0 sd
n 7363 1584 m 6201 4623 l gs col0 s gr  [] 0 sd
/Times-Italic ff 255.00 scf sf
5124 5681 m
gs 1 -1 sc (A) col0 sh gr
/Times-Italic ff 255.00 scf sf
3400 3913 m
gs 1 -1 sc (C) col0 sh gr
/Times-Italic ff 255.00 scf sf
5724 3881 m
gs 1 -1 sc (L) col0 sh gr
/Times-Italic ff 255.00 scf sf
5978 4915 m
gs 1 -1 sc (N) col0 sh gr
/Times-Italic ff 255.00 scf sf
6638 7045 m
gs 1 -1 sc (M) col0 sh gr
/Times-Italic ff 255.00 scf sf
7103 5826 m
gs 1 -1 sc (A) col0 sh gr
/Times-Italic ff 210.00 scf sf
7232 5920 m
gs 1 -1 sc (1) col0 sh gr
/Times-Italic ff 255.00 scf sf
1740 5019 m
gs 1 -1 sc (O) col0 sh gr
/Times-Italic ff 255.00 scf sf
7073 1447 m
gs 1 -1 sc (C) col0 sh gr
/Times-Italic ff 210.00 scf sf
7220 1555 m
gs 1 -1 sc (1) col0 sh gr
/Times-Italic ff 255.00 scf sf
5519 4384 m
gs 1 -1 sc (B) col0 sh gr
/Times-Italic ff 210.00 scf sf
6218 4345 m
gs 1 -1 sc (1) col0 sh gr
/Times-Italic ff 255.00 scf sf
6117 4278 m
gs 1 -1 sc (B) col0 sh gr
% Arc
gs n 2686.9 4980.0 286.7 38.9 -9.0 arcn
gs col0 s gr
 gr

% Arc
gs n 2489.4 4860.6 242.7 21.6 -60.2 arcn
gs col0 s gr
 gr

% Arc
gs n 2254.5 4936.5 221.1 53.8 -48.9 arcn
gs col0 s gr
 gr

% Polyline
30.000 slw
n 3598 4014 m 5647 4492 l 5273 5410 l 3598 4014 l  cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 239.87 267.60] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 7363 1584 m 7047 5572 l 6298 4382 l 7363 1584 l  cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 419.87 105.60] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
7.500 slw
n 2565 3615 m 150 5925 l 7740 5925 l gs col0 s gr 
% Polyline
n 5293 5396 m 5944 3803 l gs col0 s gr 
% Polyline
n 7047 5557 m 5923 3787 l gs col0 s gr 
% Polyline
n 7712 5942 m 10160 3620 l gs col0 s gr 
% Polyline
n 2565 3600 m 6600 3600 l gs col0 s gr 
% Polyline
n 7245 3615 m 10125 3615 l gs col0 s gr 
% Polyline
 [60] 0 sd
n 5670 3045 m 7080 7290 l gs col0 s gr  [] 0 sd
% Polyline
n 5256 5396 m 6968 6861 l gs col0 s gr 
% Polyline
n 7047 5557 m 6951 6826 l gs col0 s gr 
/Symbol ff 240.00 scf sf
2280 5055 m
gs 1 -1 sc (B) col0 sh gr
/Symbol ff 240.00 scf sf
2775 4770 m
gs 1 -1 sc (a) col0 sh gr
/Symbol ff 240.00 scf sf
3015 5115 m
gs 1 -1 sc (g) col0 sh gr
/Symbol ff 240.00 scf sf
555 5820 m
gs 1 -1 sc (g) col0 sh gr
$F2psEnd
rs
end
showpage

%%EndDocument

 endTexFig
 -60 4261 a Fl(Note)k(that)g(w)m(e)f(ha)m(v)m(e)h(created)g(the)f
(three)g(planes)f Fk(\015)j Fl(=)31 b(\()p Fk(O)s(AB)5
b Fl(\),)35 b Fk(\013)c Fl(=)g(\()p Fk(O)s(B)5 b(C)i
Fl(\),)35 b Fk(\014)h Fl(=)31 b(\()p Fk(O)s(C)7 b(A)p
Fl(\),)35 b(whic)m(h)d(can)j(b)s(e)-60 4369 y(though)m(t)i(of)f
(forming)f(part)h(of)h(the)f(p)m(yramid)f Fk(O)s(AB)5
b(C)42 b Fl(at)37 b(p)s(oin)m(t,)g(and)e(the)i(t)m(w)m(o)g(planes)e
(formed)h(b)m(y)g(the)h(t)m(w)m(o)-60 4477 y(new)30 b(triangles:)40
b(plane)29 b Fk(P)38 b Fl(=)25 b(\()p Fk(AB)5 b(C)i Fl(\))30
b(and)g(plane)g Fk(P)1758 4491 y Fj(1)1823 4477 y Fl(=)25
b(\()p Fk(A)2022 4491 y Fj(1)2062 4477 y Fk(B)2131 4491
y Fj(1)2170 4477 y Fk(C)2235 4491 y Fj(1)2274 4477 y
Fl(\).)40 4609 y(Then)i(p)s(oin)m(t)h Fk(L)g Fl(is)g(the)g(in)m
(tersection)h(of)f(lines)f Fk(AB)33 b Fl(and)28 b Fk(A)2052
4623 y Fj(1)2092 4609 y Fk(B)2161 4623 y Fj(1)2200 4609
y Fl(;)i(but)e(line)e Fk(AB)34 b Fl(is)27 b(the)i(in)m(tersection)f(of)
h(planes)-60 4717 y Fk(P)43 b Fl(and)30 b Fk(\015)5 b
Fl(,)31 b(while)d(line)h Fk(A)803 4731 y Fj(1)842 4717
y Fk(B)911 4731 y Fj(1)981 4717 y Fl(is)h(the)g(in)m(tersection)g(of)h
(planes)e Fk(P)2157 4731 y Fj(1)2227 4717 y Fl(and)h
Fk(\015)5 b Fl(.)41 b(In)29 b(short:)865 4873 y Fk(L)c
Fl(=)g Fk(AB)g Fc(\\)20 b Fk(A)1359 4887 y Fj(1)1398
4873 y Fk(B)1467 4887 y Fj(1)1532 4873 y Fl(=)25 b(\()p
Fk(P)34 b Fc(\\)19 b Fk(\015)5 b Fl(\))21 b Fc(\\)f Fl(\()p
Fk(P)2117 4887 y Fj(1)2177 4873 y Fc(\\)g Fk(\015)5 b
Fl(\))26 b(=)f Fk(P)33 b Fc(\\)20 b Fk(P)2697 4887 y
Fj(1)2757 4873 y Fc(\\)g Fk(\015)5 b(:)-60 5029 y Fl(The)30
b(serious)f(reader)h(will)e(also)i(v)m(erify)g(similarly)d(that)1114
5186 y Fk(M)35 b Fl(=)25 b Fk(P)33 b Fc(\\)20 b Fk(P)1563
5200 y Fj(1)1623 5186 y Fc(\\)g Fk(\014)5 b(;)46 b Fl(and)30
b Fk(N)35 b Fl(=)25 b Fk(P)33 b Fc(\\)20 b Fk(P)2442
5200 y Fj(1)2502 5186 y Fc(\\)g Fk(\013:)-60 5342 y Fl(But)37
b(planes)f Fk(P)51 b Fl(and)36 b Fk(P)762 5356 y Fj(1)839
5342 y Fl(in)m(tersect)i(in)e(some)h(line)f(\(wh)m(y?\),)j(whic)m(h)d
(w)m(e)i(call)e(on)h(purp)s(ose)f Fk(l)r Fl(.)61 b(Th)m(us,)38
b(w)m(e)g(ha)m(v)m(e)-60 5450 y(seen)e(ab)s(o)m(v)m(e)g(that)h(all)d
(three)i(p)s(oin)m(ts)e Fk(L)p Fl(,)j Fk(M)46 b Fl(and)35
b Fk(N)10 b Fl(,)37 b(lie)d(on)i(the)f(line)f Fk(l)i
Fl(=)e Fk(P)i Fc(\\)24 b Fk(P)2841 5464 y Fj(1)2880 5450
y Fl(,)37 b(i.e.)56 b(they)36 b(are)g(collinear.)-60
5558 y(Pro)5 b(jecting)30 b(line)f Fk(l)j Fl(on)m(to)g(the)e(original)f
(plane)g Fk(\015)36 b Fl(yields)28 b(the)j(w)m(an)m(ted)g(line.)p
3774 5558 4 62 v 3778 5500 55 4 v 3778 5558 V 3832 5558
4 62 v eop
%%Page: 8 8
8 7 bop -60 43 a Fj(8)923 241 y Fa(Pr)n(oof)34 b(of)g(P)-8
b(ascal)i('s)33 b(Theorem)g(via)i(Menela)n(us)40 403
y Fl(Create)41 b Fc(4)p Fk(P)13 b(QR)41 b Fl(b)m(y)g(in)m(tersecting)f
(the)h(follo)m(wing)e(lines:)60 b Fk(AB)32 b Fc(\\)27
b Fk(C)7 b(D)44 b Fl(=)f Fc(f)p Fk(R)q Fc(g)p Fl(,)h
Fk(C)7 b(D)29 b Fc(\\)e Fk(E)5 b(F)56 b Fl(=)42 b Fc(f)p
Fk(P)13 b Fc(g)42 b Fl(and)-60 511 y Fk(E)5 b(F)36 b
Fc(\\)21 b Fk(AB)35 b Fl(=)30 b Fc(f)p Fk(Q)p Fc(g)p
Fl(.)51 b(Then)32 b(apply)g(Menelaus')i(Theorem)f(3)g(times)g(to)i
Fc(4)p Fk(P)13 b(QR)33 b Fl(and)g(lines)f Fk(X)7 b(AF)13
b Fl(,)35 b Fk(C)7 b(B)e(Z)39 b Fl(and)-60 619 y Fk(D)s(Y)20
b(E)5 b Fl(,)31 b(resp)s(ectiv)m(ely:)p 1446 690 154
4 v 1446 763 a Fk(P)13 b(X)p 1446 803 V 1447 821 153
4 v 1447 894 a(R)q(X)1629 824 y Fc(\001)p 1686 690 138
4 v 1686 763 a Fk(R)q(A)p 1685 803 141 4 v 1685 821 V
1685 894 a(QA)1855 824 y Fc(\001)p 1910 690 143 4 v 1910
763 a Fk(QF)p 1910 803 V 1910 821 V 1910 894 a(P)g(F)2146
824 y Fl(=)83 b(1)p 1454 955 V 1454 1028 a Fk(P)13 b(C)p
1454 1068 V 1455 1086 142 4 v 1455 1159 a(R)q(C)1627
1089 y Fc(\001)p 1683 955 144 4 v 1683 1028 a Fk(R)q(B)p
1682 1068 146 4 v 1682 1086 V 1682 1159 a(QB)1858 1089
y Fc(\001)p 1913 955 141 4 v 1913 1028 a Fk(QZ)p 1913
1068 V 1913 1086 140 4 v 1913 1159 a(P)g(Z)2146 1089
y Fl(=)83 b(1)p 1444 1220 149 4 v 1444 1293 a Fk(P)13
b(D)p 1444 1333 V 1445 1351 148 4 v 1445 1425 a(R)q(D)1623
1354 y Fc(\001)p 1680 1220 143 4 v 1680 1293 a Fk(R)q(Y)p
1679 1333 145 4 v 1679 1351 V 1679 1425 a(QY)1854 1354
y Fc(\001)p 1909 1220 V 1909 1293 a Fk(QE)p 1909 1333
V 1909 1351 144 4 v 1909 1425 a(P)g(E)2146 1354 y Fl(=)83
b(1)-60 1551 y(No)m(w)36 b(w)m(e)g(m)m(ultiply)c(the)j(three)h
(equalities)e(and)g(cancel)i(out)f(ev)m(erything)g(w)m(e)h(can.)55
b(In)35 b(particular,)g(note)g(that)-60 1659 y Fk(R)q(A)10
b Fc(\001)g Fk(R)q(B)30 b Fl(=)25 b Fk(R)q(C)17 b Fc(\001)10
b Fk(R)q(D)s Fl(,)26 b Fk(QF)d Fc(\001)10 b Fk(QE)31
b Fl(=)25 b Fk(QA)10 b Fc(\001)g Fk(QB)31 b Fl(and)25
b Fk(P)13 b(C)k Fc(\001)10 b Fk(P)j(D)28 b Fl(=)d Fk(P)13
b(F)23 b Fc(\001)10 b Fk(P)j(E)5 b Fl(,)28 b(b)m(y)d(the)h
Fb(Power)i(of)h(Point)f(The)-5 b(or)g(em)-60 1767 y Fl(applied)28
b(consecutiv)m(ely)j(to)g(p)s(oin)m(ts)e Fk(R)q Fl(,)h
Fk(Q)h Fl(and)e Fk(P)13 b Fl(,)31 b(and)f(circle)f Fk(k)s
Fl(.)41 b(Th)m(us,)30 b(w)m(e)g(are)h(left)f(with)p 1489
1838 154 4 v 1489 1911 a Fk(P)13 b(X)p 1489 1952 V 1490
1970 153 4 v 1490 2043 a(R)q(X)1673 1973 y Fc(\001)p
1729 1838 143 4 v 1729 1911 a Fk(R)q(Y)p 1728 1952 145
4 v 1728 1970 V 1728 2043 a(QY)1903 1973 y Fc(\001)p
1959 1838 141 4 v 1959 1911 a Fk(QZ)p 1959 1952 V 1959
1970 140 4 v 1959 2043 a(P)g(Z)2134 1973 y Fl(=)25 b(1)p
Fk(;)-60 2175 y Fl(whic)m(h)34 b(again)h(b)m(y)g(Menelaus)g(\(the)h
(rev)m(erse)g(direction)e(of)i(the)f(theorem\))h(implies)c(that)k(p)s
(oin)m(ts)e Fk(X)7 b Fl(,)38 b Fk(Y)55 b Fl(and)34 b
Fk(Z)-60 2283 y Fl(are)d(collinear.)p 3774 2283 4 62
v 3778 2225 55 4 v 3778 2283 V 3832 2283 4 62 v 769 2466
a Fa(Pr)n(oof)i(of)h(Brianchon's)f(Theorem)g(via)i(Exit)f(into)g(3d)-42
2547 y
 30785863 16577003 3486433 16248094 36772003 35785277 startTexFig
 -42 2547 a
%%BeginDocument: ../WOKRSHOP1/BAMA15.ps
%!PS-Adobe-2.0
%%Title: BAMA15.ps
%%Creator: fig2dev Version 3.2 Patchlevel 0-beta3
%%CreationDate: Wed Sep 29 15:55:16 1999
%%For: stankova@asparuch.mills.edu (Zvezdelina Stankova-Frenekl)
%%Orientation: Portrait
%%BoundingBox: 53 247 559 544
%%Pages: 1
%%BeginSetup
%%IncludeFeature: *PageSize Letter
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
1.0 616.5 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 7150 m -1000 -1000 l 10297 -1000 l 10297 7150 l cp clip
 0.06000 0.06000 sc
%%Page: 1 1
% Arc
7.500 slw
gs n 4823.0 2576.4 177.9 -97.4 136.0 arcn
gs col0 s gr
 gr

% Arc
gs n 5417.5 2820.4 148.2 -37.6 53.8 arc
gs col0 s gr
 gr

% Arc
gs n 3385.9 2775.0 132.4 -115.0 34.5 arc
gs col0 s gr
 gr

% Arc
gs n 3841.4 4301.3 244.9 -143.3 149.7 arcn
gs col0 s gr
 gr

% Arc
gs n 3982.5 4117.5 172.7 -34.4 34.4 arc
gs col0 s gr
 gr

% Arc
gs n 6021.2 4215.0 139.8 -105.0 154.6 arcn
gs col0 s gr
 gr

% Arc
gs n 6401.2 4301.2 128.3 -52.1 74.7 arc
gs col0 s gr
 gr

% Arc
gs n 7185.0 4008.3 77.7 -125.4 67.3 arcn
gs col0 s gr
 gr

% Arc
gs n 7418.1 3446.0 67.0 -142.3 3.5 arc
gs col0 s gr
 gr

% Arc
gs n 6976.6 3088.1 180.6 -55.1 25.2 arc
gs col0 s gr
 gr

% Arc
gs n 6835.6 3050.1 194.7 -145.6 116.1 arcn
gs col0 s gr
 gr

% Arc
gs n 3044.8 3341.9 108.1 -165.6 89.9 arcn
gs col0 s gr
 gr

% Ellipse
n 5115 3523 2220 797 0 360 DrawEllipse gs col0 s gr

% Polyline
n 2385 2160 m 885 4860 l 7785 4860 l 9285 2160 l 2385 2160 l  cp gs col0 s gr 
% Polyline
n 7515 3405 m 7035 4095 l 4980 4425 l 2280 3825 l 3705 2715 l 6285 2715 l gs col0 s gr 
% Polyline
n 6300 2715 m 7530 3390 l gs col0 s gr 
% Polyline
n 5010 3135 m 7065 5025 l gs col0 s gr 
% Polyline
n 7065 4995 m 7545 2430 l 7545 2430 l gs col0 s gr 
% Polyline
30.000 slw
n 7545 2430 m 6300 3705 l gs col0 s gr 
% Polyline
n 6285 3690 m 3720 1440 l gs col0 s gr 
% Polyline
n 3720 1440 m 2280 5805 l gs col0 s gr 
% Polyline
n 2295 5790 m 4995 3150 l gs col0 s gr 
% Polyline
n 4995 3150 m 7050 5010 l gs col0 s gr 
% Polyline
n 7050 5040 m 7530 2445 l gs col0 s gr 
% Polyline
7.500 slw
 [60] 0 sd
n 7050 4110 m 7050 5010 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 3720 1425 m 2280 5820 l 2280 3825 l 2265 3795 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 6285 3720 m 3720 1410 l 3720 2715 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 7545 3375 m 7545 2445 l 6285 3720 l 6285 2685 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2295 5790 m 5010 3135 l 5010 4440 l gs col0 s gr  [] 0 sd
/Times-Italic ff 300.00 scf sf
7680 3390 m
gs 1 -1 sc (A) col0 sh gr
/Times-Italic ff 300.00 scf sf
6210 2595 m
gs 1 -1 sc (B) col0 sh gr
/Times-Italic ff 300.00 scf sf
3810 2625 m
gs 1 -1 sc (C) col0 sh gr
/Times-Italic ff 300.00 scf sf
2010 3780 m
gs 1 -1 sc (D) col0 sh gr
/Times-Italic ff 300.00 scf sf
4875 4755 m
gs 1 -1 sc (E) col0 sh gr
/Times-Italic ff 300.00 scf sf
6825 4425 m
gs 1 -1 sc (F) col0 sh gr
/Times-Italic ff 300.00 scf sf
7680 2415 m
gs 1 -1 sc (A) col0 sh gr
/Times-Italic ff 300.00 scf sf
6195 4020 m
gs 1 -1 sc (B) col0 sh gr
/Times-Italic ff 300.00 scf sf
3825 1425 m
gs 1 -1 sc (C) col0 sh gr
/Times-Italic ff 300.00 scf sf
1980 6060 m
gs 1 -1 sc (D) col0 sh gr
/Times-Italic ff 300.00 scf sf
4875 3075 m
gs 1 -1 sc (E) col0 sh gr
/Times-Italic ff 300.00 scf sf
6870 5385 m
gs 1 -1 sc (F) col0 sh gr
/Times-Italic ff 210.00 scf sf
7875 2520 m
gs 1 -1 sc (1) col0 sh gr
/Times-Italic ff 210.00 scf sf
4035 1530 m
gs 1 -1 sc (1) col0 sh gr
/Times-Italic ff 210.00 scf sf
6375 4080 m
gs 1 -1 sc (1) col0 sh gr
/Times-Italic ff 210.00 scf sf
2190 6150 m
gs 1 -1 sc (1) col0 sh gr
/Times-Italic ff 210.00 scf sf
5070 3165 m
gs 1 -1 sc (1) col0 sh gr
/Times-Italic ff 210.00 scf sf
7005 5520 m
gs 1 -1 sc (1) col0 sh gr
$F2psEnd
rs
showpage

%%EndDocument

 endTexFig
 40 4891 a Fc(\017)i Fl(Create)i(a)e(spacial)g(hexagon)h
Fk(A)1237 4905 y Fj(1)1277 4891 y Fk(B)1346 4905 y Fj(1)1385
4891 y Fk(C)1450 4905 y Fj(1)1490 4891 y Fk(D)1565 4905
y Fj(1)1604 4891 y Fk(E)1671 4905 y Fj(1)1711 4891 y
Fk(F)1769 4905 y Fj(1)1845 4891 y Fl(whic)m(h)e(pro)5
b(jects)37 b(on)m(to)h(the)e(giv)m(en)h(planar)e(hexagon,)k(as)-60
4999 y(sho)m(wn)33 b(in)f(the)i(picture.)48 b(\(Wh)m(y)34
b(do)s(es)g(suc)m(h)f(a)h(hexagon)g(exist?)49 b(Start)34
b(with)e(p)s(oin)m(t)g Fk(A)2984 5013 y Fj(1)3057 4999
y Fl(in)g(space,)j(pro)5 b(jecting)-60 5107 y(on)m(to)32
b Fk(A)p Fl(,)e(and)g(then)g(construct)h(the)g(remaining)d(5)j(p)s(oin)
m(ts)f(one)g(b)m(y)h(one;)g(use)f(six)f(pairs)g(of)i(similar)d
(triangles)h(to)-60 5215 y(pro)m(v)m(e)i(that)g(y)m(ou)g(will)d(ev)m
(en)m(tually)i(come)h(bac)m(k)g(to)h Fk(A)1784 5229 y
Fj(1)1853 5215 y Fl(in)d(y)m(our)i(construction.\))40
5342 y Fc(\017)26 b Fl(Note)i(that)f(to)g(pro)m(v)m(e)h(that)f
(diagonals)e Fk(AD)s Fl(,)i Fk(B)5 b(E)32 b Fl(and)25
b Fk(C)7 b(F)39 b Fl(meet)28 b(in)d(a)h(p)s(oin)m(t,)h(it)f(will)e
(su\016ce)i(to)h(sho)m(w)f(that)-60 5450 y Fk(A)8 5464
y Fj(1)48 5450 y Fk(D)123 5464 y Fj(1)162 5450 y Fl(,)k
Fk(B)286 5464 y Fj(1)326 5450 y Fk(E)393 5464 y Fj(1)462
5450 y Fl(and)f Fk(C)703 5464 y Fj(1)742 5450 y Fk(F)800
5464 y Fj(1)870 5450 y Fl(meet)h(in)f(a)h(p)s(oin)m(t)f
Fk(X)1584 5464 y Fj(1)1653 5450 y Fl(\(in)g(space\))h({)g(pro)5
b(jecting)30 b Fk(X)2653 5464 y Fj(1)2722 5450 y Fl(on)m(to)h(the)f
(plane)f(will)e(yield)h(the)-60 5558 y(required)h(in)m(tersection)h(p)s
(oin)m(t)f(of)i(the)f(original)f(diagonals.)p eop
%%Page: 9 9
9 8 bop 3805 43 a Fj(9)40 241 y Fc(\017)22 b Fl(T)-8
b(o)22 b(sho)m(w)g(that)h Fk(A)706 255 y Fj(1)746 241
y Fk(D)821 255 y Fj(1)860 241 y Fl(,)h Fk(B)978 255 y
Fj(1)1017 241 y Fk(E)1084 255 y Fj(1)1146 241 y Fl(and)d
Fk(C)1379 255 y Fj(1)1419 241 y Fk(F)1477 255 y Fj(1)1539
241 y Fl(in)m(tersect)h(in)f(space,)j(it)e(su\016ces)g(to)g(sho)m(w)g
(that)h(ev)m(ery)f(t)m(w)m(o)i(of)e(them)-60 349 y(in)m(tersect)29
b(in)e(space.)40 b(Indeed,)28 b(if)f Fk(X)7 b Fl(,)30
b Fk(Y)48 b Fl(and)27 b Fk(Z)35 b Fl(are)29 b(the)f(pairwise)e(in)m
(tersection)i(of)g(the)h(three)f(segmen)m(ts,)i(AND)-60
457 y(w)m(e)d(supp)s(ose)e(b)m(y)i(con)m(tradiction)g(that)g
Fk(X)7 b Fl(,)28 b Fk(Y)47 b Fl(and)26 b Fk(Z)33 b Fl(are)27
b(distinct,)f(this)g(implies)e(that)j Fk(A)3016 471 y
Fj(1)3056 457 y Fk(D)3131 471 y Fj(1)3170 457 y Fl(,)h
Fk(B)3292 471 y Fj(1)3331 457 y Fk(E)3398 471 y Fj(1)3465
457 y Fl(and)e Fk(C)3703 471 y Fj(1)3742 457 y Fk(F)3800
471 y Fj(1)-60 565 y Fl(all)j(lie)f(in)h(a)h(plane)f(\(together)j(with)
c Fk(X)7 b Fl(,)31 b Fk(Y)50 b Fl(and)29 b Fk(Z)7 b Fl(\).)40
b(No)m(w)31 b(that's)f(a)h(con)m(tradiction)e(since)h
Fk(A)3178 579 y Fj(1)3217 565 y Fk(B)3286 579 y Fj(1)3326
565 y Fk(C)3391 579 y Fj(1)3430 565 y Fk(D)3505 579 y
Fj(1)3545 565 y Fk(E)3612 579 y Fj(1)3651 565 y Fk(F)3709
579 y Fj(1)3779 565 y Fl(is)-60 672 y(not)h(planar,)e(but)h(spacial)f
(b)m(y)h(construction.)40 799 y Fc(\017)i Fl(T)-8 b(o)33
b(sho)m(w)f(that,)h(sa)m(y)-8 b(,)34 b Fk(A)949 813 y
Fj(1)988 799 y Fk(D)1063 813 y Fj(1)1135 799 y Fl(and)e
Fk(B)1383 813 y Fj(1)1422 799 y Fk(E)1489 813 y Fj(1)1560
799 y Fl(in)m(tersect)h(in)e(space,)i(it)f(is)f(su\016cien)m(t)g(to)i
(sho)m(w)f(that)h(lines)d Fk(A)3692 813 y Fj(1)3732 799
y Fk(B)3801 813 y Fj(1)-60 907 y Fl(and)g Fk(D)192 921
y Fj(1)231 907 y Fk(E)298 921 y Fj(1)368 907 y Fl(lie)g(in)f(a)h(plane)
g(\(wh)m(y?\),)h(or)f(equiv)-5 b(alen)m(tly)d(,)30 b(to)h(sho)m(w)f
(that)h Fk(A)2480 921 y Fj(1)2520 907 y Fk(B)2589 921
y Fj(1)2658 907 y Fl(and)f Fk(D)2910 921 y Fj(1)2950
907 y Fk(E)3017 921 y Fj(1)3087 907 y Fl(in)m(tersect.)40
1034 y Fc(\017)36 b Fl(Sho)m(w)g(that)g(all)f(of)i(the)f(12)h(mark)m
(ed)f(angles)g(are)g(equal.)58 b(\(Use)37 b(again)f(the)g(12)h
(triangles)e(as)i(ab)s(o)m(v)m(e,)i(and)-60 1142 y(\\equal)30
b(tangen)m(ts")h(from)e(a)h(p)s(oin)m(t)f(to)h(a)g(circle.\))40
b(This)28 b(means)i(that)g(all)f(six)f(lines)g(formed)h(b)m(y)h(the)f
(sides)g(of)h(the)-60 1250 y(spacial)f(hexagon)j Fk(A)663
1264 y Fj(1)702 1250 y Fk(B)771 1264 y Fj(1)811 1250
y Fk(C)876 1264 y Fj(1)915 1250 y Fk(D)990 1264 y Fj(1)1030
1250 y Fk(E)1097 1264 y Fj(1)1136 1250 y Fk(F)1194 1264
y Fj(1)1264 1250 y Fl(form)e(the)h(same)g(angle)f(with)f(the)i
(original)d(plane.)40 1377 y Fc(\017)33 b Fl(Sho)m(w)f(that,)i(sa)m(y)
-8 b(,)34 b(lines)d Fk(A)1040 1391 y Fj(1)1080 1377 y
Fk(B)1149 1391 y Fj(1)1221 1377 y Fl(and)h Fk(D)1475
1391 y Fj(1)1514 1377 y Fk(E)1581 1391 y Fj(1)1653 1377
y Fl(in)m(tersect)i(b)m(y)e(using)f(t)m(w)m(o)j(facts:)46
b(they)33 b(form)f(the)h(same)g(angle)-60 1485 y(with)k(the)h(original)
e(plane,)k(and)d(equal)h(tangen)m(t)h(are)g(obtained)e(after)i
(extending)e Fk(D)s(E)43 b Fl(and)38 b Fk(AB)k Fl(un)m(til)37
b(they)-60 1593 y(meet.)42 b(\()p Fk(A)301 1607 y Fj(1)341
1593 y Fk(B)410 1607 y Fj(1)479 1593 y Fl(and)30 b Fk(D)731
1607 y Fj(1)771 1593 y Fk(E)838 1607 y Fj(1)908 1593
y Fl(will)d(b)s(e)j(parallel)e(if)i Fk(D)s(E)35 b Fl(and)30
b Fk(AB)35 b Fl(are)c(parallel.\))40 1719 y Fc(\017)k
Fl(Put)f(together)i(all)e(pieces)g(ab)s(o)m(v)m(e)i(to)g(conclude)e
(that)h(the)g(diagonals)f(of)h(the)g(spacial)f(hexagon)h(are)g(con-)-60
1827 y(curren)m(t,)30 b(and)g(hence)h(the)f(diagonals)g(of)g(the)h
(original)d(planar)h(hexagon)j(are)e(also)h(concurren)m(t.)p
3774 1827 4 62 v 3778 1769 55 4 v 3778 1827 V 3832 1827
4 62 v 1625 3303 a Fa(References)40 3465 y Fl(1.)42 b
Fb(\\Insights)35 b(to)h(Ge)-5 b(ometric)36 b(Puzzles)f(and)h
(Constructions")p Fl(,)g(Zv)m(ezdelina)c(Stank)m(o)m(v)-5
b(a-F)d(renk)m(el,)36 b(W)-8 b(orkshop)152 3573 y(on)30
b(Math)h(Circles,)e(La)m(wrence)i(Hall)f(of)g(Science,)g(June)g(1998.)
40 3681 y(2.)42 b Fb(\\Classic)-5 b(al)27 b(The)-5 b(or)g(ems)28
b(in)e(Plane)h(Ge)-5 b(ometry")p Fl(,)26 b(Zv)m(ezdelina)c(Stank)m(o)m
(v)-5 b(a-F)d(renk)m(el,)27 b(Berk)m(eley)d(Math)g(Circle,)152
3789 y(Septem)m(b)s(er)30 b(1999.)40 3897 y(3.)42 b Fb(\\Inversion)c
(in)g(the)h(Plane.)58 b(Part)38 b(I)g(and)h(Part)g(II")p
Fl(,)d(Zv)m(ezdelina)f(Stank)m(o)m(v)-5 b(a-F)d(renk)m(el,)40
b(Berk)m(eley)d(Math)152 4005 y(Circle,)29 b(Septem)m(b)s(er/Octob)s
(er)h(1998.)40 4113 y(4.)42 b Fb(\\Intr)-5 b(o)g(duction)46
b(to)e(A)n(lgebr)-5 b(aic)44 b(Ge)-5 b(ometry.)77 b(Pr)-5
b(oje)g(ctive)44 b(Ge)-5 b(ometry")p Fl(,)47 b(Zv)m(ezdelina)41
b(Stank)m(o)m(v)-5 b(a-F)d(renk)m(el,)152 4221 y(lecture)30
b(notes,)h(Mathematical)g(Olympiad)d(Summer)h(Program,)i(Lincoln,)e
(Nebrask)-5 b(a,)31 b(1999.)40 4329 y(5.)42 b Fb(\\Mathematic)-5
b(al)33 b(Cir)-5 b(cles)31 b(\(R)n(ussian)h(Exp)-5 b(erienc)g(e\)")p
Fl(,)29 b(F)-8 b(omin,)29 b(Genkin)f(and)g(Iten)m(b)s(erg,)h(American)f
(Math-)152 4436 y(ematical)i(So)s(ciet)m(y)-8 b(,)32
b(1996.)40 4544 y(6.)42 b Fb(\\Kvant)33 b(Sele)-5 b(cta:)42
b(A)n(lgebr)-5 b(a)33 b(and)g(A)n(nalysis,)g(I)g(and)g(II")p
Fl(,)e(American)f(Mathematical)h(So)s(ciet)m(y)-8 b(,)31
b(1999.)40 4652 y(7.)42 b Fb(\\Math)d(Olympiad)i(Contest)f(Pr)-5
b(oblems)40 b(for)f(Elementary)h(and)g(Midd)5 b(le)39
b(Scho)-5 b(ols")p Fl(,)41 b(George)e(Lenc)m(hner,)152
4760 y(Glen)m(w)m(o)s(o)s(d)30 b(Publications.)40 4868
y(8.)42 b Fb(\\Euclide)-5 b(an)33 b(and)g(Non-Euclide)-5
b(an)33 b(Ge)-5 b(ometries")p Fl(,)31 b(Marvin)e(Green)m(b)s(erg,)i
(W.H.)g(F)-8 b(reeman)31 b(and)f(Compa-)152 4976 y(n)m(y)-8
b(,)31 b(1997.)40 5084 y(9.)42 b Fb(\\Comp)-5 b(anion)35
b(to)e(Euclid")p Fl(,)d(Robin)f(Hartshorne,)i(American)e(Mathematical)j
(So)s(ciet)m(y)-8 b(.)40 5286 y(T)g(o)30 b(view)g(items)g(1{3,)i(see)f
(the)f(Berk)m(eley)i(Math)f(Circle)d(w)m(ebpage)k(at)1044
5413 y(h)m(ttp://www.math.b)s(erk)m(eley)-8 b(.edu/)31
b(stank)m(o)m(v)-5 b(a/)40 5540 y(T)d(o)30 b(buy)g(items)g(5{6)h(at)g
(discoun)m(t)f(prices,)g(con)m(tact)i(T)-8 b(om)31 b(Rik)m(e)f(at)h
(trik)m(e@ousd.k12.ca.us)p eop
%%Page: 10 10
10 9 bop -60 43 a Fj(10)214 275 y Fp(BA)-13 b(Y)51 b(AREA)i(MA)-13
b(THEMA)g(TICAL)54 b(AD)l(VENTURE)325 439 y Fo(GEOMETRIC)45
b(PUZZLES)g(AND)g(CONSTR)l(UCTIONS.)403 666 y Fn(by)h(Zvezdelina)g(St)
-8 b(ank)m(o)m(v)d(a-Frenkel,)48 b(Mills)e(College)p
-60 715 3900 4 v 998 911 a Fo(Solutions)f(to)h(Problems)f(1)g(and)g(2)
-60 1132 y Fm(Problem)35 b(1.)46 b(\(F)-9 b(or)35 b(ev)m(ery)m(one)h
(to)e(Pla)m(y)i(With\))30 b Fl(Three)f(congruen)m(t)i(squares)f(with)f
(bases)i Fk(AM)5 b(;)15 b(M)10 b(H)38 b Fl(and)-60 1240
y Fk(H)7 b(B)e Fl(,)30 b(are)h(put)e(next)i(to)g(eac)m(h)h(other)e(to)h
(form)f(a)h(rectangle)g Fk(AB)5 b(C)i(D)32 b Fl(\(see)g(Fig.1\).)42
b(Sho)m(w)29 b(that)1196 1394 y Fi(\\)p Fk(AM)10 b(D)23
b Fl(+)d Fi(\\)p Fk(AH)7 b(D)22 b Fl(+)e Fi(\\)p Fk(AB)5
b(D)28 b Fl(=)d(90)2519 1356 y Fh(\016)2559 1394 y Fk(:)-60
1637 y Fm(Solution:)57 b Fl(Re\015ect)40 b(the)f(\014gure)f(across)h
(line)e Fk(D)s(C)7 b Fl(,)40 b(i.e.)66 b(dra)m(w)38 b(three)h(more)f
(squares)h(as)g(sho)m(wn)f(on)g(Fig.)66 b(2)-60 1745
y(b)s(elo)m(w.)83 b(Connect)45 b(the)g(new)g(p)s(oin)m(t)e
Fk(H)1349 1759 y Fj(1)1433 1745 y Fl(with)h(p)s(oin)m(ts)f
Fk(D)48 b Fl(and)c Fk(B)5 b Fl(.)84 b(Note)46 b(that)f
Fc(4)p Fk(AH)7 b(D)s Fl(,)49 b Fc(4)p Fk(A)3417 1759
y Fj(1)3456 1745 y Fk(H)3532 1759 y Fj(1)3571 1745 y
Fk(D)f Fl(and)-60 1853 y Fc(4)p Fk(B)90 1867 y Fj(1)129
1853 y Fk(B)5 b(H)279 1867 y Fj(1)345 1853 y Fl(are)28
b(congruen)m(t)g(to)g(eac)m(h)g(other.)40 b(\(Wh)m(y?)g(They)27
b(are)h(all)e(righ)m(t)h(angles)g(with)f(legs)i(of)f(same)h(lengths.\))
-60 1961 y(This)42 b(allo)m(ws)h(us)f(to)j(call)e(three)g(angles)h(on)f
(the)h(picture)e(b)m(y)i Fk(\013)p Fl(,)j(and)c(three)h(other)g(b)m(y)f
Fk(\014)5 b Fl(.)81 b(In)42 b(particular,)-60 2069 y
Fi(\\)p Fk(AH)7 b(D)28 b Fl(=)d Fk(\013)h Fl(=)e Fi(\\)p
Fk(B)670 2083 y Fj(1)710 2069 y Fk(B)5 b(H)860 2083 y
Fj(1)898 2069 y Fl(.)570 2238 y
 20839632 10893473 789381 15919185 39403274 36179968 startTexFig
 570 2238 a
%%BeginDocument: ../WOKRSHOP1/BAMA3.ps
%!PS-Adobe-2.0
%%Title: BAMA3.ps
%%Creator: fig2dev Version 3.2 Patchlevel 0-beta3
%%CreationDate: Tue Sep 28 14:39:31 1999
%%For: stankova@asparuch.mills.edu (Zvezdelina Stankova-Frenekl)
%%Orientation: Portrait
%%BoundingBox: 12 242 599 550
%%Pages: 1
%%BeginSetup
%%IncludeFeature: *PageSize Letter
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
1.5 611.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 32 true [ 32 0 0 -32 0 32 ]
	{<010101010202020204040404080808081010101020202020
	404040408080808001010101020202020404040408080808
	101010102020202040404040808080800101010102020202
	040404040808080810101010202020204040404080808080
	010101010202020204040404080808081010101020202020
	4040404080808080>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 7150 m -1000 -1000 l 10960 -1000 l 10960 7150 l cp clip
 0.06000 0.06000 sc
%%Page: 1 1
% Arc
7.500 slw
gs n 8445.0 4905.0 167.7 -116.6 153.4 arcn
gs col-1 s gr
 gr

% Arc
gs n 9735.0 4920.0 167.7 -116.6 153.4 arcn
gs col-1 s gr
 gr

% Arc
gs n 7410.0 4905.0 167.7 -63.4 26.6 arc
gs col-1 s gr
 gr

% Arc
gs n 7410.0 4905.0 167.7 -63.4 26.6 arc
gs col-1 s gr
 gr

% Arc
gs n 6360.0 4905.0 167.7 -63.4 26.6 arc
gs col-1 s gr
 gr

% Arc
gs n 7093.5 3049.5 167.6 -43.5 46.5 arc
gs col-1 s gr
 gr

% Arc
gs n 5878.5 3364.5 167.6 -43.5 46.5 arc
gs col-1 s gr
 gr

% Arc
gs n 8236.5 2809.5 167.6 -136.5 133.5 arcn
gs col-1 s gr
 gr

% Arc
gs n 9721.5 2359.5 167.6 -136.5 133.5 arcn
gs col-1 s gr
 gr

% Arc
gs n 2469.0 2409.0 167.7 116.6 -153.4 arc
gs col-1 s gr
 gr

% Arc
gs n 2970.0 2445.0 167.7 63.4 -26.6 arcn
gs col0 s gr
 gr

% Arc
gs n 4020.0 4305.0 167.7 -153.4 -63.4 arc
gs col0 s gr
 gr

% Arc
gs  [60] 0 sd
n 3990.0 4525.0 168.0 -106.6 163.4 arcn
gs col0 s gr
 gr
 [] 0 sd
% Arc
gs  [60] 0 sd
n 1530.0 4560.0 167.7 -116.6 153.4 arcn
gs col0 s gr
 gr
 [] 0 sd
% Arc
gs  [60] 0 sd
n 778.5 3454.5 167.6 -43.5 46.5 arc
gs col0 s gr
 gr
 [] 0 sd
% Arc
gs n 530.2 3375.9 166.2 4.2 -86.6 arcn
gs col0 s gr
 gr

% Arc
gs n 530.2 3599.1 166.2 -4.2 86.6 arc
gs col0 s gr
 gr

% Arc
gs n 3450.0 4575.0 167.7 -116.6 153.4 arcn
gs col-1 s gr
 gr

% Arc
gs n 2475.0 4560.0 167.7 -116.6 153.4 arcn
gs col-1 s gr
 gr

 [60] 0 sd
% Ellipse
n 489 2319 54 54 0 360 DrawEllipse gs 0.00 setgray ef gr gs col-1 s gr
 [] 0 sd
 [60] 0 sd
% Ellipse
n 4089 2319 54 54 0 360 DrawEllipse gs 0.00 setgray ef gr gs col-1 s gr
 [] 0 sd
 [60] 0 sd
% Ellipse
n 2889 2319 54 54 0 360 DrawEllipse gs 0.00 setgray ef gr gs col-1 s gr
 [] 0 sd
 [60] 0 sd
% Ellipse
n 1689 2319 54 54 0 360 DrawEllipse gs 0.00 setgray ef gr gs col-1 s gr
 [] 0 sd
 [60] 0 sd
% Ellipse
n 495 4665 54 54 0 360 DrawEllipse gs 0.00 setgray ef gr gs col-1 s gr
 [] 0 sd
 [60] 0 sd
% Ellipse
n 4095 4665 54 54 0 360 DrawEllipse gs 0.00 setgray ef gr gs col-1 s gr
 [] 0 sd
 [60] 0 sd
% Ellipse
n 2895 4665 54 54 0 360 DrawEllipse gs 0.00 setgray ef gr gs col-1 s gr
 [] 0 sd
 [60] 0 sd
% Ellipse
n 1695 4665 54 54 0 360 DrawEllipse gs 0.00 setgray ef gr gs col-1 s gr
 [] 0 sd
 [60] 0 sd
% Ellipse
n 495 3480 54 54 0 360 DrawEllipse gs 0.00 setgray ef gr gs col-1 s gr
 [] 0 sd
 [60] 0 sd
% Ellipse
n 4125 3510 54 54 0 360 DrawEllipse gs 0.00 setgray ef gr gs col-1 s gr
 [] 0 sd
% Polyline
n 6345 4995 m 9825 5010 l 7530 1440 l 6345 4995 l  cp gs col-1 s gr 
% Polyline
30.000 slw
n 7378 4993 m 8503 4993 l gs col-1 s gr 
% Polyline
7.500 slw
n 5819 3317 m 8114 5822 l 9749 2207 l 5774 3317 l gs col-1 s gr 
% Polyline
30.000 slw
n 6645 4215 m 7365 5025 l 7725 3825 l 7035 2985 l 6630 4185 l 6660 4155 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 442.00 199.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 8280 2625 m 9015 3795 l 8490 4935 l 7755 3825 l 8280 2655 l 8295 2640 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 517.00 175.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 7035 2970 m 8280 2625 l gs col-1 s gr 
% Polyline
n 489 3489 m 489 2334 l 4089 2334 l 4104 2334 l gs col-1 s gr 
% Polyline
n 1704 3474 m 1704 2349 l 1719 2334 l gs col-1 s gr 
% Polyline
n 2904 3489 m 2904 2364 l 2919 2364 l gs col-1 s gr 
% Polyline
n 495 3495 m 495 4650 l 4095 4650 l 4110 4650 l gs col-1 s gr 
% Polyline
n 1710 3510 m 1710 4635 l 1725 4650 l gs col-1 s gr 
% Polyline
7.500 slw
n 1695 4665 m 495 3465 l 495 3540 l gs col-1 s gr 
% Polyline
n 2895 4665 m 495 3465 l gs col-1 s gr 
% Polyline
n 4095 4665 m 495 3465 l gs col-1 s gr 
% Polyline
30.000 slw
n 2910 3495 m 2910 4620 l 2925 4620 l gs col-1 s gr 
% Polyline
n 4095 3510 m 4095 2355 l gs col-1 s gr 
% Polyline
7.500 slw
n 2895 2355 m 4080 4635 l 4080 4620 l gs col0 s gr 
% Polyline
30.000 slw
n 4095 4650 m 4095 3495 l 495 3495 l 480 3495 l gs col-1 s gr 
% Polyline
7.500 slw
n 3870 2340 m 3870 2565 l 4095 2565 l gs col-1 s gr 
% Polyline
n 2680 2451 m 2775 2655 l 2979 2560 l gs col-1 s gr 
% Polyline
n 2926 2332 m 510 3480 l gs col-1 s gr 
/Times-Italic ff 300.00 scf sf
6908 2859 m
gs 1 -1 sc (E) col-1 sh gr
/Times-Italic ff 300.00 scf sf
8478 5274 m
gs 1 -1 sc (B) col-1 sh gr
/Times-Italic ff 300.00 scf sf
7210 5274 m
gs 1 -1 sc (A) col-1 sh gr
/Times-Italic ff 300.00 scf sf
6365 4309 m
gs 1 -1 sc (F) col-1 sh gr
/Times-Italic ff 300.00 scf sf
9143 3825 m
gs 1 -1 sc (C) col-1 sh gr
/Times-Italic ff 300.00 scf sf
9747 5274 m
gs 1 -1 sc (R) col-1 sh gr
/Times-Italic ff 300.00 scf sf
5580 3282 m
gs 1 -1 sc (T) col-1 sh gr
/Times-Italic ff 300.00 scf sf
6123 5274 m
gs 1 -1 sc (P) col-1 sh gr
/Times-Italic ff 300.00 scf sf
8327 2512 m
gs 1 -1 sc (D) col-1 sh gr
/Times-Italic ff 300.00 scf sf
7608 3579 m
gs 1 -1 sc (O) col-1 sh gr
/Times-Italic ff 300.00 scf sf
7995 6150 m
gs 1 -1 sc (U) col-1 sh gr
/Times-Italic ff 300.00 scf sf
7408 1305 m
gs 1 -1 sc (Q) col-1 sh gr
/Times-Italic ff 300.00 scf sf
9807 2255 m
gs 1 -1 sc (S) col-1 sh gr
/Symbol ff 240.00 scf sf
6585 4920 m
gs 1 -1 sc (b) col0 sh gr
/Symbol ff 240.00 scf sf
7605 4905 m
gs 1 -1 sc (b) col0 sh gr
/Symbol ff 240.00 scf sf
8085 4905 m
gs 1 -1 sc (a) col0 sh gr
/Symbol ff 240.00 scf sf
9390 4920 m
gs 1 -1 sc (a) col0 sh gr
/Symbol ff 240.00 scf sf
7905 3000 m
gs 1 -1 sc (d) col0 sh gr
/Symbol ff 240.00 scf sf
9390 2565 m
gs 1 -1 sc (d) col0 sh gr
/Symbol ff 240.00 scf sf
6105 3435 m
gs 1 -1 sc (g) col-1 sh gr
/Symbol ff 240.00 scf sf
7320 3105 m
gs 1 -1 sc (g) col-1 sh gr
/Times-Italic ff 300.00 scf sf
345 4995 m
gs 1 -1 sc (A) col-1 sh gr
/Times-Italic ff 300.00 scf sf
4020 4995 m
gs 1 -1 sc (B) col-1 sh gr
/Times-Italic ff 300.00 scf sf
1575 4995 m
gs 1 -1 sc (M) col-1 sh gr
/Times-Italic ff 300.00 scf sf
2790 4995 m
gs 1 -1 sc (H) col-1 sh gr
/Times-Italic ff 300.00 scf sf
195 3405 m
gs 1 -1 sc (D) col-1 sh gr
/Times-Italic ff 300.00 scf sf
4185 3420 m
gs 1 -1 sc (C) col-1 sh gr
/Times-Roman ff 180.00 scf sf
3630 4455 m
gs 1 -1 sc (45) col0 sh gr
/Times-Roman ff 180.00 scf sf
1155 4530 m
gs 1 -1 sc (45) col0 sh gr
/Times-Roman ff 180.00 scf sf
1035 3465 m
gs 1 -1 sc (45) col0 sh gr
/Symbol ff 240.00 scf sf
2100 4545 m
gs 1 -1 sc (a) col0 sh gr
/Symbol ff 240.00 scf sf
2115 2565 m
gs 1 -1 sc (a) col0 sh gr
/Symbol ff 240.00 scf sf
3870 4065 m
gs 1 -1 sc (a) col0 sh gr
/Symbol ff 240.00 scf sf
3225 2625 m
gs 1 -1 sc (b) col0 sh gr
/Symbol ff 240.00 scf sf
645 3945 m
gs 1 -1 sc (b) col0 sh gr
/Symbol ff 240.00 scf sf
675 3210 m
gs 1 -1 sc (b) col0 sh gr
/Times-Italic ff 300.00 scf sf
1545 2190 m
gs 1 -1 sc (M) col-1 sh gr
/Times-Italic ff 300.00 scf sf
2820 2190 m
gs 1 -1 sc (H) col-1 sh gr
/Times-Italic ff 300.00 scf sf
4020 2190 m
gs 1 -1 sc (B) col-1 sh gr
/Times-Italic ff 300.00 scf sf
420 2190 m
gs 1 -1 sc (A) col-1 sh gr
/Times-Italic ff 180.00 scf sf
645 2265 m
gs 1 -1 sc (1) col-1 sh gr
/Times-Italic ff 180.00 scf sf
645 2265 m
gs 1 -1 sc (1) col-1 sh gr
/Times-Italic ff 180.00 scf sf
1845 2265 m
gs 1 -1 sc (1) col-1 sh gr
/Times-Italic ff 180.00 scf sf
3045 2265 m
gs 1 -1 sc (1) col-1 sh gr
/Times-Italic ff 180.00 scf sf
4245 2265 m
gs 1 -1 sc (1) col-1 sh gr
/Symbol ff 240.00 scf sf
3105 4545 m
gs 1 -1 sc (g) col-1 sh gr
$F2psEnd
rs
end
showpage

%%EndDocument

 endTexFig
 40 3860 a Fl(F)-8 b(urther,)28 b(note)h(that)g Fc(4)p
Fk(D)s(B)5 b(H)1097 3874 y Fj(1)1163 3860 y Fl(is)27
b(a)i(righ)m(t)f(isosceles)f(triangle.)40 b(Indeed,)28
b Fc(j)p Fk(D)s(H)2763 3874 y Fj(1)2802 3860 y Fc(j)d
Fl(=)g Fc(j)p Fk(B)5 b(H)3123 3874 y Fj(1)3162 3860 y
Fc(j)28 b Fl(\(Wh)m(y?)41 b(Because)-60 3968 y(of)31
b(t)m(w)m(o)g(of)g(the)f(ab)s(o)m(v)m(e)i(triangles)d(are)i(congruen)m
(t.)41 b(Whic)m(h)30 b(triangles)g(do)g(I)g(ha)m(v)m(e)i(in)d(mind?\),)
g(and)645 4121 y Fi(\\)p Fk(D)s(H)865 4135 y Fj(1)903
4121 y Fk(B)h Fl(=)25 b(180)1233 4084 y Fh(\016)1294
4121 y Fc(\000)20 b Fi(\\)p Fk(D)s(H)1605 4135 y Fj(1)1643
4121 y Fk(A)1711 4135 y Fj(1)1771 4121 y Fc(\000)g Fi(\\)p
Fk(B)1997 4135 y Fj(1)2036 4121 y Fk(H)2112 4135 y Fj(1)2151
4121 y Fk(B)30 b Fl(=)25 b(180)2481 4084 y Fh(\016)2542
4121 y Fc(\000)20 b Fk(\013)g Fc(\000)g Fk(\014)31 b
Fl(=)25 b(90)3070 4084 y Fh(\016)3110 4121 y Fk(:)-60
4275 y Fl(The)33 b(last)g(follo)m(ws)f(from)h(the)h(fact)g(that)g
Fk(\013)g Fl(and)e Fk(\014)39 b Fl(are)34 b(the)f(t)m(w)m(o)i(acute)f
(angles)f(in)f(righ)m(t)h Fc(4)p Fk(AH)7 b(D)s Fl(,)34
b(and)f(hence)-60 4382 y(they)e(sum)e(up)g(to)i(90)669
4349 y Fh(\016)710 4382 y Fl(.)40 b(Th)m(us,)30 b(in)f
Fc(4)p Fk(D)s(B)5 b(H)1446 4396 y Fj(1)1484 4382 y Fl(,)31
b Fi(\\)p Fk(D)s(B)5 b(H)1834 4396 y Fj(1)1897 4382 y
Fl(=)25 b(45)2083 4349 y Fh(\016)2123 4382 y Fl(.)40
4513 y(T)-8 b(o)29 b(\014nish)e(the)i(pro)s(of,)f(note)i(that)f(the)h
(three)f(w)m(an)m(ted)g(angles)g(are)h Fi(\\)p Fk(AM)10
b(D)27 b Fl(=)e(45)2867 4480 y Fh(\016)2937 4513 y Fl(\(Wh)m(y?)40
b Fc(4)p Fk(AM)10 b(D)32 b Fl(is)c(also)-60 4621 y(righ)m(t)34
b(isosceles,\))j Fi(\\)p Fk(AH)7 b(D)35 b Fl(=)d Fk(\013)k
Fl(and)e Fi(\\)p Fk(AB)5 b(D)35 b Fl(=)d Fk(\015)5 b
Fl(;)38 b(and)c(that)h(they)g(app)s(ear)f(\\miraculously",)h(in)e(the)i
(righ)m(t)-60 4729 y Fi(\\)p Fk(AB)5 b(B)217 4743 y Fj(1)256
4729 y Fl(:)1130 4882 y(90)1220 4845 y Fh(\016)1285 4882
y Fl(=)25 b Fi(\\)p Fk(AB)5 b(B)1658 4896 y Fj(1)1722
4882 y Fl(=)25 b Fk(\015)h Fl(+)20 b(45)2072 4845 y Fh(\016)2132
4882 y Fl(+)g Fk(\013:)p 2584 4882 4 62 v 2588 4824 55
4 v 2588 4882 V 2642 4882 4 62 v 40 5126 a Fl(No)m(w,)33
b(ev)m(ery)m(one)h(understands)d(that)i(the)f(construction)g(in)f(the)i
(ab)s(o)m(v)m(e)h(solution)d(is)g(really)g(a)i(v)m(ery)g(original)-60
5234 y(idea,)28 b(and)f(there)g(is)g(no)g(guaran)m(tee)i(that)f(ev)m
(ery)m(one)h(\(or)f(an)m(y)m(one!\))41 b(will)25 b(come)k(up)d(with)g
(this)h(same)g(idea)g(within)-60 5342 y(a)33 b(\\\014nite)f(amoun)m(t)g
(of)h(time",)g(as)g(mathematicians)f(lik)m(e)g(to)h(sa)m(y)-8
b(.)48 b(Th)m(us,)32 b(instead)f(w)m(e)i(prop)s(ose)f(here)g(a)h
(simple)-60 5450 y(trigonometric)27 b(solution,)g(whic)m(h)f(do)s
(esn't)h(require)e(an)m(y)j(original)d(thinking,)h(but)h(has)g(the)g
(dra)m(wbac)m(k)h(of)f(giving)-60 5558 y(us)j(no)g(idea)g(of)g
Fb(why)i Fl(these)f(angles)f(sum)f(up)g(to)j(90)1691
5525 y Fh(\016)1731 5558 y Fl(.)41 b(Enjo)m(y)30 b(it)g(nev)m
(ertheless.)p eop
%%Page: 11 11
11 10 bop 3769 43 a Fj(11)-60 241 y Fm(Alternativ)m(e)34
b(Solution:)41 b Fl(Since)28 b Fi(\\)p Fk(D)s(M)10 b(A)25
b Fl(=)g(45)1697 208 y Fh(\016)1768 241 y Fl(\(from)k(righ)m(t)h
(isosceles)g Fc(4)p Fk(AN)10 b(D)32 b Fl(as)e(ab)s(o)m(v)m(e,\))i(it)e
(su\016ces)f(to)-60 349 y(sho)m(w)34 b(that)h Fi(\\)p
Fk(AH)7 b(D)25 b Fl(+)e Fi(\\)p Fk(AB)5 b(D)33 b Fl(=)f(45)1290
316 y Fh(\016)1330 349 y Fl(.)52 b(Name)35 b(these)f(t)m(w)m(o)i
(angles)e(b)m(y)g Fk(\013)h Fl(and)e Fk(\015)39 b Fl(as)c(ab)s(o)m(v)m
(e.)53 b(Since)33 b(they)i(are)-60 457 y(b)s(oth)d(acute)i(angles,)g
(they)f(cannot)h(sum)e(up)f(to)j(more)f(than)g(180)2234
424 y Fh(\016)2275 457 y Fl(;)h(th)m(us,)g(if)e(w)m(e)h(sho)m(w)g(that)
g(tan)q(\()p Fk(\013)22 b Fl(+)g Fk(\015)5 b Fl(\))30
b(=)f(1,)-60 565 y(w)m(e)i(will)d(b)s(e)h(able)h(to)h(conclude)f(that)h
Fk(\013)21 b Fl(+)f Fk(\015)30 b Fl(=)25 b(45)1676 532
y Fh(\016)1716 565 y Fl(.)40 672 y(The)k(form)m(ula)h(for)g(the)h
(tangen)m(t)h(of)e(a)h(sum)e(comes)i(to)h(the)e(rescue:)1282
854 y(tan\()p Fk(\013)21 b Fl(+)f Fk(\015)5 b Fl(\))26
b(=)1893 793 y(tan)15 b Fk(\013)21 b Fl(+)f(tan)15 b
Fk(\015)p 1837 833 626 4 v 1837 916 a Fl(1)21 b Fc(\000)f
Fl(tan)15 b Fk(\013)21 b Fc(\001)f Fl(tan)c Fk(\015)2473
854 y(:)-60 1049 y Fl(F)-8 b(rom)21 b Fc(4)p Fk(AH)7
b(D)23 b Fl(and)c Fc(4)p Fk(AB)5 b(D)s Fl(,)22 b(resp)s(ectiv)m(ely)-8
b(,)22 b(w)m(e)f(\014nd)e(tan)c Fk(\013)26 b Fl(=)f Fc(j)p
Fk(AD)s Fc(j)q Fk(=)p Fc(j)p Fk(AH)7 b Fc(j)26 b Fl(=)f(1)p
Fk(=)p Fl(2)c(and)f(tan)c Fk(\015)30 b Fl(=)25 b Fc(j)p
Fk(AD)s Fc(j)p Fk(=)p Fc(j)p Fk(AB)5 b Fc(j)26 b Fl(=)-60
1157 y(1)p Fk(=)p Fl(3.)42 b(Substituting)28 b(1)p Fk(=)p
Fl(2)j(and)f(1)p Fk(=)p Fl(3)i(in)m(to)e(the)h(ab)s(o)m(v)m(e)g(tangen)
m(t)h(form)m(ula)e(yields)1347 1356 y(tan)q(\()p Fk(\013)21
b Fl(+)f Fk(\015)5 b Fl(\))25 b(=)1958 1294 y(1)p Fk(=)p
Fl(2)c(+)f(1)p Fk(=)p Fl(3)p 1902 1335 495 4 v 1902 1418
a(1)h Fc(\000)f Fl(1)p Fk(=)p Fl(2)i Fc(\001)e Fl(1)p
Fk(=)p Fl(3)2407 1356 y Fk(;)-60 1550 y Fl(whic)m(h)29
b(I)h(lea)m(v)m(e)i(to)f(the)g(diligen)m(t)d(reader)j(to)g(c)m(hec)m(k)
h(that)f(it)f(equals)f(1.)p 3774 1550 4 62 v 3778 1492
55 4 v 3778 1550 V 3832 1550 4 62 v -60 1735 a Fm(Question:)58
b Fl(Wh)m(y)40 b(did)d(I)i(use)g(tangen)m(ts?)68 b(W)-8
b(ould)39 b(it)g(b)s(e)f(easier)h(to)h(use)f(sines)f(or)h(cosines,)j
(or)d(some)h(other)-60 1843 y(trigonometric)30 b(function)f(of)i(the)f
(angles?)-60 2027 y Fm(Problem)42 b(2.)68 b(\(F)-9 b(or)42
b(the)g(Die-Hards\))36 b Fl(Let)h Fk(AB)5 b(C)i(D)s(E)e(F)49
b Fl(b)s(e)35 b(a)i(con)m(v)m(ex)i(hexagon.)59 b(Let)38
b Fk(P)s(;)15 b(Q;)36 b Fl(and)g Fk(R)i Fl(b)s(e)-60
2135 y(the)31 b(in)m(tersections)g(of)g(the)h(lines)d
Fk(AB)36 b Fl(and)31 b Fk(E)5 b(F)13 b Fl(,)31 b Fk(E)5
b(F)45 b Fl(and)31 b Fk(C)7 b(D)s Fl(,)30 b Fk(C)7 b(D)34
b Fl(and)c Fk(AB)5 b Fl(,)32 b(resp)s(ectiv)m(ely)-8
b(.)42 b(Let)32 b Fk(S;)15 b(T)8 b(;)15 b(U)42 b Fl(b)s(e)-60
2243 y(the)35 b(in)m(tersections)f(of)g(the)h(lines)e
Fk(B)5 b(C)40 b Fl(and)34 b Fk(D)s(E)5 b Fl(,)36 b Fk(D)s(E)k
Fl(and)34 b Fk(F)13 b(A)p Fl(,)36 b Fk(F)13 b(A)34 b
Fl(and)g Fk(B)5 b(C)i Fl(,)35 b(resp)s(ectiv)m(ely)-8
b(.)53 b(Sho)m(w)34 b(that)h(if)-60 2351 y Fk(AB)5 b(=P)13
b(R)34 b Fl(=)f Fk(C)7 b(D)s(=R)q(Q)33 b Fl(=)g Fk(E)5
b(F)j(=QP)13 b Fl(,)37 b(then)e Fk(B)5 b(C)t(=U)10 b(S)38
b Fl(=)33 b Fk(D)s(E)5 b(=S)g(T)47 b Fl(=)33 b Fk(F)13
b(A=T)g(U)d Fl(.)56 b(\(Math)36 b(Olympiad)c(Summer)-60
2459 y(Program'98,)g(Homew)m(ork)f(Assignmen)m(t.\))-60
2643 y Fm(Solution:)42 b Fl(The)31 b(giv)m(en)g(triple)e(ratios)i
(remind)e(us)i(suspiciously)d(of)j(a)g(criterion)f(for)h(similar)d
(triangles)j(\(SSS\).)-60 2751 y(It)i(is)f(as)h(if)f(someone)h(w)m(an)m
(ts)h(to)g(tell)e(us)g(that)h Fc(4)p Fk(P)13 b(R)q(Q)32
b Fl(is)g(similar)e(to)k(another)f(triangle)f(with)g(sides)f
Fk(AB)5 b Fl(,)34 b Fk(C)7 b(D)-60 2859 y Fl(and)30 b
Fk(E)5 b(F)13 b Fl(,)31 b(but)e(no)i(suc)m(h)f(similar)d(triangle)j
(can)h(b)s(e)e(found)h(on)g(the)g(giv)m(en)h(picture.)39
b(So,)31 b(let's)f(construct)h(it!)40 3005 y(Dra)m(w)d(a)h(line)e
(through)g Fk(A)i Fl(parallel)d(to)j Fk(P)13 b(Q)p Fl(,)29
b(and)e(another)i(line)d(through)i Fk(B)k Fl(parallel)27
b(to)i Fk(R)q(Q)p Fl(,)f(and)g(let)g(them)-60 3113 y(in)m(tersect)i(in)
e(p)s(oin)m(t)g Fk(O)k Fl(\(W)-8 b(ould)29 b(they)h(in)m(tersect?)40
b(Wh)m(y?\))h(Connect)30 b Fk(O)i Fl(with)c Fk(E)34 b
Fl(and)29 b(with)f Fk(D)s Fl(.)40 b(Our)28 b(goal)i(is)e(to)-60
3221 y(pro)m(v)m(e)35 b(that)h Fk(AO)s(E)5 b(F)48 b Fl(and)34
b Fk(B)5 b(C)i(D)s(O)36 b Fl(are)f(b)s(oth)f(parallelograms,)g(and)g
(use)h(this)e(to)i(pro)m(v)m(e)h(what)e(is)g(w)m(an)m(ted)h(in)-60
3329 y(the)c(problem,)e(but)g(let's)i(not)f(get)i(ahead)e(of)h(ourselv)
m(es,)f(and)g(let's)h(do)f(ev)m(erything)g(step)g(b)m(y)h(step.)40
3456 y(F)-8 b(or)30 b(starters,)g(do)f(y)m(ou)g(see)h(an)m(y)g(similar)
c(triangles?)39 b(By)30 b(construction,)f Fc(4)p Fk(AB)5
b(O)32 b Fl(and)c Fc(4)p Fk(P)13 b(QR)30 b Fl(are)f(similar:)-60
3564 y(c)m(hec)m(k)j(out)e(their)g(equal)f(angles)i Fk(\013)p
Fl('s)f(and)g Fk(\014)5 b Fl('s)30 b(from)g(the)h(parallel)d(lines)g
(in)h(our)h(construction.)40 b(Therefore,)31 b(the)-60
3671 y(sides)e(of)i(these)g(t)m(w)m(o)g(triangles)f(are)g(prop)s
(ortionate,)g(i.e.)1267 3818 y Fk(AB)5 b(=P)13 b(R)26
b Fl(=)f Fk(B)5 b(O)s(=R)q(Q)25 b Fl(=)g Fk(O)s(A=QP)s(:)-60
3964 y Fl(But)31 b(w)m(e)f(ha)m(v)m(e)i(b)m(y)e(h)m(yp)s(othesis)f
(that)1266 4110 y Fk(AB)5 b(=P)13 b(R)26 b Fl(=)f Fk(C)7
b(D)s(=R)q(Q)24 b Fl(=)h Fk(E)5 b(F)j(=QP)s(:)-60 4256
y Fl(Since)38 b(the)h(\014rst)f(ratio)h(is)f(the)i(same)f(in)f(b)s(oth)
g(equations,)j(all)d(those)h(\014v)m(e)h(ratios)e(are)i(equal,)h(in)c
(particular,)-60 4364 y Fk(B)5 b(O)s(=R)q(Q)25 b Fl(=)g
Fk(C)7 b(D)s(=R)q(Q)29 b Fl(and)h Fk(O)s(A=QP)39 b Fl(=)25
b Fk(E)5 b(F)j(=QP)13 b Fl(.)41 b(W)-8 b(e)32 b(conclude)d(that)i
Fk(B)5 b(O)28 b Fl(=)d Fk(C)7 b(D)32 b Fl(and)e Fk(O)s(A)25
b Fl(=)g Fk(E)5 b(F)13 b Fl(.)40 4472 y(Recall)35 b(no)m(w)h(that)g(b)m
(y)f(construction)h Fk(B)5 b(O)38 b Fl(is)c(parallel)g(to)j
Fk(C)7 b(D)s Fl(,)36 b(and)f Fk(O)s(A)h Fl(is)f(parallel)e(to)k
Fk(E)5 b(F)13 b Fl(.)57 b(Therefore,)-60 4580 y(indeed)29
b(w)m(e)i(do)f(ha)m(v)m(e)i(parallelograms)d Fk(AO)s(E)5
b(F)43 b Fl(and)30 b Fk(B)5 b(C)i(D)s(O)s Fl(.)40 4688
y(No)m(w,)28 b(w)m(e)g(can)g(pla)m(y)e(the)i(same)g(game)g(for)f
Fc(4)p Fk(T)13 b(S)5 b(U)36 b Fl(and)27 b Fc(4)p Fk(E)5
b(O)s(D)s Fl(,)28 b(b)m(y)f(rev)m(ersing)g(the)g(ab)s(o)m(v)m(e)i
(argumen)m(t.)40 b(Are)-60 4796 y(they)26 b(similar?)36
b(Since)25 b Fk(E)5 b(O)29 b Fl(and)c Fk(T)13 b(U)36
b Fl(are)26 b(parallel,)f(and)g Fk(D)s(O)k Fl(and)c Fk(S)5
b(U)35 b Fl(are)27 b(parallel)d(\(from)h(the)h(parallelograms)-60
4904 y(ab)s(o)m(v)m(e\))39 b(w)m(e)f(conclude)f(that)h(the)g(t)m(w)m(o)
h(triangles)d(ha)m(v)m(e)j(equal)e(angles)h Fk(\015)5
b Fl('s)37 b(and)g Fk(\016)s Fl('s,)k(and)c(therefore)h(they)g(are)-60
5011 y(indeed)29 b(similar.)40 5119 y(Th)m(us,)g(the)i(sides)e(of)h
Fc(4)p Fk(T)13 b(S)5 b(U)40 b Fl(and)30 b Fc(4)p Fk(E)5
b(O)s(D)33 b Fl(are)e(prop)s(ortionate:)1272 5266 y Fk(O)s(D)s(=U)10
b(S)31 b Fl(=)25 b Fk(D)s(E)5 b(=S)g(T)38 b Fl(=)25 b
Fk(O)s(E)5 b(=T)13 b(U:)-60 5412 y Fl(But)31 b Fk(O)s(D)c
Fl(=)e Fk(B)5 b(C)37 b Fl(and)29 b Fk(O)s(E)i Fl(=)25
b Fk(F)13 b(A)30 b Fl(\(again)h(from)f(the)h(parallelograms\),)e(th)m
(us)1107 5558 y Fk(B)5 b(C)t(=U)10 b(S)30 b Fl(=)25 b
Fk(D)s(E)5 b(=S)g(T)38 b Fl(=)25 b Fk(F)13 b(A=T)g(U:)p
2607 5558 V 2611 5500 55 4 v 2611 5558 V 2665 5558 4
62 v eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
